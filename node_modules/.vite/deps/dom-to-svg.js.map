{
  "version": 3,
  "sources": ["../../picocolors/picocolors.browser.js", "../../postcss/lib/css-syntax-error.js", "../../postcss/lib/stringifier.js", "../../postcss/lib/stringify.js", "../../postcss/lib/symbols.js", "../../postcss/lib/node.js", "../../postcss/lib/comment.js", "../../postcss/lib/declaration.js", "../../postcss/lib/container.js", "../../postcss/lib/at-rule.js", "../../postcss/lib/document.js", "../../nanoid/non-secure/index.cjs", "browser-external:path", "browser-external:source-map-js", "browser-external:url", "browser-external:fs", "../../postcss/lib/previous-map.js", "../../postcss/lib/input.js", "../../postcss/lib/root.js", "../../postcss/lib/list.js", "../../postcss/lib/rule.js", "../../postcss/lib/fromJSON.js", "../../postcss/lib/map-generator.js", "../../postcss/lib/tokenize.js", "../../postcss/lib/parser.js", "../../postcss/lib/parse.js", "../../postcss/lib/warning.js", "../../postcss/lib/result.js", "../../postcss/lib/warn-once.js", "../../postcss/lib/lazy-result.js", "../../postcss/lib/no-work-result.js", "../../postcss/lib/processor.js", "../../postcss/lib/postcss.js", "../../postcss-value-parser/lib/parse.js", "../../postcss-value-parser/lib/walk.js", "../../postcss-value-parser/lib/stringify.js", "../../postcss-value-parser/lib/unit.js", "../../postcss-value-parser/lib/index.js", "../../gradient-parser/build/node.js", "../../postcss/lib/postcss.mjs", "../../dom-to-svg/src/index.ts", "../../dom-to-svg/src/css.ts", "../../dom-to-svg/src/dom.ts", "../../dom-to-svg/src/stacking.ts", "../../dom-to-svg/src/element.ts", "../../dom-to-svg/src/accessibility.ts", "../../dom-to-svg/src/gradients.ts", "../../dom-to-svg/src/svg.ts", "../../dom-to-svg/src/util.ts", "../../dom-to-svg/src/text.ts", "../../dom-to-svg/src/traversal.ts", "../../dom-to-svg/src/inline.ts"],
  "sourcesContent": ["var x=String;\nvar create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x,blackBright:x,redBright:x,greenBright:x,yellowBright:x,blueBright:x,magentaBright:x,cyanBright:x,whiteBright:x,bgBlackBright:x,bgRedBright:x,bgGreenBright:x,bgYellowBright:x,bgBlueBright:x,bgMagentaBright:x,bgCyanBright:x,bgWhiteBright:x}};\nmodule.exports=create();\nmodule.exports.createColors = create;\n", "'use strict'\n\nlet pico = require('picocolors')\n\nlet terminalHighlight = require('./terminal-highlight')\n\nclass CssSyntaxError extends Error {\n  constructor(message, line, column, source, file, plugin) {\n    super(message)\n    this.name = 'CssSyntaxError'\n    this.reason = message\n\n    if (file) {\n      this.file = file\n    }\n    if (source) {\n      this.source = source\n    }\n    if (plugin) {\n      this.plugin = plugin\n    }\n    if (typeof line !== 'undefined' && typeof column !== 'undefined') {\n      if (typeof line === 'number') {\n        this.line = line\n        this.column = column\n      } else {\n        this.line = line.line\n        this.column = line.column\n        this.endLine = column.line\n        this.endColumn = column.column\n      }\n    }\n\n    this.setMessage()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CssSyntaxError)\n    }\n  }\n\n  setMessage() {\n    this.message = this.plugin ? this.plugin + ': ' : ''\n    this.message += this.file ? this.file : '<css input>'\n    if (typeof this.line !== 'undefined') {\n      this.message += ':' + this.line + ':' + this.column\n    }\n    this.message += ': ' + this.reason\n  }\n\n  showSourceCode(color) {\n    if (!this.source) return ''\n\n    let css = this.source\n    if (color == null) color = pico.isColorSupported\n\n    let aside = text => text\n    let mark = text => text\n    let highlight = text => text\n    if (color) {\n      let { bold, gray, red } = pico.createColors(true)\n      mark = text => bold(red(text))\n      aside = text => gray(text)\n      if (terminalHighlight) {\n        highlight = text => terminalHighlight(text)\n      }\n    }\n\n    let lines = css.split(/\\r?\\n/)\n    let start = Math.max(this.line - 3, 0)\n    let end = Math.min(this.line + 2, lines.length)\n    let maxWidth = String(end).length\n\n    return lines\n      .slice(start, end)\n      .map((line, index) => {\n        let number = start + 1 + index\n        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '\n        if (number === this.line) {\n          if (line.length > 160) {\n            let padding = 20\n            let subLineStart = Math.max(0, this.column - padding)\n            let subLineEnd = Math.max(\n              this.column + padding,\n              this.endColumn + padding\n            )\n            let subLine = line.slice(subLineStart, subLineEnd)\n\n            let spacing =\n              aside(gutter.replace(/\\d/g, ' ')) +\n              line\n                .slice(0, Math.min(this.column - 1, padding - 1))\n                .replace(/[^\\t]/g, ' ')\n\n            return (\n              mark('>') +\n              aside(gutter) +\n              highlight(subLine) +\n              '\\n ' +\n              spacing +\n              mark('^')\n            )\n          }\n\n          let spacing =\n            aside(gutter.replace(/\\d/g, ' ')) +\n            line.slice(0, this.column - 1).replace(/[^\\t]/g, ' ')\n\n          return (\n            mark('>') +\n            aside(gutter) +\n            highlight(line) +\n            '\\n ' +\n            spacing +\n            mark('^')\n          )\n        }\n\n        return ' ' + aside(gutter) + highlight(line)\n      })\n      .join('\\n')\n  }\n\n  toString() {\n    let code = this.showSourceCode()\n    if (code) {\n      code = '\\n\\n' + code + '\\n'\n    }\n    return this.name + ': ' + this.message + code\n  }\n}\n\nmodule.exports = CssSyntaxError\nCssSyntaxError.default = CssSyntaxError\n", "'use strict'\n\nconst DEFAULT_RAW = {\n  after: '\\n',\n  beforeClose: '\\n',\n  beforeComment: '\\n',\n  beforeDecl: '\\n',\n  beforeOpen: ' ',\n  beforeRule: '\\n',\n  colon: ': ',\n  commentLeft: ' ',\n  commentRight: ' ',\n  emptyBody: '',\n  indent: '    ',\n  semicolon: false\n}\n\nfunction capitalize(str) {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\nclass Stringifier {\n  constructor(builder) {\n    this.builder = builder\n  }\n\n  atrule(node, semicolon) {\n    let name = '@' + node.name\n    let params = node.params ? this.rawValue(node, 'params') : ''\n\n    if (typeof node.raws.afterName !== 'undefined') {\n      name += node.raws.afterName\n    } else if (params) {\n      name += ' '\n    }\n\n    if (node.nodes) {\n      this.block(node, name + params)\n    } else {\n      let end = (node.raws.between || '') + (semicolon ? ';' : '')\n      this.builder(name + params + end, node)\n    }\n  }\n\n  beforeAfter(node, detect) {\n    let value\n    if (node.type === 'decl') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (node.type === 'comment') {\n      value = this.raw(node, null, 'beforeComment')\n    } else if (detect === 'before') {\n      value = this.raw(node, null, 'beforeRule')\n    } else {\n      value = this.raw(node, null, 'beforeClose')\n    }\n\n    let buf = node.parent\n    let depth = 0\n    while (buf && buf.type !== 'root') {\n      depth += 1\n      buf = buf.parent\n    }\n\n    if (value.includes('\\n')) {\n      let indent = this.raw(node, null, 'indent')\n      if (indent.length) {\n        for (let step = 0; step < depth; step++) value += indent\n      }\n    }\n\n    return value\n  }\n\n  block(node, start) {\n    let between = this.raw(node, 'between', 'beforeOpen')\n    this.builder(start + between + '{', node, 'start')\n\n    let after\n    if (node.nodes && node.nodes.length) {\n      this.body(node)\n      after = this.raw(node, 'after')\n    } else {\n      after = this.raw(node, 'after', 'emptyBody')\n    }\n\n    if (after) this.builder(after)\n    this.builder('}', node, 'end')\n  }\n\n  body(node) {\n    let last = node.nodes.length - 1\n    while (last > 0) {\n      if (node.nodes[last].type !== 'comment') break\n      last -= 1\n    }\n\n    let semicolon = this.raw(node, 'semicolon')\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i]\n      let before = this.raw(child, 'before')\n      if (before) this.builder(before)\n      this.stringify(child, last !== i || semicolon)\n    }\n  }\n\n  comment(node) {\n    let left = this.raw(node, 'left', 'commentLeft')\n    let right = this.raw(node, 'right', 'commentRight')\n    this.builder('/*' + left + node.text + right + '*/', node)\n  }\n\n  decl(node, semicolon) {\n    let between = this.raw(node, 'between', 'colon')\n    let string = node.prop + between + this.rawValue(node, 'value')\n\n    if (node.important) {\n      string += node.raws.important || ' !important'\n    }\n\n    if (semicolon) string += ';'\n    this.builder(string, node)\n  }\n\n  document(node) {\n    this.body(node)\n  }\n\n  raw(node, own, detect) {\n    let value\n    if (!detect) detect = own\n\n    // Already had\n    if (own) {\n      value = node.raws[own]\n      if (typeof value !== 'undefined') return value\n    }\n\n    let parent = node.parent\n\n    if (detect === 'before') {\n      // Hack for first rule in CSS\n      if (!parent || (parent.type === 'root' && parent.first === node)) {\n        return ''\n      }\n\n      // `root` nodes in `document` should use only their own raws\n      if (parent && parent.type === 'document') {\n        return ''\n      }\n    }\n\n    // Floating child without parent\n    if (!parent) return DEFAULT_RAW[detect]\n\n    // Detect style by other nodes\n    let root = node.root()\n    if (!root.rawCache) root.rawCache = {}\n    if (typeof root.rawCache[detect] !== 'undefined') {\n      return root.rawCache[detect]\n    }\n\n    if (detect === 'before' || detect === 'after') {\n      return this.beforeAfter(node, detect)\n    } else {\n      let method = 'raw' + capitalize(detect)\n      if (this[method]) {\n        value = this[method](root, node)\n      } else {\n        root.walk(i => {\n          value = i.raws[own]\n          if (typeof value !== 'undefined') return false\n        })\n      }\n    }\n\n    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]\n\n    root.rawCache[detect] = value\n    return value\n  }\n\n  rawBeforeClose(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length > 0) {\n        if (typeof i.raws.after !== 'undefined') {\n          value = i.raws.after\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawBeforeComment(root, node) {\n    let value\n    root.walkComments(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeDecl')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeDecl(root, node) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.before !== 'undefined') {\n        value = i.raws.before\n        if (value.includes('\\n')) {\n          value = value.replace(/[^\\n]+$/, '')\n        }\n        return false\n      }\n    })\n    if (typeof value === 'undefined') {\n      value = this.raw(node, null, 'beforeRule')\n    } else if (value) {\n      value = value.replace(/\\S/g, '')\n    }\n    return value\n  }\n\n  rawBeforeOpen(root) {\n    let value\n    root.walk(i => {\n      if (i.type !== 'decl') {\n        value = i.raws.between\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawBeforeRule(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && (i.parent !== root || root.first !== i)) {\n        if (typeof i.raws.before !== 'undefined') {\n          value = i.raws.before\n          if (value.includes('\\n')) {\n            value = value.replace(/[^\\n]+$/, '')\n          }\n          return false\n        }\n      }\n    })\n    if (value) value = value.replace(/\\S/g, '')\n    return value\n  }\n\n  rawColon(root) {\n    let value\n    root.walkDecls(i => {\n      if (typeof i.raws.between !== 'undefined') {\n        value = i.raws.between.replace(/[^\\s:]/g, '')\n        return false\n      }\n    })\n    return value\n  }\n\n  rawEmptyBody(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length === 0) {\n        value = i.raws.after\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawIndent(root) {\n    if (root.raws.indent) return root.raws.indent\n    let value\n    root.walk(i => {\n      let p = i.parent\n      if (p && p !== root && p.parent && p.parent === root) {\n        if (typeof i.raws.before !== 'undefined') {\n          let parts = i.raws.before.split('\\n')\n          value = parts[parts.length - 1]\n          value = value.replace(/\\S/g, '')\n          return false\n        }\n      }\n    })\n    return value\n  }\n\n  rawSemicolon(root) {\n    let value\n    root.walk(i => {\n      if (i.nodes && i.nodes.length && i.last.type === 'decl') {\n        value = i.raws.semicolon\n        if (typeof value !== 'undefined') return false\n      }\n    })\n    return value\n  }\n\n  rawValue(node, prop) {\n    let value = node[prop]\n    let raw = node.raws[prop]\n    if (raw && raw.value === value) {\n      return raw.raw\n    }\n\n    return value\n  }\n\n  root(node) {\n    this.body(node)\n    if (node.raws.after) this.builder(node.raws.after)\n  }\n\n  rule(node) {\n    this.block(node, this.rawValue(node, 'selector'))\n    if (node.raws.ownSemicolon) {\n      this.builder(node.raws.ownSemicolon, node, 'end')\n    }\n  }\n\n  stringify(node, semicolon) {\n    /* c8 ignore start */\n    if (!this[node.type]) {\n      throw new Error(\n        'Unknown AST node type ' +\n          node.type +\n          '. ' +\n          'Maybe you need to change PostCSS stringifier.'\n      )\n    }\n    /* c8 ignore stop */\n    this[node.type](node, semicolon)\n  }\n}\n\nmodule.exports = Stringifier\nStringifier.default = Stringifier\n", "'use strict'\n\nlet Stringifier = require('./stringifier')\n\nfunction stringify(node, builder) {\n  let str = new Stringifier(builder)\n  str.stringify(node)\n}\n\nmodule.exports = stringify\nstringify.default = stringify\n", "'use strict'\n\nmodule.exports.isClean = Symbol('isClean')\n\nmodule.exports.my = Symbol('my')\n", "'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Stringifier = require('./stringifier')\nlet stringify = require('./stringify')\nlet { isClean, my } = require('./symbols')\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue\n    }\n    if (i === 'proxyCache') continue\n    let value = obj[i]\n    let type = typeof value\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent\n    } else if (i === 'source') {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned))\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value)\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nfunction sourceOffset(inputCSS, position) {\n  // Not all custom syntaxes support `offset` in `source.start` and `source.end`\n  if (position && typeof position.offset !== 'undefined') {\n    return position.offset\n  }\n\n  let column = 1\n  let line = 1\n  let offset = 0\n\n  for (let i = 0; i < inputCSS.length; i++) {\n    if (line === position.line && column === position.column) {\n      offset = i\n      break\n    }\n\n    if (inputCSS[i] === '\\n') {\n      column = 1\n      line += 1\n    } else {\n      column += 1\n    }\n  }\n\n  return offset\n}\n\nclass Node {\n  get proxyOf() {\n    return this\n  }\n\n  constructor(defaults = {}) {\n    this.raws = {}\n    this[isClean] = false\n    this[my] = true\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = []\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone())\n          } else {\n            this.append(node)\n          }\n        }\n      } else {\n        this[name] = defaults[name]\n      }\n    }\n  }\n\n  addToError(error) {\n    error.postcssNode = this\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source\n      error.stack = error.stack.replace(\n        /\\n\\s{4}at /,\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\n      )\n    }\n    return error\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add)\n    return this\n  }\n\n  assign(overrides = {}) {\n    for (let name in overrides) {\n      this[name] = overrides[name]\n    }\n    return this\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add)\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before\n    delete this.raws.after\n    if (!keepBetween) delete this.raws.between\n  }\n\n  clone(overrides = {}) {\n    let cloned = cloneNode(this)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  cloneAfter(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertAfter(this, cloned)\n    return cloned\n  }\n\n  cloneBefore(overrides = {}) {\n    let cloned = this.clone(overrides)\n    this.parent.insertBefore(this, cloned)\n    return cloned\n  }\n\n  error(message, opts = {}) {\n    if (this.source) {\n      let { end, start } = this.rangeBy(opts)\n      return this.source.input.error(\n        message,\n        { column: start.column, line: start.line },\n        { column: end.column, line: end.line },\n        opts\n      )\n    }\n    return new CssSyntaxError(message)\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (\n          prop === 'prop' ||\n          prop === 'value' ||\n          prop === 'name' ||\n          prop === 'params' ||\n          prop === 'important' ||\n          /* c8 ignore next */\n          prop === 'text'\n        ) {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  /* c8 ignore next 3 */\n  markClean() {\n    this[isClean] = true\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false\n      let next = this\n      while ((next = next.parent)) {\n        next[isClean] = false\n      }\n    }\n  }\n\n  next() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index + 1]\n  }\n\n  positionBy(opts = {}) {\n    let pos = this.source.start\n    if (opts.index) {\n      pos = this.positionInside(opts.index)\n    } else if (opts.word) {\n      let inputString =\n        'document' in this.source.input\n          ? this.source.input.document\n          : this.source.input.css\n      let stringRepresentation = inputString.slice(\n        sourceOffset(inputString, this.source.start),\n        sourceOffset(inputString, this.source.end)\n      )\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) pos = this.positionInside(index)\n    }\n    return pos\n  }\n\n  positionInside(index) {\n    let column = this.source.start.column\n    let line = this.source.start.line\n    let inputString =\n      'document' in this.source.input\n        ? this.source.input.document\n        : this.source.input.css\n    let offset = sourceOffset(inputString, this.source.start)\n    let end = offset + index\n\n    for (let i = offset; i < end; i++) {\n      if (inputString[i] === '\\n') {\n        column = 1\n        line += 1\n      } else {\n        column += 1\n      }\n    }\n\n    return { column, line, offset: end }\n  }\n\n  prev() {\n    if (!this.parent) return undefined\n    let index = this.parent.index(this)\n    return this.parent.nodes[index - 1]\n  }\n\n  rangeBy(opts = {}) {\n    let inputString =\n      'document' in this.source.input\n        ? this.source.input.document\n        : this.source.input.css\n    let start = {\n      column: this.source.start.column,\n      line: this.source.start.line,\n      offset: sourceOffset(inputString, this.source.start)\n    }\n    let end = this.source.end\n      ? {\n          column: this.source.end.column + 1,\n          line: this.source.end.line,\n          offset:\n            typeof this.source.end.offset === 'number'\n              ? // `source.end.offset` is exclusive, so we don't need to add 1\n                this.source.end.offset\n              : // Since line/column in this.source.end is inclusive,\n                // the `sourceOffset(... , this.source.end)` returns an inclusive offset.\n                // So, we add 1 to convert it to exclusive.\n                sourceOffset(inputString, this.source.end) + 1\n        }\n      : {\n          column: start.column + 1,\n          line: start.line,\n          offset: start.offset + 1\n        }\n\n    if (opts.word) {\n      let stringRepresentation = inputString.slice(\n        sourceOffset(inputString, this.source.start),\n        sourceOffset(inputString, this.source.end)\n      )\n      let index = stringRepresentation.indexOf(opts.word)\n      if (index !== -1) {\n        start = this.positionInside(index)\n        end = this.positionInside(index + opts.word.length)\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          column: opts.start.column,\n          line: opts.start.line,\n          offset: sourceOffset(inputString, opts.start)\n        }\n      } else if (opts.index) {\n        start = this.positionInside(opts.index)\n      }\n\n      if (opts.end) {\n        end = {\n          column: opts.end.column,\n          line: opts.end.line,\n          offset: sourceOffset(inputString, opts.end)\n        }\n      } else if (typeof opts.endIndex === 'number') {\n        end = this.positionInside(opts.endIndex)\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1)\n      }\n    }\n\n    if (\n      end.line < start.line ||\n      (end.line === start.line && end.column <= start.column)\n    ) {\n      end = {\n        column: start.column + 1,\n        line: start.line,\n        offset: start.offset + 1\n      }\n    }\n\n    return { end, start }\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier()\n    return str.raw(this, prop, defaultType)\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this)\n    }\n    this.parent = undefined\n    return this\n  }\n\n  replaceWith(...nodes) {\n    if (this.parent) {\n      let bookmark = this\n      let foundSelf = false\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node)\n          bookmark = node\n        } else {\n          this.parent.insertBefore(bookmark, node)\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove()\n      }\n    }\n\n    return this\n  }\n\n  root() {\n    let result = this\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent\n    }\n    return result\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {}\n    let emitInputs = inputs == null\n    inputs = inputs || new Map()\n    let inputsNextIndex = 0\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue\n      }\n      if (name === 'parent' || name === 'proxyCache') continue\n      let value = this[name]\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs)\n          } else {\n            return i\n          }\n        })\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs)\n      } else if (name === 'source') {\n        if (value == null) continue\n        let inputId = inputs.get(value.input)\n        if (inputId == null) {\n          inputId = inputsNextIndex\n          inputs.set(value.input, inputsNextIndex)\n          inputsNextIndex++\n        }\n        fixed[name] = {\n          end: value.end,\n          inputId,\n          start: value.start\n        }\n      } else {\n        fixed[name] = value\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\n    }\n\n    return fixed\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\n    }\n    return this.proxyCache\n  }\n\n  toString(stringifier = stringify) {\n    if (stringifier.stringify) stringifier = stringifier.stringify\n    let result = ''\n    stringifier(this, i => {\n      result += i\n    })\n    return result\n  }\n\n  warn(result, text, opts = {}) {\n    let data = { node: this }\n    for (let i in opts) data[i] = opts[i]\n    return result.warn(text, data)\n  }\n}\n\nmodule.exports = Node\nNode.default = Node\n", "'use strict'\n\nlet Node = require('./node')\n\nclass Comment extends Node {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'comment'\n  }\n}\n\nmodule.exports = Comment\nComment.default = Comment\n", "'use strict'\n\nlet Node = require('./node')\n\nclass Declaration extends Node {\n  get variable() {\n    return this.prop.startsWith('--') || this.prop[0] === '$'\n  }\n\n  constructor(defaults) {\n    if (\n      defaults &&\n      typeof defaults.value !== 'undefined' &&\n      typeof defaults.value !== 'string'\n    ) {\n      defaults = { ...defaults, value: String(defaults.value) }\n    }\n    super(defaults)\n    this.type = 'decl'\n  }\n}\n\nmodule.exports = Declaration\nDeclaration.default = Declaration\n", "'use strict'\n\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Node = require('./node')\nlet { isClean, my } = require('./symbols')\n\nlet AtRule, parse, Root, Rule\n\nfunction cleanSource(nodes) {\n  return nodes.map(i => {\n    if (i.nodes) i.nodes = cleanSource(i.nodes)\n    delete i.source\n    return i\n  })\n}\n\nfunction markTreeDirty(node) {\n  node[isClean] = false\n  if (node.proxyOf.nodes) {\n    for (let i of node.proxyOf.nodes) {\n      markTreeDirty(i)\n    }\n  }\n}\n\nclass Container extends Node {\n  get first() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[0]\n  }\n\n  get last() {\n    if (!this.proxyOf.nodes) return undefined\n    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]\n  }\n\n  append(...children) {\n    for (let child of children) {\n      let nodes = this.normalize(child, this.last)\n      for (let node of nodes) this.proxyOf.nodes.push(node)\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  cleanRaws(keepBetween) {\n    super.cleanRaws(keepBetween)\n    if (this.nodes) {\n      for (let node of this.nodes) node.cleanRaws(keepBetween)\n    }\n  }\n\n  each(callback) {\n    if (!this.proxyOf.nodes) return undefined\n    let iterator = this.getIterator()\n\n    let index, result\n    while (this.indexes[iterator] < this.proxyOf.nodes.length) {\n      index = this.indexes[iterator]\n      result = callback(this.proxyOf.nodes[index], index)\n      if (result === false) break\n\n      this.indexes[iterator] += 1\n    }\n\n    delete this.indexes[iterator]\n    return result\n  }\n\n  every(condition) {\n    return this.nodes.every(condition)\n  }\n\n  getIterator() {\n    if (!this.lastEach) this.lastEach = 0\n    if (!this.indexes) this.indexes = {}\n\n    this.lastEach += 1\n    let iterator = this.lastEach\n    this.indexes[iterator] = 0\n\n    return iterator\n  }\n\n  getProxyProcessor() {\n    return {\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node\n        } else if (!node[prop]) {\n          return node[prop]\n        } else if (\n          prop === 'each' ||\n          (typeof prop === 'string' && prop.startsWith('walk'))\n        ) {\n          return (...args) => {\n            return node[prop](\n              ...args.map(i => {\n                if (typeof i === 'function') {\n                  return (child, index) => i(child.toProxy(), index)\n                } else {\n                  return i\n                }\n              })\n            )\n          }\n        } else if (prop === 'every' || prop === 'some') {\n          return cb => {\n            return node[prop]((child, ...other) =>\n              cb(child.toProxy(), ...other)\n            )\n          }\n        } else if (prop === 'root') {\n          return () => node.root().toProxy()\n        } else if (prop === 'nodes') {\n          return node.nodes.map(i => i.toProxy())\n        } else if (prop === 'first' || prop === 'last') {\n          return node[prop].toProxy()\n        } else {\n          return node[prop]\n        }\n      },\n\n      set(node, prop, value) {\n        if (node[prop] === value) return true\n        node[prop] = value\n        if (prop === 'name' || prop === 'params' || prop === 'selector') {\n          node.markDirty()\n        }\n        return true\n      }\n    }\n  }\n\n  index(child) {\n    if (typeof child === 'number') return child\n    if (child.proxyOf) child = child.proxyOf\n    return this.proxyOf.nodes.indexOf(child)\n  }\n\n  insertAfter(exist, add) {\n    let existIndex = this.index(exist)\n    let nodes = this.normalize(add, this.proxyOf.nodes[existIndex]).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex + 1, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex < index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  insertBefore(exist, add) {\n    let existIndex = this.index(exist)\n    let type = existIndex === 0 ? 'prepend' : false\n    let nodes = this.normalize(\n      add,\n      this.proxyOf.nodes[existIndex],\n      type\n    ).reverse()\n    existIndex = this.index(exist)\n    for (let node of nodes) this.proxyOf.nodes.splice(existIndex, 0, node)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (existIndex <= index) {\n        this.indexes[id] = index + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  normalize(nodes, sample) {\n    if (typeof nodes === 'string') {\n      nodes = cleanSource(parse(nodes).nodes)\n    } else if (typeof nodes === 'undefined') {\n      nodes = []\n    } else if (Array.isArray(nodes)) {\n      nodes = nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type === 'root' && this.type !== 'document') {\n      nodes = nodes.nodes.slice(0)\n      for (let i of nodes) {\n        if (i.parent) i.parent.removeChild(i, 'ignore')\n      }\n    } else if (nodes.type) {\n      nodes = [nodes]\n    } else if (nodes.prop) {\n      if (typeof nodes.value === 'undefined') {\n        throw new Error('Value field is missed in node creation')\n      } else if (typeof nodes.value !== 'string') {\n        nodes.value = String(nodes.value)\n      }\n      nodes = [new Declaration(nodes)]\n    } else if (nodes.selector || nodes.selectors) {\n      nodes = [new Rule(nodes)]\n    } else if (nodes.name) {\n      nodes = [new AtRule(nodes)]\n    } else if (nodes.text) {\n      nodes = [new Comment(nodes)]\n    } else {\n      throw new Error('Unknown node type in node creation')\n    }\n\n    let processed = nodes.map(i => {\n      /* c8 ignore next */\n      if (!i[my]) Container.rebuild(i)\n      i = i.proxyOf\n      if (i.parent) i.parent.removeChild(i)\n      if (i[isClean]) markTreeDirty(i)\n\n      if (!i.raws) i.raws = {}\n      if (typeof i.raws.before === 'undefined') {\n        if (sample && typeof sample.raws.before !== 'undefined') {\n          i.raws.before = sample.raws.before.replace(/\\S/g, '')\n        }\n      }\n      i.parent = this.proxyOf\n      return i\n    })\n\n    return processed\n  }\n\n  prepend(...children) {\n    children = children.reverse()\n    for (let child of children) {\n      let nodes = this.normalize(child, this.first, 'prepend').reverse()\n      for (let node of nodes) this.proxyOf.nodes.unshift(node)\n      for (let id in this.indexes) {\n        this.indexes[id] = this.indexes[id] + nodes.length\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  push(child) {\n    child.parent = this\n    this.proxyOf.nodes.push(child)\n    return this\n  }\n\n  removeAll() {\n    for (let node of this.proxyOf.nodes) node.parent = undefined\n    this.proxyOf.nodes = []\n\n    this.markDirty()\n\n    return this\n  }\n\n  removeChild(child) {\n    child = this.index(child)\n    this.proxyOf.nodes[child].parent = undefined\n    this.proxyOf.nodes.splice(child, 1)\n\n    let index\n    for (let id in this.indexes) {\n      index = this.indexes[id]\n      if (index >= child) {\n        this.indexes[id] = index - 1\n      }\n    }\n\n    this.markDirty()\n\n    return this\n  }\n\n  replaceValues(pattern, opts, callback) {\n    if (!callback) {\n      callback = opts\n      opts = {}\n    }\n\n    this.walkDecls(decl => {\n      if (opts.props && !opts.props.includes(decl.prop)) return\n      if (opts.fast && !decl.value.includes(opts.fast)) return\n\n      decl.value = decl.value.replace(pattern, callback)\n    })\n\n    this.markDirty()\n\n    return this\n  }\n\n  some(condition) {\n    return this.nodes.some(condition)\n  }\n\n  walk(callback) {\n    return this.each((child, i) => {\n      let result\n      try {\n        result = callback(child, i)\n      } catch (e) {\n        throw child.addToError(e)\n      }\n      if (result !== false && child.walk) {\n        result = child.walk(callback)\n      }\n\n      return result\n    })\n  }\n\n  walkAtRules(name, callback) {\n    if (!callback) {\n      callback = name\n      return this.walk((child, i) => {\n        if (child.type === 'atrule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (name instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'atrule' && name.test(child.name)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'atrule' && child.name === name) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkComments(callback) {\n    return this.walk((child, i) => {\n      if (child.type === 'comment') {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkDecls(prop, callback) {\n    if (!callback) {\n      callback = prop\n      return this.walk((child, i) => {\n        if (child.type === 'decl') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (prop instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'decl' && prop.test(child.prop)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'decl' && child.prop === prop) {\n        return callback(child, i)\n      }\n    })\n  }\n\n  walkRules(selector, callback) {\n    if (!callback) {\n      callback = selector\n\n      return this.walk((child, i) => {\n        if (child.type === 'rule') {\n          return callback(child, i)\n        }\n      })\n    }\n    if (selector instanceof RegExp) {\n      return this.walk((child, i) => {\n        if (child.type === 'rule' && selector.test(child.selector)) {\n          return callback(child, i)\n        }\n      })\n    }\n    return this.walk((child, i) => {\n      if (child.type === 'rule' && child.selector === selector) {\n        return callback(child, i)\n      }\n    })\n  }\n}\n\nContainer.registerParse = dependant => {\n  parse = dependant\n}\n\nContainer.registerRule = dependant => {\n  Rule = dependant\n}\n\nContainer.registerAtRule = dependant => {\n  AtRule = dependant\n}\n\nContainer.registerRoot = dependant => {\n  Root = dependant\n}\n\nmodule.exports = Container\nContainer.default = Container\n\n/* c8 ignore start */\nContainer.rebuild = node => {\n  if (node.type === 'atrule') {\n    Object.setPrototypeOf(node, AtRule.prototype)\n  } else if (node.type === 'rule') {\n    Object.setPrototypeOf(node, Rule.prototype)\n  } else if (node.type === 'decl') {\n    Object.setPrototypeOf(node, Declaration.prototype)\n  } else if (node.type === 'comment') {\n    Object.setPrototypeOf(node, Comment.prototype)\n  } else if (node.type === 'root') {\n    Object.setPrototypeOf(node, Root.prototype)\n  }\n\n  node[my] = true\n\n  if (node.nodes) {\n    node.nodes.forEach(child => {\n      Container.rebuild(child)\n    })\n  }\n}\n/* c8 ignore stop */\n", "'use strict'\n\nlet Container = require('./container')\n\nclass AtRule extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'atrule'\n  }\n\n  append(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.append(...children)\n  }\n\n  prepend(...children) {\n    if (!this.proxyOf.nodes) this.nodes = []\n    return super.prepend(...children)\n  }\n}\n\nmodule.exports = AtRule\nAtRule.default = AtRule\n\nContainer.registerAtRule(AtRule)\n", "'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Document extends Container {\n  constructor(defaults) {\n    // type needs to be passed to super, otherwise child roots won't be normalized correctly\n    super({ type: 'document', ...defaults })\n\n    if (!this.nodes) {\n      this.nodes = []\n    }\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n\n    return lazy.stringify()\n  }\n}\n\nDocument.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nDocument.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Document\nDocument.default = Document\n", "// This alphabet uses `A-Za-z0-9_-` symbols.\n// The order of characters is optimized for better gzip and brotli compression.\n// References to the same file (works both for gzip and brotli):\n// `'use`, `andom`, and `rict'`\n// References to the brotli default dictionary:\n// `-26T`, `1983`, `40px`, `75px`, `bush`, `jack`, `mind`, `very`, and `wolf`\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\nlet customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size | 0\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size | 0\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n\nmodule.exports = { nanoid, customAlphabet }\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"path\" has been externalized for browser compatibility. Cannot access \"path.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"source-map-js\" has been externalized for browser compatibility. Cannot access \"source-map-js.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "'use strict'\n\nlet { existsSync, readFileSync } = require('fs')\nlet { dirname, join } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\n\nfunction fromBase64(str) {\n  if (Buffer) {\n    return Buffer.from(str, 'base64').toString()\n  } else {\n    /* c8 ignore next 2 */\n    return window.atob(str)\n  }\n}\n\nclass PreviousMap {\n  constructor(css, opts) {\n    if (opts.map === false) return\n    this.loadAnnotation(css)\n    this.inline = this.startWith(this.annotation, 'data:')\n\n    let prev = opts.map ? opts.map.prev : undefined\n    let text = this.loadMap(opts.from, prev)\n    if (!this.mapFile && opts.from) {\n      this.mapFile = opts.from\n    }\n    if (this.mapFile) this.root = dirname(this.mapFile)\n    if (text) this.text = text\n  }\n\n  consumer() {\n    if (!this.consumerCache) {\n      this.consumerCache = new SourceMapConsumer(this.text)\n    }\n    return this.consumerCache\n  }\n\n  decodeInline(text) {\n    let baseCharsetUri = /^data:application\\/json;charset=utf-?8;base64,/\n    let baseUri = /^data:application\\/json;base64,/\n    let charsetUri = /^data:application\\/json;charset=utf-?8,/\n    let uri = /^data:application\\/json,/\n\n    let uriMatch = text.match(charsetUri) || text.match(uri)\n    if (uriMatch) {\n      return decodeURIComponent(text.substr(uriMatch[0].length))\n    }\n\n    let baseUriMatch = text.match(baseCharsetUri) || text.match(baseUri)\n    if (baseUriMatch) {\n      return fromBase64(text.substr(baseUriMatch[0].length))\n    }\n\n    let encoding = text.match(/data:application\\/json;([^,]+),/)[1]\n    throw new Error('Unsupported source map encoding ' + encoding)\n  }\n\n  getAnnotationURL(sourceMapString) {\n    return sourceMapString.replace(/^\\/\\*\\s*# sourceMappingURL=/, '').trim()\n  }\n\n  isMap(map) {\n    if (typeof map !== 'object') return false\n    return (\n      typeof map.mappings === 'string' ||\n      typeof map._mappings === 'string' ||\n      Array.isArray(map.sections)\n    )\n  }\n\n  loadAnnotation(css) {\n    let comments = css.match(/\\/\\*\\s*# sourceMappingURL=/g)\n    if (!comments) return\n\n    // sourceMappingURLs from comments, strings, etc.\n    let start = css.lastIndexOf(comments.pop())\n    let end = css.indexOf('*/', start)\n\n    if (start > -1 && end > -1) {\n      // Locate the last sourceMappingURL to avoid pickin\n      this.annotation = this.getAnnotationURL(css.substring(start, end))\n    }\n  }\n\n  loadFile(path) {\n    this.root = dirname(path)\n    if (existsSync(path)) {\n      this.mapFile = path\n      return readFileSync(path, 'utf-8').toString().trim()\n    }\n  }\n\n  loadMap(file, prev) {\n    if (prev === false) return false\n\n    if (prev) {\n      if (typeof prev === 'string') {\n        return prev\n      } else if (typeof prev === 'function') {\n        let prevPath = prev(file)\n        if (prevPath) {\n          let map = this.loadFile(prevPath)\n          if (!map) {\n            throw new Error(\n              'Unable to load previous source map: ' + prevPath.toString()\n            )\n          }\n          return map\n        }\n      } else if (prev instanceof SourceMapConsumer) {\n        return SourceMapGenerator.fromSourceMap(prev).toString()\n      } else if (prev instanceof SourceMapGenerator) {\n        return prev.toString()\n      } else if (this.isMap(prev)) {\n        return JSON.stringify(prev)\n      } else {\n        throw new Error(\n          'Unsupported previous source map format: ' + prev.toString()\n        )\n      }\n    } else if (this.inline) {\n      return this.decodeInline(this.annotation)\n    } else if (this.annotation) {\n      let map = this.annotation\n      if (file) map = join(dirname(file), map)\n      return this.loadFile(map)\n    }\n  }\n\n  startWith(string, start) {\n    if (!string) return false\n    return string.substr(0, start.length) === start\n  }\n\n  withContent() {\n    return !!(\n      this.consumer().sourcesContent &&\n      this.consumer().sourcesContent.length > 0\n    )\n  }\n}\n\nmodule.exports = PreviousMap\nPreviousMap.default = PreviousMap\n", "'use strict'\n\nlet { nanoid } = require('nanoid/non-secure')\nlet { isAbsolute, resolve } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { fileURLToPath, pathToFileURL } = require('url')\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet PreviousMap = require('./previous-map')\nlet terminalHighlight = require('./terminal-highlight')\n\nlet lineToIndexCache = Symbol('lineToIndexCache')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(resolve && isAbsolute)\n\nfunction getLineToIndex(input) {\n  if (input[lineToIndexCache]) return input[lineToIndexCache]\n  let lines = input.css.split('\\n')\n  let lineToIndex = new Array(lines.length)\n  let prevIndex = 0\n\n  for (let i = 0, l = lines.length; i < l; i++) {\n    lineToIndex[i] = prevIndex\n    prevIndex += lines[i].length + 1\n  }\n\n  input[lineToIndexCache] = lineToIndex\n  return lineToIndex\n}\n\nclass Input {\n  get from() {\n    return this.file || this.id\n  }\n\n  constructor(css, opts = {}) {\n    if (\n      css === null ||\n      typeof css === 'undefined' ||\n      (typeof css === 'object' && !css.toString)\n    ) {\n      throw new Error(`PostCSS received ${css} instead of CSS string`)\n    }\n\n    this.css = css.toString()\n\n    if (this.css[0] === '\\uFEFF' || this.css[0] === '\\uFFFE') {\n      this.hasBOM = true\n      this.css = this.css.slice(1)\n    } else {\n      this.hasBOM = false\n    }\n\n    this.document = this.css\n    if (opts.document) this.document = opts.document.toString()\n\n    if (opts.from) {\n      if (\n        !pathAvailable ||\n        /^\\w+:\\/\\//.test(opts.from) ||\n        isAbsolute(opts.from)\n      ) {\n        this.file = opts.from\n      } else {\n        this.file = resolve(opts.from)\n      }\n    }\n\n    if (pathAvailable && sourceMapAvailable) {\n      let map = new PreviousMap(this.css, opts)\n      if (map.text) {\n        this.map = map\n        let file = map.consumer().file\n        if (!this.file && file) this.file = this.mapResolve(file)\n      }\n    }\n\n    if (!this.file) {\n      this.id = '<input css ' + nanoid(6) + '>'\n    }\n    if (this.map) this.map.file = this.from\n  }\n\n  error(message, line, column, opts = {}) {\n    let endColumn, endLine, endOffset, offset, result\n\n    if (line && typeof line === 'object') {\n      let start = line\n      let end = column\n      if (typeof start.offset === 'number') {\n        offset = start.offset\n        let pos = this.fromOffset(offset)\n        line = pos.line\n        column = pos.col\n      } else {\n        line = start.line\n        column = start.column\n        offset = this.fromLineAndColumn(line, column)\n      }\n      if (typeof end.offset === 'number') {\n        endOffset = end.offset\n        let pos = this.fromOffset(endOffset)\n        endLine = pos.line\n        endColumn = pos.col\n      } else {\n        endLine = end.line\n        endColumn = end.column\n        endOffset = this.fromLineAndColumn(end.line, end.column)\n      }\n    } else if (!column) {\n      offset = line\n      let pos = this.fromOffset(offset)\n      line = pos.line\n      column = pos.col\n    } else {\n      offset = this.fromLineAndColumn(line, column)\n    }\n\n    let origin = this.origin(line, column, endLine, endColumn)\n    if (origin) {\n      result = new CssSyntaxError(\n        message,\n        origin.endLine === undefined\n          ? origin.line\n          : { column: origin.column, line: origin.line },\n        origin.endLine === undefined\n          ? origin.column\n          : { column: origin.endColumn, line: origin.endLine },\n        origin.source,\n        origin.file,\n        opts.plugin\n      )\n    } else {\n      result = new CssSyntaxError(\n        message,\n        endLine === undefined ? line : { column, line },\n        endLine === undefined ? column : { column: endColumn, line: endLine },\n        this.css,\n        this.file,\n        opts.plugin\n      )\n    }\n\n    result.input = { column, endColumn, endLine, endOffset, line, offset, source: this.css }\n    if (this.file) {\n      if (pathToFileURL) {\n        result.input.url = pathToFileURL(this.file).toString()\n      }\n      result.input.file = this.file\n    }\n\n    return result\n  }\n\n  fromLineAndColumn(line, column) {\n    let lineToIndex = getLineToIndex(this)\n    let index = lineToIndex[line - 1]\n    return index + column - 1\n  }\n\n  fromOffset(offset) {\n    let lineToIndex = getLineToIndex(this)\n    let lastLine = lineToIndex[lineToIndex.length - 1]\n\n    let min = 0\n    if (offset >= lastLine) {\n      min = lineToIndex.length - 1\n    } else {\n      let max = lineToIndex.length - 2\n      let mid\n      while (min < max) {\n        mid = min + ((max - min) >> 1)\n        if (offset < lineToIndex[mid]) {\n          max = mid - 1\n        } else if (offset >= lineToIndex[mid + 1]) {\n          min = mid + 1\n        } else {\n          min = mid\n          break\n        }\n      }\n    }\n    return {\n      col: offset - lineToIndex[min] + 1,\n      line: min + 1\n    }\n  }\n\n  mapResolve(file) {\n    if (/^\\w+:\\/\\//.test(file)) {\n      return file\n    }\n    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)\n  }\n\n  origin(line, column, endLine, endColumn) {\n    if (!this.map) return false\n    let consumer = this.map.consumer()\n\n    let from = consumer.originalPositionFor({ column, line })\n    if (!from.source) return false\n\n    let to\n    if (typeof endLine === 'number') {\n      to = consumer.originalPositionFor({ column: endColumn, line: endLine })\n    }\n\n    let fromUrl\n\n    if (isAbsolute(from.source)) {\n      fromUrl = pathToFileURL(from.source)\n    } else {\n      fromUrl = new URL(\n        from.source,\n        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)\n      )\n    }\n\n    let result = {\n      column: from.column,\n      endColumn: to && to.column,\n      endLine: to && to.line,\n      line: from.line,\n      url: fromUrl.toString()\n    }\n\n    if (fromUrl.protocol === 'file:') {\n      if (fileURLToPath) {\n        result.file = fileURLToPath(fromUrl)\n      } else {\n        /* c8 ignore next 2 */\n        throw new Error(`file: protocol is not available in this PostCSS build`)\n      }\n    }\n\n    let source = consumer.sourceContentFor(from.source)\n    if (source) result.source = source\n\n    return result\n  }\n\n  toJSON() {\n    let json = {}\n    for (let name of ['hasBOM', 'css', 'file', 'id']) {\n      if (this[name] != null) {\n        json[name] = this[name]\n      }\n    }\n    if (this.map) {\n      json.map = { ...this.map }\n      if (json.map.consumerCache) {\n        json.map.consumerCache = undefined\n      }\n    }\n    return json\n  }\n}\n\nmodule.exports = Input\nInput.default = Input\n\nif (terminalHighlight && terminalHighlight.registerInput) {\n  terminalHighlight.registerInput(Input)\n}\n", "'use strict'\n\nlet Container = require('./container')\n\nlet LazyResult, Processor\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'root'\n    if (!this.nodes) this.nodes = []\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child)\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before\n        } else {\n          delete sample.raws.before\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before\n        }\n      }\n    }\n\n    return nodes\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child)\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before\n    }\n\n    return super.removeChild(child)\n  }\n\n  toResult(opts = {}) {\n    let lazy = new LazyResult(new Processor(), this, opts)\n    return lazy.stringify()\n  }\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant\n}\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant\n}\n\nmodule.exports = Root\nRoot.default = Root\n\nContainer.registerRoot(Root)\n", "'use strict'\n\nlet list = {\n  comma(string) {\n    return list.split(string, [','], true)\n  },\n\n  space(string) {\n    let spaces = [' ', '\\n', '\\t']\n    return list.split(string, spaces)\n  },\n\n  split(string, separators, last) {\n    let array = []\n    let current = ''\n    let split = false\n\n    let func = 0\n    let inQuote = false\n    let prevQuote = ''\n    let escape = false\n\n    for (let letter of string) {\n      if (escape) {\n        escape = false\n      } else if (letter === '\\\\') {\n        escape = true\n      } else if (inQuote) {\n        if (letter === prevQuote) {\n          inQuote = false\n        }\n      } else if (letter === '\"' || letter === \"'\") {\n        inQuote = true\n        prevQuote = letter\n      } else if (letter === '(') {\n        func += 1\n      } else if (letter === ')') {\n        if (func > 0) func -= 1\n      } else if (func === 0) {\n        if (separators.includes(letter)) split = true\n      }\n\n      if (split) {\n        if (current !== '') array.push(current.trim())\n        current = ''\n        split = false\n      } else {\n        current += letter\n      }\n    }\n\n    if (last || current !== '') array.push(current.trim())\n    return array\n  }\n}\n\nmodule.exports = list\nlist.default = list\n", "'use strict'\n\nlet Container = require('./container')\nlet list = require('./list')\n\nclass Rule extends Container {\n  get selectors() {\n    return list.comma(this.selector)\n  }\n\n  set selectors(values) {\n    let match = this.selector ? this.selector.match(/,\\s*/) : null\n    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')\n    this.selector = values.join(sep)\n  }\n\n  constructor(defaults) {\n    super(defaults)\n    this.type = 'rule'\n    if (!this.nodes) this.nodes = []\n  }\n}\n\nmodule.exports = Rule\nRule.default = Rule\n\nContainer.registerRule(Rule)\n", "'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Input = require('./input')\nlet PreviousMap = require('./previous-map')\nlet Root = require('./root')\nlet Rule = require('./rule')\n\nfunction fromJSON(json, inputs) {\n  if (Array.isArray(json)) return json.map(n => fromJSON(n))\n\n  let { inputs: ownInputs, ...defaults } = json\n  if (ownInputs) {\n    inputs = []\n    for (let input of ownInputs) {\n      let inputHydrated = { ...input, __proto__: Input.prototype }\n      if (inputHydrated.map) {\n        inputHydrated.map = {\n          ...inputHydrated.map,\n          __proto__: PreviousMap.prototype\n        }\n      }\n      inputs.push(inputHydrated)\n    }\n  }\n  if (defaults.nodes) {\n    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))\n  }\n  if (defaults.source) {\n    let { inputId, ...source } = defaults.source\n    defaults.source = source\n    if (inputId != null) {\n      defaults.source.input = inputs[inputId]\n    }\n  }\n  if (defaults.type === 'root') {\n    return new Root(defaults)\n  } else if (defaults.type === 'decl') {\n    return new Declaration(defaults)\n  } else if (defaults.type === 'rule') {\n    return new Rule(defaults)\n  } else if (defaults.type === 'comment') {\n    return new Comment(defaults)\n  } else if (defaults.type === 'atrule') {\n    return new AtRule(defaults)\n  } else {\n    throw new Error('Unknown node type: ' + json.type)\n  }\n}\n\nmodule.exports = fromJSON\nfromJSON.default = fromJSON\n", "'use strict'\n\nlet { dirname, relative, resolve, sep } = require('path')\nlet { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')\nlet { pathToFileURL } = require('url')\n\nlet Input = require('./input')\n\nlet sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)\nlet pathAvailable = Boolean(dirname && resolve && relative && sep)\n\nclass MapGenerator {\n  constructor(stringify, root, opts, cssString) {\n    this.stringify = stringify\n    this.mapOpts = opts.map || {}\n    this.root = root\n    this.opts = opts\n    this.css = cssString\n    this.originalCSS = cssString\n    this.usesFileUrls = !this.mapOpts.from && this.mapOpts.absolute\n\n    this.memoizedFileURLs = new Map()\n    this.memoizedPaths = new Map()\n    this.memoizedURLs = new Map()\n  }\n\n  addAnnotation() {\n    let content\n\n    if (this.isInline()) {\n      content =\n        'data:application/json;base64,' + this.toBase64(this.map.toString())\n    } else if (typeof this.mapOpts.annotation === 'string') {\n      content = this.mapOpts.annotation\n    } else if (typeof this.mapOpts.annotation === 'function') {\n      content = this.mapOpts.annotation(this.opts.to, this.root)\n    } else {\n      content = this.outputFile() + '.map'\n    }\n    let eol = '\\n'\n    if (this.css.includes('\\r\\n')) eol = '\\r\\n'\n\n    this.css += eol + '/*# sourceMappingURL=' + content + ' */'\n  }\n\n  applyPrevMaps() {\n    for (let prev of this.previous()) {\n      let from = this.toUrl(this.path(prev.file))\n      let root = prev.root || dirname(prev.file)\n      let map\n\n      if (this.mapOpts.sourcesContent === false) {\n        map = new SourceMapConsumer(prev.text)\n        if (map.sourcesContent) {\n          map.sourcesContent = null\n        }\n      } else {\n        map = prev.consumer()\n      }\n\n      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))\n    }\n  }\n\n  clearAnnotation() {\n    if (this.mapOpts.annotation === false) return\n\n    if (this.root) {\n      let node\n      for (let i = this.root.nodes.length - 1; i >= 0; i--) {\n        node = this.root.nodes[i]\n        if (node.type !== 'comment') continue\n        if (node.text.startsWith('# sourceMappingURL=')) {\n          this.root.removeChild(i)\n        }\n      }\n    } else if (this.css) {\n      this.css = this.css.replace(/\\n*\\/\\*#[\\S\\s]*?\\*\\/$/gm, '')\n    }\n  }\n\n  generate() {\n    this.clearAnnotation()\n    if (pathAvailable && sourceMapAvailable && this.isMap()) {\n      return this.generateMap()\n    } else {\n      let result = ''\n      this.stringify(this.root, i => {\n        result += i\n      })\n      return [result]\n    }\n  }\n\n  generateMap() {\n    if (this.root) {\n      this.generateString()\n    } else if (this.previous().length === 1) {\n      let prev = this.previous()[0].consumer()\n      prev.file = this.outputFile()\n      this.map = SourceMapGenerator.fromSourceMap(prev, {\n        ignoreInvalidMapping: true\n      })\n    } else {\n      this.map = new SourceMapGenerator({\n        file: this.outputFile(),\n        ignoreInvalidMapping: true\n      })\n      this.map.addMapping({\n        generated: { column: 0, line: 1 },\n        original: { column: 0, line: 1 },\n        source: this.opts.from\n          ? this.toUrl(this.path(this.opts.from))\n          : '<no source>'\n      })\n    }\n\n    if (this.isSourcesContent()) this.setSourcesContent()\n    if (this.root && this.previous().length > 0) this.applyPrevMaps()\n    if (this.isAnnotation()) this.addAnnotation()\n\n    if (this.isInline()) {\n      return [this.css]\n    } else {\n      return [this.css, this.map]\n    }\n  }\n\n  generateString() {\n    this.css = ''\n    this.map = new SourceMapGenerator({\n      file: this.outputFile(),\n      ignoreInvalidMapping: true\n    })\n\n    let line = 1\n    let column = 1\n\n    let noSource = '<no source>'\n    let mapping = {\n      generated: { column: 0, line: 0 },\n      original: { column: 0, line: 0 },\n      source: ''\n    }\n\n    let last, lines\n    this.stringify(this.root, (str, node, type) => {\n      this.css += str\n\n      if (node && type !== 'end') {\n        mapping.generated.line = line\n        mapping.generated.column = column - 1\n        if (node.source && node.source.start) {\n          mapping.source = this.sourcePath(node)\n          mapping.original.line = node.source.start.line\n          mapping.original.column = node.source.start.column - 1\n          this.map.addMapping(mapping)\n        } else {\n          mapping.source = noSource\n          mapping.original.line = 1\n          mapping.original.column = 0\n          this.map.addMapping(mapping)\n        }\n      }\n\n      lines = str.match(/\\n/g)\n      if (lines) {\n        line += lines.length\n        last = str.lastIndexOf('\\n')\n        column = str.length - last\n      } else {\n        column += str.length\n      }\n\n      if (node && type !== 'start') {\n        let p = node.parent || { raws: {} }\n        let childless =\n          node.type === 'decl' || (node.type === 'atrule' && !node.nodes)\n        if (!childless || node !== p.last || p.raws.semicolon) {\n          if (node.source && node.source.end) {\n            mapping.source = this.sourcePath(node)\n            mapping.original.line = node.source.end.line\n            mapping.original.column = node.source.end.column - 1\n            mapping.generated.line = line\n            mapping.generated.column = column - 2\n            this.map.addMapping(mapping)\n          } else {\n            mapping.source = noSource\n            mapping.original.line = 1\n            mapping.original.column = 0\n            mapping.generated.line = line\n            mapping.generated.column = column - 1\n            this.map.addMapping(mapping)\n          }\n        }\n      }\n    })\n  }\n\n  isAnnotation() {\n    if (this.isInline()) {\n      return true\n    }\n    if (typeof this.mapOpts.annotation !== 'undefined') {\n      return this.mapOpts.annotation\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.annotation)\n    }\n    return true\n  }\n\n  isInline() {\n    if (typeof this.mapOpts.inline !== 'undefined') {\n      return this.mapOpts.inline\n    }\n\n    let annotation = this.mapOpts.annotation\n    if (typeof annotation !== 'undefined' && annotation !== true) {\n      return false\n    }\n\n    if (this.previous().length) {\n      return this.previous().some(i => i.inline)\n    }\n    return true\n  }\n\n  isMap() {\n    if (typeof this.opts.map !== 'undefined') {\n      return !!this.opts.map\n    }\n    return this.previous().length > 0\n  }\n\n  isSourcesContent() {\n    if (typeof this.mapOpts.sourcesContent !== 'undefined') {\n      return this.mapOpts.sourcesContent\n    }\n    if (this.previous().length) {\n      return this.previous().some(i => i.withContent())\n    }\n    return true\n  }\n\n  outputFile() {\n    if (this.opts.to) {\n      return this.path(this.opts.to)\n    } else if (this.opts.from) {\n      return this.path(this.opts.from)\n    } else {\n      return 'to.css'\n    }\n  }\n\n  path(file) {\n    if (this.mapOpts.absolute) return file\n    if (file.charCodeAt(0) === 60 /* `<` */) return file\n    if (/^\\w+:\\/\\//.test(file)) return file\n    let cached = this.memoizedPaths.get(file)\n    if (cached) return cached\n\n    let from = this.opts.to ? dirname(this.opts.to) : '.'\n\n    if (typeof this.mapOpts.annotation === 'string') {\n      from = dirname(resolve(from, this.mapOpts.annotation))\n    }\n\n    let path = relative(from, file)\n    this.memoizedPaths.set(file, path)\n\n    return path\n  }\n\n  previous() {\n    if (!this.previousMaps) {\n      this.previousMaps = []\n      if (this.root) {\n        this.root.walk(node => {\n          if (node.source && node.source.input.map) {\n            let map = node.source.input.map\n            if (!this.previousMaps.includes(map)) {\n              this.previousMaps.push(map)\n            }\n          }\n        })\n      } else {\n        let input = new Input(this.originalCSS, this.opts)\n        if (input.map) this.previousMaps.push(input.map)\n      }\n    }\n\n    return this.previousMaps\n  }\n\n  setSourcesContent() {\n    let already = {}\n    if (this.root) {\n      this.root.walk(node => {\n        if (node.source) {\n          let from = node.source.input.from\n          if (from && !already[from]) {\n            already[from] = true\n            let fromUrl = this.usesFileUrls\n              ? this.toFileUrl(from)\n              : this.toUrl(this.path(from))\n            this.map.setSourceContent(fromUrl, node.source.input.css)\n          }\n        }\n      })\n    } else if (this.css) {\n      let from = this.opts.from\n        ? this.toUrl(this.path(this.opts.from))\n        : '<no source>'\n      this.map.setSourceContent(from, this.css)\n    }\n  }\n\n  sourcePath(node) {\n    if (this.mapOpts.from) {\n      return this.toUrl(this.mapOpts.from)\n    } else if (this.usesFileUrls) {\n      return this.toFileUrl(node.source.input.from)\n    } else {\n      return this.toUrl(this.path(node.source.input.from))\n    }\n  }\n\n  toBase64(str) {\n    if (Buffer) {\n      return Buffer.from(str).toString('base64')\n    } else {\n      return window.btoa(unescape(encodeURIComponent(str)))\n    }\n  }\n\n  toFileUrl(path) {\n    let cached = this.memoizedFileURLs.get(path)\n    if (cached) return cached\n\n    if (pathToFileURL) {\n      let fileURL = pathToFileURL(path).toString()\n      this.memoizedFileURLs.set(path, fileURL)\n\n      return fileURL\n    } else {\n      throw new Error(\n        '`map.absolute` option is not available in this PostCSS build'\n      )\n    }\n  }\n\n  toUrl(path) {\n    let cached = this.memoizedURLs.get(path)\n    if (cached) return cached\n\n    if (sep === '\\\\') {\n      path = path.replace(/\\\\/g, '/')\n    }\n\n    let url = encodeURI(path).replace(/[#?]/g, encodeURIComponent)\n    this.memoizedURLs.set(path, url)\n\n    return url\n  }\n}\n\nmodule.exports = MapGenerator\n", "'use strict'\n\nconst SINGLE_QUOTE = \"'\".charCodeAt(0)\nconst DOUBLE_QUOTE = '\"'.charCodeAt(0)\nconst BACKSLASH = '\\\\'.charCodeAt(0)\nconst SLASH = '/'.charCodeAt(0)\nconst NEWLINE = '\\n'.charCodeAt(0)\nconst SPACE = ' '.charCodeAt(0)\nconst FEED = '\\f'.charCodeAt(0)\nconst TAB = '\\t'.charCodeAt(0)\nconst CR = '\\r'.charCodeAt(0)\nconst OPEN_SQUARE = '['.charCodeAt(0)\nconst CLOSE_SQUARE = ']'.charCodeAt(0)\nconst OPEN_PARENTHESES = '('.charCodeAt(0)\nconst CLOSE_PARENTHESES = ')'.charCodeAt(0)\nconst OPEN_CURLY = '{'.charCodeAt(0)\nconst CLOSE_CURLY = '}'.charCodeAt(0)\nconst SEMICOLON = ';'.charCodeAt(0)\nconst ASTERISK = '*'.charCodeAt(0)\nconst COLON = ':'.charCodeAt(0)\nconst AT = '@'.charCodeAt(0)\n\nconst RE_AT_END = /[\\t\\n\\f\\r \"#'()/;[\\\\\\]{}]/g\nconst RE_WORD_END = /[\\t\\n\\f\\r !\"#'():;@[\\\\\\]{}]|\\/(?=\\*)/g\nconst RE_BAD_BRACKET = /.[\\r\\n\"'(/\\\\]/\nconst RE_HEX_ESCAPE = /[\\da-f]/i\n\nmodule.exports = function tokenizer(input, options = {}) {\n  let css = input.css.valueOf()\n  let ignore = options.ignoreErrors\n\n  let code, content, escape, next, quote\n  let currentToken, escaped, escapePos, n, prev\n\n  let length = css.length\n  let pos = 0\n  let buffer = []\n  let returned = []\n\n  function position() {\n    return pos\n  }\n\n  function unclosed(what) {\n    throw input.error('Unclosed ' + what, pos)\n  }\n\n  function endOfFile() {\n    return returned.length === 0 && pos >= length\n  }\n\n  function nextToken(opts) {\n    if (returned.length) return returned.pop()\n    if (pos >= length) return\n\n    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false\n\n    code = css.charCodeAt(pos)\n\n    switch (code) {\n      case NEWLINE:\n      case SPACE:\n      case TAB:\n      case CR:\n      case FEED: {\n        next = pos\n        do {\n          next += 1\n          code = css.charCodeAt(next)\n        } while (\n          code === SPACE ||\n          code === NEWLINE ||\n          code === TAB ||\n          code === CR ||\n          code === FEED\n        )\n\n        currentToken = ['space', css.slice(pos, next)]\n        pos = next - 1\n        break\n      }\n\n      case OPEN_SQUARE:\n      case CLOSE_SQUARE:\n      case OPEN_CURLY:\n      case CLOSE_CURLY:\n      case COLON:\n      case SEMICOLON:\n      case CLOSE_PARENTHESES: {\n        let controlChar = String.fromCharCode(code)\n        currentToken = [controlChar, controlChar, pos]\n        break\n      }\n\n      case OPEN_PARENTHESES: {\n        prev = buffer.length ? buffer.pop()[1] : ''\n        n = css.charCodeAt(pos + 1)\n        if (\n          prev === 'url' &&\n          n !== SINGLE_QUOTE &&\n          n !== DOUBLE_QUOTE &&\n          n !== SPACE &&\n          n !== NEWLINE &&\n          n !== TAB &&\n          n !== FEED &&\n          n !== CR\n        ) {\n          next = pos\n          do {\n            escaped = false\n            next = css.indexOf(')', next + 1)\n            if (next === -1) {\n              if (ignore || ignoreUnclosed) {\n                next = pos\n                break\n              } else {\n                unclosed('bracket')\n              }\n            }\n            escapePos = next\n            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n              escapePos -= 1\n              escaped = !escaped\n            }\n          } while (escaped)\n\n          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]\n\n          pos = next\n        } else {\n          next = css.indexOf(')', pos + 1)\n          content = css.slice(pos, next + 1)\n\n          if (next === -1 || RE_BAD_BRACKET.test(content)) {\n            currentToken = ['(', '(', pos]\n          } else {\n            currentToken = ['brackets', content, pos, next]\n            pos = next\n          }\n        }\n\n        break\n      }\n\n      case SINGLE_QUOTE:\n      case DOUBLE_QUOTE: {\n        quote = code === SINGLE_QUOTE ? \"'\" : '\"'\n        next = pos\n        do {\n          escaped = false\n          next = css.indexOf(quote, next + 1)\n          if (next === -1) {\n            if (ignore || ignoreUnclosed) {\n              next = pos + 1\n              break\n            } else {\n              unclosed('string')\n            }\n          }\n          escapePos = next\n          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {\n            escapePos -= 1\n            escaped = !escaped\n          }\n        } while (escaped)\n\n        currentToken = ['string', css.slice(pos, next + 1), pos, next]\n        pos = next\n        break\n      }\n\n      case AT: {\n        RE_AT_END.lastIndex = pos + 1\n        RE_AT_END.test(css)\n        if (RE_AT_END.lastIndex === 0) {\n          next = css.length - 1\n        } else {\n          next = RE_AT_END.lastIndex - 2\n        }\n\n        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      case BACKSLASH: {\n        next = pos\n        escape = true\n        while (css.charCodeAt(next + 1) === BACKSLASH) {\n          next += 1\n          escape = !escape\n        }\n        code = css.charCodeAt(next + 1)\n        if (\n          escape &&\n          code !== SLASH &&\n          code !== SPACE &&\n          code !== NEWLINE &&\n          code !== TAB &&\n          code !== CR &&\n          code !== FEED\n        ) {\n          next += 1\n          if (RE_HEX_ESCAPE.test(css.charAt(next))) {\n            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {\n              next += 1\n            }\n            if (css.charCodeAt(next + 1) === SPACE) {\n              next += 1\n            }\n          }\n        }\n\n        currentToken = ['word', css.slice(pos, next + 1), pos, next]\n\n        pos = next\n        break\n      }\n\n      default: {\n        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {\n          next = css.indexOf('*/', pos + 2) + 1\n          if (next === 0) {\n            if (ignore || ignoreUnclosed) {\n              next = css.length\n            } else {\n              unclosed('comment')\n            }\n          }\n\n          currentToken = ['comment', css.slice(pos, next + 1), pos, next]\n          pos = next\n        } else {\n          RE_WORD_END.lastIndex = pos + 1\n          RE_WORD_END.test(css)\n          if (RE_WORD_END.lastIndex === 0) {\n            next = css.length - 1\n          } else {\n            next = RE_WORD_END.lastIndex - 2\n          }\n\n          currentToken = ['word', css.slice(pos, next + 1), pos, next]\n          buffer.push(currentToken)\n          pos = next\n        }\n\n        break\n      }\n    }\n\n    pos++\n    return currentToken\n  }\n\n  function back(token) {\n    returned.push(token)\n  }\n\n  return {\n    back,\n    endOfFile,\n    nextToken,\n    position\n  }\n}\n", "'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Declaration = require('./declaration')\nlet Root = require('./root')\nlet Rule = require('./rule')\nlet tokenizer = require('./tokenize')\n\nconst SAFE_COMMENT_NEIGHBOR = {\n  empty: true,\n  space: true\n}\n\nfunction findLastWithPosition(tokens) {\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    let token = tokens[i]\n    let pos = token[3] || token[2]\n    if (pos) return pos\n  }\n}\n\nclass Parser {\n  constructor(input) {\n    this.input = input\n\n    this.root = new Root()\n    this.current = this.root\n    this.spaces = ''\n    this.semicolon = false\n\n    this.createTokenizer()\n    this.root.source = { input, start: { column: 1, line: 1, offset: 0 } }\n  }\n\n  atrule(token) {\n    let node = new AtRule()\n    node.name = token[1].slice(1)\n    if (node.name === '') {\n      this.unnamedAtrule(node, token)\n    }\n    this.init(node, token[2])\n\n    let type\n    let prev\n    let shift\n    let last = false\n    let open = false\n    let params = []\n    let brackets = []\n\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n      type = token[0]\n\n      if (type === '(' || type === '[') {\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (type === '{' && brackets.length > 0) {\n        brackets.push('}')\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n      }\n\n      if (brackets.length === 0) {\n        if (type === ';') {\n          node.source.end = this.getPosition(token[2])\n          node.source.end.offset++\n          this.semicolon = true\n          break\n        } else if (type === '{') {\n          open = true\n          break\n        } else if (type === '}') {\n          if (params.length > 0) {\n            shift = params.length - 1\n            prev = params[shift]\n            while (prev && prev[0] === 'space') {\n              prev = params[--shift]\n            }\n            if (prev) {\n              node.source.end = this.getPosition(prev[3] || prev[2])\n              node.source.end.offset++\n            }\n          }\n          this.end(token)\n          break\n        } else {\n          params.push(token)\n        }\n      } else {\n        params.push(token)\n      }\n\n      if (this.tokenizer.endOfFile()) {\n        last = true\n        break\n      }\n    }\n\n    node.raws.between = this.spacesAndCommentsFromEnd(params)\n    if (params.length) {\n      node.raws.afterName = this.spacesAndCommentsFromStart(params)\n      this.raw(node, 'params', params)\n      if (last) {\n        token = params[params.length - 1]\n        node.source.end = this.getPosition(token[3] || token[2])\n        node.source.end.offset++\n        this.spaces = node.raws.between\n        node.raws.between = ''\n      }\n    } else {\n      node.raws.afterName = ''\n      node.params = ''\n    }\n\n    if (open) {\n      node.nodes = []\n      this.current = node\n    }\n  }\n\n  checkMissedSemicolon(tokens) {\n    let colon = this.colon(tokens)\n    if (colon === false) return\n\n    let founded = 0\n    let token\n    for (let j = colon - 1; j >= 0; j--) {\n      token = tokens[j]\n      if (token[0] !== 'space') {\n        founded += 1\n        if (founded === 2) break\n      }\n    }\n    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.\n    // Then we need to return the colon after that word token. [3] is the \"end\" colon of that word.\n    // And because we need it after that one we do +1 to get the next one.\n    throw this.input.error(\n      'Missed semicolon',\n      token[0] === 'word' ? token[3] + 1 : token[2]\n    )\n  }\n\n  colon(tokens) {\n    let brackets = 0\n    let prev, token, type\n    for (let [i, element] of tokens.entries()) {\n      token = element\n      type = token[0]\n\n      if (type === '(') {\n        brackets += 1\n      }\n      if (type === ')') {\n        brackets -= 1\n      }\n      if (brackets === 0 && type === ':') {\n        if (!prev) {\n          this.doubleColon(token)\n        } else if (prev[0] === 'word' && prev[1] === 'progid') {\n          continue\n        } else {\n          return i\n        }\n      }\n\n      prev = token\n    }\n    return false\n  }\n\n  comment(token) {\n    let node = new Comment()\n    this.init(node, token[2])\n    node.source.end = this.getPosition(token[3] || token[2])\n    node.source.end.offset++\n\n    let text = token[1].slice(2, -2)\n    if (/^\\s*$/.test(text)) {\n      node.text = ''\n      node.raws.left = text\n      node.raws.right = ''\n    } else {\n      let match = text.match(/^(\\s*)([^]*\\S)(\\s*)$/)\n      node.text = match[2]\n      node.raws.left = match[1]\n      node.raws.right = match[3]\n    }\n  }\n\n  createTokenizer() {\n    this.tokenizer = tokenizer(this.input)\n  }\n\n  decl(tokens, customProperty) {\n    let node = new Declaration()\n    this.init(node, tokens[0][2])\n\n    let last = tokens[tokens.length - 1]\n    if (last[0] === ';') {\n      this.semicolon = true\n      tokens.pop()\n    }\n\n    node.source.end = this.getPosition(\n      last[3] || last[2] || findLastWithPosition(tokens)\n    )\n    node.source.end.offset++\n\n    while (tokens[0][0] !== 'word') {\n      if (tokens.length === 1) this.unknownWord(tokens)\n      node.raws.before += tokens.shift()[1]\n    }\n    node.source.start = this.getPosition(tokens[0][2])\n\n    node.prop = ''\n    while (tokens.length) {\n      let type = tokens[0][0]\n      if (type === ':' || type === 'space' || type === 'comment') {\n        break\n      }\n      node.prop += tokens.shift()[1]\n    }\n\n    node.raws.between = ''\n\n    let token\n    while (tokens.length) {\n      token = tokens.shift()\n\n      if (token[0] === ':') {\n        node.raws.between += token[1]\n        break\n      } else {\n        if (token[0] === 'word' && /\\w/.test(token[1])) {\n          this.unknownWord([token])\n        }\n        node.raws.between += token[1]\n      }\n    }\n\n    if (node.prop[0] === '_' || node.prop[0] === '*') {\n      node.raws.before += node.prop[0]\n      node.prop = node.prop.slice(1)\n    }\n\n    let firstSpaces = []\n    let next\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      firstSpaces.push(tokens.shift())\n    }\n\n    this.precheckMissedSemicolon(tokens)\n\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i]\n      if (token[1].toLowerCase() === '!important') {\n        node.important = true\n        let string = this.stringFrom(tokens, i)\n        string = this.spacesFromEnd(tokens) + string\n        if (string !== ' !important') node.raws.important = string\n        break\n      } else if (token[1].toLowerCase() === 'important') {\n        let cache = tokens.slice(0)\n        let str = ''\n        for (let j = i; j > 0; j--) {\n          let type = cache[j][0]\n          if (str.trim().startsWith('!') && type !== 'space') {\n            break\n          }\n          str = cache.pop()[1] + str\n        }\n        if (str.trim().startsWith('!')) {\n          node.important = true\n          node.raws.important = str\n          tokens = cache\n        }\n      }\n\n      if (token[0] !== 'space' && token[0] !== 'comment') {\n        break\n      }\n    }\n\n    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')\n\n    if (hasWord) {\n      node.raws.between += firstSpaces.map(i => i[1]).join('')\n      firstSpaces = []\n    }\n    this.raw(node, 'value', firstSpaces.concat(tokens), customProperty)\n\n    if (node.value.includes(':') && !customProperty) {\n      this.checkMissedSemicolon(tokens)\n    }\n  }\n\n  doubleColon(token) {\n    throw this.input.error(\n      'Double colon',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n\n  emptyRule(token) {\n    let node = new Rule()\n    this.init(node, token[2])\n    node.selector = ''\n    node.raws.between = ''\n    this.current = node\n  }\n\n  end(token) {\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.semicolon = false\n\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.spaces = ''\n\n    if (this.current.parent) {\n      this.current.source.end = this.getPosition(token[2])\n      this.current.source.end.offset++\n      this.current = this.current.parent\n    } else {\n      this.unexpectedClose(token)\n    }\n  }\n\n  endFile() {\n    if (this.current.parent) this.unclosedBlock()\n    if (this.current.nodes && this.current.nodes.length) {\n      this.current.raws.semicolon = this.semicolon\n    }\n    this.current.raws.after = (this.current.raws.after || '') + this.spaces\n    this.root.source.end = this.getPosition(this.tokenizer.position())\n  }\n\n  freeSemicolon(token) {\n    this.spaces += token[1]\n    if (this.current.nodes) {\n      let prev = this.current.nodes[this.current.nodes.length - 1]\n      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {\n        prev.raws.ownSemicolon = this.spaces\n        this.spaces = ''\n        prev.source.end = this.getPosition(token[2])\n        prev.source.end.offset += prev.raws.ownSemicolon.length\n      }\n    }\n  }\n\n  // Helpers\n\n  getPosition(offset) {\n    let pos = this.input.fromOffset(offset)\n    return {\n      column: pos.col,\n      line: pos.line,\n      offset\n    }\n  }\n\n  init(node, offset) {\n    this.current.push(node)\n    node.source = {\n      input: this.input,\n      start: this.getPosition(offset)\n    }\n    node.raws.before = this.spaces\n    this.spaces = ''\n    if (node.type !== 'comment') this.semicolon = false\n  }\n\n  other(start) {\n    let end = false\n    let type = null\n    let colon = false\n    let bracket = null\n    let brackets = []\n    let customProperty = start[1].startsWith('--')\n\n    let tokens = []\n    let token = start\n    while (token) {\n      type = token[0]\n      tokens.push(token)\n\n      if (type === '(' || type === '[') {\n        if (!bracket) bracket = token\n        brackets.push(type === '(' ? ')' : ']')\n      } else if (customProperty && colon && type === '{') {\n        if (!bracket) bracket = token\n        brackets.push('}')\n      } else if (brackets.length === 0) {\n        if (type === ';') {\n          if (colon) {\n            this.decl(tokens, customProperty)\n            return\n          } else {\n            break\n          }\n        } else if (type === '{') {\n          this.rule(tokens)\n          return\n        } else if (type === '}') {\n          this.tokenizer.back(tokens.pop())\n          end = true\n          break\n        } else if (type === ':') {\n          colon = true\n        }\n      } else if (type === brackets[brackets.length - 1]) {\n        brackets.pop()\n        if (brackets.length === 0) bracket = null\n      }\n\n      token = this.tokenizer.nextToken()\n    }\n\n    if (this.tokenizer.endOfFile()) end = true\n    if (brackets.length > 0) this.unclosedBracket(bracket)\n\n    if (end && colon) {\n      if (!customProperty) {\n        while (tokens.length) {\n          token = tokens[tokens.length - 1][0]\n          if (token !== 'space' && token !== 'comment') break\n          this.tokenizer.back(tokens.pop())\n        }\n      }\n      this.decl(tokens, customProperty)\n    } else {\n      this.unknownWord(tokens)\n    }\n  }\n\n  parse() {\n    let token\n    while (!this.tokenizer.endOfFile()) {\n      token = this.tokenizer.nextToken()\n\n      switch (token[0]) {\n        case 'space':\n          this.spaces += token[1]\n          break\n\n        case ';':\n          this.freeSemicolon(token)\n          break\n\n        case '}':\n          this.end(token)\n          break\n\n        case 'comment':\n          this.comment(token)\n          break\n\n        case 'at-word':\n          this.atrule(token)\n          break\n\n        case '{':\n          this.emptyRule(token)\n          break\n\n        default:\n          this.other(token)\n          break\n      }\n    }\n    this.endFile()\n  }\n\n  precheckMissedSemicolon(/* tokens */) {\n    // Hook for Safe Parser\n  }\n\n  raw(node, prop, tokens, customProperty) {\n    let token, type\n    let length = tokens.length\n    let value = ''\n    let clean = true\n    let next, prev\n\n    for (let i = 0; i < length; i += 1) {\n      token = tokens[i]\n      type = token[0]\n      if (type === 'space' && i === length - 1 && !customProperty) {\n        clean = false\n      } else if (type === 'comment') {\n        prev = tokens[i - 1] ? tokens[i - 1][0] : 'empty'\n        next = tokens[i + 1] ? tokens[i + 1][0] : 'empty'\n        if (!SAFE_COMMENT_NEIGHBOR[prev] && !SAFE_COMMENT_NEIGHBOR[next]) {\n          if (value.slice(-1) === ',') {\n            clean = false\n          } else {\n            value += token[1]\n          }\n        } else {\n          clean = false\n        }\n      } else {\n        value += token[1]\n      }\n    }\n    if (!clean) {\n      let raw = tokens.reduce((all, i) => all + i[1], '')\n      node.raws[prop] = { raw, value }\n    }\n    node[prop] = value\n  }\n\n  rule(tokens) {\n    tokens.pop()\n\n    let node = new Rule()\n    this.init(node, tokens[0][2])\n\n    node.raws.between = this.spacesAndCommentsFromEnd(tokens)\n    this.raw(node, 'selector', tokens)\n    this.current = node\n  }\n\n  spacesAndCommentsFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  // Errors\n\n  spacesAndCommentsFromStart(tokens) {\n    let next\n    let spaces = ''\n    while (tokens.length) {\n      next = tokens[0][0]\n      if (next !== 'space' && next !== 'comment') break\n      spaces += tokens.shift()[1]\n    }\n    return spaces\n  }\n\n  spacesFromEnd(tokens) {\n    let lastTokenType\n    let spaces = ''\n    while (tokens.length) {\n      lastTokenType = tokens[tokens.length - 1][0]\n      if (lastTokenType !== 'space') break\n      spaces = tokens.pop()[1] + spaces\n    }\n    return spaces\n  }\n\n  stringFrom(tokens, from) {\n    let result = ''\n    for (let i = from; i < tokens.length; i++) {\n      result += tokens[i][1]\n    }\n    tokens.splice(from, tokens.length - from)\n    return result\n  }\n\n  unclosedBlock() {\n    let pos = this.current.source.start\n    throw this.input.error('Unclosed block', pos.line, pos.column)\n  }\n\n  unclosedBracket(bracket) {\n    throw this.input.error(\n      'Unclosed bracket',\n      { offset: bracket[2] },\n      { offset: bracket[2] + 1 }\n    )\n  }\n\n  unexpectedClose(token) {\n    throw this.input.error(\n      'Unexpected }',\n      { offset: token[2] },\n      { offset: token[2] + 1 }\n    )\n  }\n\n  unknownWord(tokens) {\n    throw this.input.error(\n      'Unknown word ' + tokens[0][1],\n      { offset: tokens[0][2] },\n      { offset: tokens[0][2] + tokens[0][1].length }\n    )\n  }\n\n  unnamedAtrule(node, token) {\n    throw this.input.error(\n      'At-rule without name',\n      { offset: token[2] },\n      { offset: token[2] + token[1].length }\n    )\n  }\n}\n\nmodule.exports = Parser\n", "'use strict'\n\nlet Container = require('./container')\nlet Input = require('./input')\nlet Parser = require('./parser')\n\nfunction parse(css, opts) {\n  let input = new Input(css, opts)\n  let parser = new Parser(input)\n  try {\n    parser.parse()\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (e.name === 'CssSyntaxError' && opts && opts.from) {\n        if (/\\.scss$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse SCSS with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-scss parser'\n        } else if (/\\.sass/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Sass with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-sass parser'\n        } else if (/\\.less$/i.test(opts.from)) {\n          e.message +=\n            '\\nYou tried to parse Less with ' +\n            'the standard CSS parser; ' +\n            'try again with the postcss-less parser'\n        }\n      }\n    }\n    throw e\n  }\n\n  return parser.root\n}\n\nmodule.exports = parse\nparse.default = parse\n\nContainer.registerParse(parse)\n", "'use strict'\n\nclass Warning {\n  constructor(text, opts = {}) {\n    this.type = 'warning'\n    this.text = text\n\n    if (opts.node && opts.node.source) {\n      let range = opts.node.rangeBy(opts)\n      this.line = range.start.line\n      this.column = range.start.column\n      this.endLine = range.end.line\n      this.endColumn = range.end.column\n    }\n\n    for (let opt in opts) this[opt] = opts[opt]\n  }\n\n  toString() {\n    if (this.node) {\n      return this.node.error(this.text, {\n        index: this.index,\n        plugin: this.plugin,\n        word: this.word\n      }).message\n    }\n\n    if (this.plugin) {\n      return this.plugin + ': ' + this.text\n    }\n\n    return this.text\n  }\n}\n\nmodule.exports = Warning\nWarning.default = Warning\n", "'use strict'\n\nlet Warning = require('./warning')\n\nclass Result {\n  get content() {\n    return this.css\n  }\n\n  constructor(processor, root, opts) {\n    this.processor = processor\n    this.messages = []\n    this.root = root\n    this.opts = opts\n    this.css = ''\n    this.map = undefined\n  }\n\n  toString() {\n    return this.css\n  }\n\n  warn(text, opts = {}) {\n    if (!opts.plugin) {\n      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {\n        opts.plugin = this.lastPlugin.postcssPlugin\n      }\n    }\n\n    let warning = new Warning(text, opts)\n    this.messages.push(warning)\n\n    return warning\n  }\n\n  warnings() {\n    return this.messages.filter(i => i.type === 'warning')\n  }\n}\n\nmodule.exports = Result\nResult.default = Result\n", "/* eslint-disable no-console */\n'use strict'\n\nlet printed = {}\n\nmodule.exports = function warnOnce(message) {\n  if (printed[message]) return\n  printed[message] = true\n\n  if (typeof console !== 'undefined' && console.warn) {\n    console.warn(message)\n  }\n}\n", "'use strict'\n\nlet Container = require('./container')\nlet Document = require('./document')\nlet MapGenerator = require('./map-generator')\nlet parse = require('./parse')\nlet Result = require('./result')\nlet Root = require('./root')\nlet stringify = require('./stringify')\nlet { isClean, my } = require('./symbols')\nlet warnOnce = require('./warn-once')\n\nconst TYPE_TO_CLASS_NAME = {\n  atrule: 'AtRule',\n  comment: 'Comment',\n  decl: 'Declaration',\n  document: 'Document',\n  root: 'Root',\n  rule: 'Rule'\n}\n\nconst PLUGIN_PROPS = {\n  AtRule: true,\n  AtRuleExit: true,\n  Comment: true,\n  CommentExit: true,\n  Declaration: true,\n  DeclarationExit: true,\n  Document: true,\n  DocumentExit: true,\n  Once: true,\n  OnceExit: true,\n  postcssPlugin: true,\n  prepare: true,\n  Root: true,\n  RootExit: true,\n  Rule: true,\n  RuleExit: true\n}\n\nconst NOT_VISITORS = {\n  Once: true,\n  postcssPlugin: true,\n  prepare: true\n}\n\nconst CHILDREN = 0\n\nfunction isPromise(obj) {\n  return typeof obj === 'object' && typeof obj.then === 'function'\n}\n\nfunction getEvents(node) {\n  let key = false\n  let type = TYPE_TO_CLASS_NAME[node.type]\n  if (node.type === 'decl') {\n    key = node.prop.toLowerCase()\n  } else if (node.type === 'atrule') {\n    key = node.name.toLowerCase()\n  }\n\n  if (key && node.append) {\n    return [\n      type,\n      type + '-' + key,\n      CHILDREN,\n      type + 'Exit',\n      type + 'Exit-' + key\n    ]\n  } else if (key) {\n    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]\n  } else if (node.append) {\n    return [type, CHILDREN, type + 'Exit']\n  } else {\n    return [type, type + 'Exit']\n  }\n}\n\nfunction toStack(node) {\n  let events\n  if (node.type === 'document') {\n    events = ['Document', CHILDREN, 'DocumentExit']\n  } else if (node.type === 'root') {\n    events = ['Root', CHILDREN, 'RootExit']\n  } else {\n    events = getEvents(node)\n  }\n\n  return {\n    eventIndex: 0,\n    events,\n    iterator: 0,\n    node,\n    visitorIndex: 0,\n    visitors: []\n  }\n}\n\nfunction cleanMarks(node) {\n  node[isClean] = false\n  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))\n  return node\n}\n\nlet postcss = {}\n\nclass LazyResult {\n  get content() {\n    return this.stringify().content\n  }\n\n  get css() {\n    return this.stringify().css\n  }\n\n  get map() {\n    return this.stringify().map\n  }\n\n  get messages() {\n    return this.sync().messages\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    return this.sync().root\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'LazyResult'\n  }\n\n  constructor(processor, css, opts) {\n    this.stringified = false\n    this.processed = false\n\n    let root\n    if (\n      typeof css === 'object' &&\n      css !== null &&\n      (css.type === 'root' || css.type === 'document')\n    ) {\n      root = cleanMarks(css)\n    } else if (css instanceof LazyResult || css instanceof Result) {\n      root = cleanMarks(css.root)\n      if (css.map) {\n        if (typeof opts.map === 'undefined') opts.map = {}\n        if (!opts.map.inline) opts.map.inline = false\n        opts.map.prev = css.map\n      }\n    } else {\n      let parser = parse\n      if (opts.syntax) parser = opts.syntax.parse\n      if (opts.parser) parser = opts.parser\n      if (parser.parse) parser = parser.parse\n\n      try {\n        root = parser(css, opts)\n      } catch (error) {\n        this.processed = true\n        this.error = error\n      }\n\n      if (root && !root[my]) {\n        /* c8 ignore next 2 */\n        Container.rebuild(root)\n      }\n    }\n\n    this.result = new Result(processor, root, opts)\n    this.helpers = { ...postcss, postcss, result: this.result }\n    this.plugins = this.processor.plugins.map(plugin => {\n      if (typeof plugin === 'object' && plugin.prepare) {\n        return { ...plugin, ...plugin.prepare(this.result) }\n      } else {\n        return plugin\n      }\n    })\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    if (this.processed) return Promise.resolve(this.result)\n    if (!this.processing) {\n      this.processing = this.runAsync()\n    }\n    return this.processing\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  getAsyncError() {\n    throw new Error('Use process(css).then(cb) to work with async plugins')\n  }\n\n  handleError(error, node) {\n    let plugin = this.result.lastPlugin\n    try {\n      if (node) node.addToError(error)\n      this.error = error\n      if (error.name === 'CssSyntaxError' && !error.plugin) {\n        error.plugin = plugin.postcssPlugin\n        error.setMessage()\n      } else if (plugin.postcssVersion) {\n        if (process.env.NODE_ENV !== 'production') {\n          let pluginName = plugin.postcssPlugin\n          let pluginVer = plugin.postcssVersion\n          let runtimeVer = this.result.processor.version\n          let a = pluginVer.split('.')\n          let b = runtimeVer.split('.')\n\n          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {\n            // eslint-disable-next-line no-console\n            console.error(\n              'Unknown error from PostCSS plugin. Your current PostCSS ' +\n                'version is ' +\n                runtimeVer +\n                ', but ' +\n                pluginName +\n                ' uses ' +\n                pluginVer +\n                '. Perhaps this is the source of the error below.'\n            )\n          }\n        }\n      }\n    } catch (err) {\n      /* c8 ignore next 3 */\n      // eslint-disable-next-line no-console\n      if (console && console.error) console.error(err)\n    }\n    return error\n  }\n\n  prepareVisitors() {\n    this.listeners = {}\n    let add = (plugin, type, cb) => {\n      if (!this.listeners[type]) this.listeners[type] = []\n      this.listeners[type].push([plugin, cb])\n    }\n    for (let plugin of this.plugins) {\n      if (typeof plugin === 'object') {\n        for (let event in plugin) {\n          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {\n            throw new Error(\n              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +\n                `Try to update PostCSS (${this.processor.version} now).`\n            )\n          }\n          if (!NOT_VISITORS[event]) {\n            if (typeof plugin[event] === 'object') {\n              for (let filter in plugin[event]) {\n                if (filter === '*') {\n                  add(plugin, event, plugin[event][filter])\n                } else {\n                  add(\n                    plugin,\n                    event + '-' + filter.toLowerCase(),\n                    plugin[event][filter]\n                  )\n                }\n              }\n            } else if (typeof plugin[event] === 'function') {\n              add(plugin, event, plugin[event])\n            }\n          }\n        }\n      }\n    }\n    this.hasListener = Object.keys(this.listeners).length > 0\n  }\n\n  async runAsync() {\n    this.plugin = 0\n    for (let i = 0; i < this.plugins.length; i++) {\n      let plugin = this.plugins[i]\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        try {\n          await promise\n        } catch (error) {\n          throw this.handleError(error)\n        }\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        let stack = [toStack(root)]\n        while (stack.length > 0) {\n          let promise = this.visitTick(stack)\n          if (isPromise(promise)) {\n            try {\n              await promise\n            } catch (e) {\n              let node = stack[stack.length - 1].node\n              throw this.handleError(e, node)\n            }\n          }\n        }\n      }\n\n      if (this.listeners.OnceExit) {\n        for (let [plugin, visitor] of this.listeners.OnceExit) {\n          this.result.lastPlugin = plugin\n          try {\n            if (root.type === 'document') {\n              let roots = root.nodes.map(subRoot =>\n                visitor(subRoot, this.helpers)\n              )\n\n              await Promise.all(roots)\n            } else {\n              await visitor(root, this.helpers)\n            }\n          } catch (e) {\n            throw this.handleError(e)\n          }\n        }\n      }\n    }\n\n    this.processed = true\n    return this.stringify()\n  }\n\n  runOnRoot(plugin) {\n    this.result.lastPlugin = plugin\n    try {\n      if (typeof plugin === 'object' && plugin.Once) {\n        if (this.result.root.type === 'document') {\n          let roots = this.result.root.nodes.map(root =>\n            plugin.Once(root, this.helpers)\n          )\n\n          if (isPromise(roots[0])) {\n            return Promise.all(roots)\n          }\n\n          return roots\n        }\n\n        return plugin.Once(this.result.root, this.helpers)\n      } else if (typeof plugin === 'function') {\n        return plugin(this.result.root, this.result)\n      }\n    } catch (error) {\n      throw this.handleError(error)\n    }\n  }\n\n  stringify() {\n    if (this.error) throw this.error\n    if (this.stringified) return this.result\n    this.stringified = true\n\n    this.sync()\n\n    let opts = this.result.opts\n    let str = stringify\n    if (opts.syntax) str = opts.syntax.stringify\n    if (opts.stringifier) str = opts.stringifier\n    if (str.stringify) str = str.stringify\n\n    let map = new MapGenerator(str, this.result.root, this.result.opts)\n    let data = map.generate()\n    this.result.css = data[0]\n    this.result.map = data[1]\n\n    return this.result\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    if (this.processed) return this.result\n    this.processed = true\n\n    if (this.processing) {\n      throw this.getAsyncError()\n    }\n\n    for (let plugin of this.plugins) {\n      let promise = this.runOnRoot(plugin)\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n\n    this.prepareVisitors()\n    if (this.hasListener) {\n      let root = this.result.root\n      while (!root[isClean]) {\n        root[isClean] = true\n        this.walkSync(root)\n      }\n      if (this.listeners.OnceExit) {\n        if (root.type === 'document') {\n          for (let subRoot of root.nodes) {\n            this.visitSync(this.listeners.OnceExit, subRoot)\n          }\n        } else {\n          this.visitSync(this.listeners.OnceExit, root)\n        }\n      }\n    }\n\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this.opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this.css\n  }\n\n  visitSync(visitors, node) {\n    for (let [plugin, visitor] of visitors) {\n      this.result.lastPlugin = plugin\n      let promise\n      try {\n        promise = visitor(node, this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node.proxyOf)\n      }\n      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n        return true\n      }\n      if (isPromise(promise)) {\n        throw this.getAsyncError()\n      }\n    }\n  }\n\n  visitTick(stack) {\n    let visit = stack[stack.length - 1]\n    let { node, visitors } = visit\n\n    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {\n      stack.pop()\n      return\n    }\n\n    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {\n      let [plugin, visitor] = visitors[visit.visitorIndex]\n      visit.visitorIndex += 1\n      if (visit.visitorIndex === visitors.length) {\n        visit.visitors = []\n        visit.visitorIndex = 0\n      }\n      this.result.lastPlugin = plugin\n      try {\n        return visitor(node.toProxy(), this.helpers)\n      } catch (e) {\n        throw this.handleError(e, node)\n      }\n    }\n\n    if (visit.iterator !== 0) {\n      let iterator = visit.iterator\n      let child\n      while ((child = node.nodes[node.indexes[iterator]])) {\n        node.indexes[iterator] += 1\n        if (!child[isClean]) {\n          child[isClean] = true\n          stack.push(toStack(child))\n          return\n        }\n      }\n      visit.iterator = 0\n      delete node.indexes[iterator]\n    }\n\n    let events = visit.events\n    while (visit.eventIndex < events.length) {\n      let event = events[visit.eventIndex]\n      visit.eventIndex += 1\n      if (event === CHILDREN) {\n        if (node.nodes && node.nodes.length) {\n          node[isClean] = true\n          visit.iterator = node.getIterator()\n        }\n        return\n      } else if (this.listeners[event]) {\n        visit.visitors = this.listeners[event]\n        return\n      }\n    }\n    stack.pop()\n  }\n\n  walkSync(node) {\n    node[isClean] = true\n    let events = getEvents(node)\n    for (let event of events) {\n      if (event === CHILDREN) {\n        if (node.nodes) {\n          node.each(child => {\n            if (!child[isClean]) this.walkSync(child)\n          })\n        }\n      } else {\n        let visitors = this.listeners[event]\n        if (visitors) {\n          if (this.visitSync(visitors, node.toProxy())) return\n        }\n      }\n    }\n  }\n\n  warnings() {\n    return this.sync().warnings()\n  }\n}\n\nLazyResult.registerPostcss = dependant => {\n  postcss = dependant\n}\n\nmodule.exports = LazyResult\nLazyResult.default = LazyResult\n\nRoot.registerLazyResult(LazyResult)\nDocument.registerLazyResult(LazyResult)\n", "'use strict'\n\nlet MapGenerator = require('./map-generator')\nlet parse = require('./parse')\nconst Result = require('./result')\nlet stringify = require('./stringify')\nlet warnOnce = require('./warn-once')\n\nclass NoWorkResult {\n  get content() {\n    return this.result.css\n  }\n\n  get css() {\n    return this.result.css\n  }\n\n  get map() {\n    return this.result.map\n  }\n\n  get messages() {\n    return []\n  }\n\n  get opts() {\n    return this.result.opts\n  }\n\n  get processor() {\n    return this.result.processor\n  }\n\n  get root() {\n    if (this._root) {\n      return this._root\n    }\n\n    let root\n    let parser = parse\n\n    try {\n      root = parser(this._css, this._opts)\n    } catch (error) {\n      this.error = error\n    }\n\n    if (this.error) {\n      throw this.error\n    } else {\n      this._root = root\n      return root\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'NoWorkResult'\n  }\n\n  constructor(processor, css, opts) {\n    css = css.toString()\n    this.stringified = false\n\n    this._processor = processor\n    this._css = css\n    this._opts = opts\n    this._map = undefined\n    let root\n\n    let str = stringify\n    this.result = new Result(this._processor, root, this._opts)\n    this.result.css = css\n\n    let self = this\n    Object.defineProperty(this.result, 'root', {\n      get() {\n        return self.root\n      }\n    })\n\n    let map = new MapGenerator(str, root, this._opts, css)\n    if (map.isMap()) {\n      let [generatedCSS, generatedMap] = map.generate()\n      if (generatedCSS) {\n        this.result.css = generatedCSS\n      }\n      if (generatedMap) {\n        this.result.map = generatedMap\n      }\n    } else {\n      map.clearAnnotation()\n      this.result.css = map.css\n    }\n  }\n\n  async() {\n    if (this.error) return Promise.reject(this.error)\n    return Promise.resolve(this.result)\n  }\n\n  catch(onRejected) {\n    return this.async().catch(onRejected)\n  }\n\n  finally(onFinally) {\n    return this.async().then(onFinally, onFinally)\n  }\n\n  sync() {\n    if (this.error) throw this.error\n    return this.result\n  }\n\n  then(onFulfilled, onRejected) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!('from' in this._opts)) {\n        warnOnce(\n          'Without `from` option PostCSS could generate wrong source map ' +\n            'and will not find Browserslist config. Set it to CSS file path ' +\n            'or to `undefined` to prevent this warning.'\n        )\n      }\n    }\n\n    return this.async().then(onFulfilled, onRejected)\n  }\n\n  toString() {\n    return this._css\n  }\n\n  warnings() {\n    return []\n  }\n}\n\nmodule.exports = NoWorkResult\nNoWorkResult.default = NoWorkResult\n", "'use strict'\n\nlet Document = require('./document')\nlet LazyResult = require('./lazy-result')\nlet NoWorkResult = require('./no-work-result')\nlet Root = require('./root')\n\nclass Processor {\n  constructor(plugins = []) {\n    this.version = '8.5.6'\n    this.plugins = this.normalize(plugins)\n  }\n\n  normalize(plugins) {\n    let normalized = []\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i()\n      } else if (i.postcss) {\n        i = i.postcss\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins)\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i)\n      } else if (typeof i === 'function') {\n        normalized.push(i)\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error(\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\n              'one of the syntax/parser/stringifier options as outlined ' +\n              'in your PostCSS runner documentation.'\n          )\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin')\n      }\n    }\n    return normalized\n  }\n\n  process(css, opts = {}) {\n    if (\n      !this.plugins.length &&\n      !opts.parser &&\n      !opts.stringifier &&\n      !opts.syntax\n    ) {\n      return new NoWorkResult(this, css, opts)\n    } else {\n      return new LazyResult(this, css, opts)\n    }\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\n    return this\n  }\n}\n\nmodule.exports = Processor\nProcessor.default = Processor\n\nRoot.registerProcessor(Processor)\nDocument.registerProcessor(Processor)\n", "'use strict'\n\nlet AtRule = require('./at-rule')\nlet Comment = require('./comment')\nlet Container = require('./container')\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet Document = require('./document')\nlet fromJSON = require('./fromJSON')\nlet Input = require('./input')\nlet LazyResult = require('./lazy-result')\nlet list = require('./list')\nlet Node = require('./node')\nlet parse = require('./parse')\nlet Processor = require('./processor')\nlet Result = require('./result.js')\nlet Root = require('./root')\nlet Rule = require('./rule')\nlet stringify = require('./stringify')\nlet Warning = require('./warning')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  let warningPrinted = false\n  function creator(...args) {\n    // eslint-disable-next-line no-console\n    if (console && console.warn && !warningPrinted) {\n      warningPrinted = true\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': postcss.plugin was deprecated. Migration guide:\\n' +\n          'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n      )\n      if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n        /* c8 ignore next 7 */\n        // eslint-disable-next-line no-console\n        console.warn(\n          name +\n            ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n            'https://www.w3ctech.com/topic/2226'\n        )\n      }\n    }\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n", "var openParentheses = \"(\".charCodeAt(0);\nvar closeParentheses = \")\".charCodeAt(0);\nvar singleQuote = \"'\".charCodeAt(0);\nvar doubleQuote = '\"'.charCodeAt(0);\nvar backslash = \"\\\\\".charCodeAt(0);\nvar slash = \"/\".charCodeAt(0);\nvar comma = \",\".charCodeAt(0);\nvar colon = \":\".charCodeAt(0);\nvar star = \"*\".charCodeAt(0);\nvar uLower = \"u\".charCodeAt(0);\nvar uUpper = \"U\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar isUnicodeRange = /^[a-f0-9?-]+$/i;\n\nmodule.exports = function(input) {\n  var tokens = [];\n  var value = input;\n\n  var next,\n    quote,\n    prev,\n    token,\n    escape,\n    escapePos,\n    whitespacePos,\n    parenthesesOpenPos;\n  var pos = 0;\n  var code = value.charCodeAt(pos);\n  var max = value.length;\n  var stack = [{ nodes: tokens }];\n  var balanced = 0;\n  var parent;\n\n  var name = \"\";\n  var before = \"\";\n  var after = \"\";\n\n  while (pos < max) {\n    // Whitespaces\n    if (code <= 32) {\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      token = value.slice(pos, next);\n\n      prev = tokens[tokens.length - 1];\n      if (code === closeParentheses && balanced) {\n        after = token;\n      } else if (prev && prev.type === \"div\") {\n        prev.after = token;\n        prev.sourceEndIndex += token.length;\n      } else if (\n        code === comma ||\n        code === colon ||\n        (code === slash &&\n          value.charCodeAt(next + 1) !== star &&\n          (!parent ||\n            (parent && parent.type === \"function\" && parent.value !== \"calc\")))\n      ) {\n        before = token;\n      } else {\n        tokens.push({\n          type: \"space\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n\n      // Quotes\n    } else if (code === singleQuote || code === doubleQuote) {\n      next = pos;\n      quote = code === singleQuote ? \"'\" : '\"';\n      token = {\n        type: \"string\",\n        sourceIndex: pos,\n        quote: quote\n      };\n      do {\n        escape = false;\n        next = value.indexOf(quote, next + 1);\n        if (~next) {\n          escapePos = next;\n          while (value.charCodeAt(escapePos - 1) === backslash) {\n            escapePos -= 1;\n            escape = !escape;\n          }\n        } else {\n          value += quote;\n          next = value.length - 1;\n          token.unclosed = true;\n        }\n      } while (escape);\n      token.value = value.slice(pos + 1, next);\n      token.sourceEndIndex = token.unclosed ? next : next + 1;\n      tokens.push(token);\n      pos = next + 1;\n      code = value.charCodeAt(pos);\n\n      // Comments\n    } else if (code === slash && value.charCodeAt(pos + 1) === star) {\n      next = value.indexOf(\"*/\", pos);\n\n      token = {\n        type: \"comment\",\n        sourceIndex: pos,\n        sourceEndIndex: next + 2\n      };\n\n      if (next === -1) {\n        token.unclosed = true;\n        next = value.length;\n        token.sourceEndIndex = next;\n      }\n\n      token.value = value.slice(pos + 2, next);\n      tokens.push(token);\n\n      pos = next + 2;\n      code = value.charCodeAt(pos);\n\n      // Operation within calc\n    } else if (\n      (code === slash || code === star) &&\n      parent &&\n      parent.type === \"function\" &&\n      parent.value === \"calc\"\n    ) {\n      token = value[pos];\n      tokens.push({\n        type: \"word\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token\n      });\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Dividers\n    } else if (code === slash || code === comma || code === colon) {\n      token = value[pos];\n\n      tokens.push({\n        type: \"div\",\n        sourceIndex: pos - before.length,\n        sourceEndIndex: pos + token.length,\n        value: token,\n        before: before,\n        after: \"\"\n      });\n      before = \"\";\n\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      // Open parentheses\n    } else if (openParentheses === code) {\n      // Whitespaces after open parentheses\n      next = pos;\n      do {\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (code <= 32);\n      parenthesesOpenPos = pos;\n      token = {\n        type: \"function\",\n        sourceIndex: pos - name.length,\n        value: name,\n        before: value.slice(parenthesesOpenPos + 1, next)\n      };\n      pos = next;\n\n      if (name === \"url\" && code !== singleQuote && code !== doubleQuote) {\n        next -= 1;\n        do {\n          escape = false;\n          next = value.indexOf(\")\", next + 1);\n          if (~next) {\n            escapePos = next;\n            while (value.charCodeAt(escapePos - 1) === backslash) {\n              escapePos -= 1;\n              escape = !escape;\n            }\n          } else {\n            value += \")\";\n            next = value.length - 1;\n            token.unclosed = true;\n          }\n        } while (escape);\n        // Whitespaces before closed\n        whitespacePos = next;\n        do {\n          whitespacePos -= 1;\n          code = value.charCodeAt(whitespacePos);\n        } while (code <= 32);\n        if (parenthesesOpenPos < whitespacePos) {\n          if (pos !== whitespacePos + 1) {\n            token.nodes = [\n              {\n                type: \"word\",\n                sourceIndex: pos,\n                sourceEndIndex: whitespacePos + 1,\n                value: value.slice(pos, whitespacePos + 1)\n              }\n            ];\n          } else {\n            token.nodes = [];\n          }\n          if (token.unclosed && whitespacePos + 1 !== next) {\n            token.after = \"\";\n            token.nodes.push({\n              type: \"space\",\n              sourceIndex: whitespacePos + 1,\n              sourceEndIndex: next,\n              value: value.slice(whitespacePos + 1, next)\n            });\n          } else {\n            token.after = value.slice(whitespacePos + 1, next);\n            token.sourceEndIndex = next;\n          }\n        } else {\n          token.after = \"\";\n          token.nodes = [];\n        }\n        pos = next + 1;\n        token.sourceEndIndex = token.unclosed ? next : pos;\n        code = value.charCodeAt(pos);\n        tokens.push(token);\n      } else {\n        balanced += 1;\n        token.after = \"\";\n        token.sourceEndIndex = pos + 1;\n        tokens.push(token);\n        stack.push(token);\n        tokens = token.nodes = [];\n        parent = token;\n      }\n      name = \"\";\n\n      // Close parentheses\n    } else if (closeParentheses === code && balanced) {\n      pos += 1;\n      code = value.charCodeAt(pos);\n\n      parent.after = after;\n      parent.sourceEndIndex += after.length;\n      after = \"\";\n      balanced -= 1;\n      stack[stack.length - 1].sourceEndIndex = pos;\n      stack.pop();\n      parent = stack[balanced];\n      tokens = parent.nodes;\n\n      // Words\n    } else {\n      next = pos;\n      do {\n        if (code === backslash) {\n          next += 1;\n        }\n        next += 1;\n        code = value.charCodeAt(next);\n      } while (\n        next < max &&\n        !(\n          code <= 32 ||\n          code === singleQuote ||\n          code === doubleQuote ||\n          code === comma ||\n          code === colon ||\n          code === slash ||\n          code === openParentheses ||\n          (code === star &&\n            parent &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === slash &&\n            parent.type === \"function\" &&\n            parent.value === \"calc\") ||\n          (code === closeParentheses && balanced)\n        )\n      );\n      token = value.slice(pos, next);\n\n      if (openParentheses === code) {\n        name = token;\n      } else if (\n        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&\n        plus === token.charCodeAt(1) &&\n        isUnicodeRange.test(token.slice(2))\n      ) {\n        tokens.push({\n          type: \"unicode-range\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      } else {\n        tokens.push({\n          type: \"word\",\n          sourceIndex: pos,\n          sourceEndIndex: next,\n          value: token\n        });\n      }\n\n      pos = next;\n    }\n  }\n\n  for (pos = stack.length - 1; pos; pos -= 1) {\n    stack[pos].unclosed = true;\n    stack[pos].sourceEndIndex = value.length;\n  }\n\n  return stack[0].nodes;\n};\n", "module.exports = function walk(nodes, cb, bubble) {\n  var i, max, node, result;\n\n  for (i = 0, max = nodes.length; i < max; i += 1) {\n    node = nodes[i];\n    if (!bubble) {\n      result = cb(node, i, nodes);\n    }\n\n    if (\n      result !== false &&\n      node.type === \"function\" &&\n      Array.isArray(node.nodes)\n    ) {\n      walk(node.nodes, cb, bubble);\n    }\n\n    if (bubble) {\n      cb(node, i, nodes);\n    }\n  }\n};\n", "function stringifyNode(node, custom) {\n  var type = node.type;\n  var value = node.value;\n  var buf;\n  var customResult;\n\n  if (custom && (customResult = custom(node)) !== undefined) {\n    return customResult;\n  } else if (type === \"word\" || type === \"space\") {\n    return value;\n  } else if (type === \"string\") {\n    buf = node.quote || \"\";\n    return buf + value + (node.unclosed ? \"\" : buf);\n  } else if (type === \"comment\") {\n    return \"/*\" + value + (node.unclosed ? \"\" : \"*/\");\n  } else if (type === \"div\") {\n    return (node.before || \"\") + value + (node.after || \"\");\n  } else if (Array.isArray(node.nodes)) {\n    buf = stringify(node.nodes, custom);\n    if (type !== \"function\") {\n      return buf;\n    }\n    return (\n      value +\n      \"(\" +\n      (node.before || \"\") +\n      buf +\n      (node.after || \"\") +\n      (node.unclosed ? \"\" : \")\")\n    );\n  }\n  return value;\n}\n\nfunction stringify(nodes, custom) {\n  var result, i;\n\n  if (Array.isArray(nodes)) {\n    result = \"\";\n    for (i = nodes.length - 1; ~i; i -= 1) {\n      result = stringifyNode(nodes[i], custom) + result;\n    }\n    return result;\n  }\n  return stringifyNode(nodes, custom);\n}\n\nmodule.exports = stringify;\n", "var minus = \"-\".charCodeAt(0);\nvar plus = \"+\".charCodeAt(0);\nvar dot = \".\".charCodeAt(0);\nvar exp = \"e\".charCodeAt(0);\nvar EXP = \"E\".charCodeAt(0);\n\n// Check if three code points would start a number\n// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number\nfunction likeNumber(value) {\n  var code = value.charCodeAt(0);\n  var nextCode;\n\n  if (code === plus || code === minus) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    var nextNextCode = value.charCodeAt(2);\n\n    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code === dot) {\n    nextCode = value.charCodeAt(1);\n\n    if (nextCode >= 48 && nextCode <= 57) {\n      return true;\n    }\n\n    return false;\n  }\n\n  if (code >= 48 && code <= 57) {\n    return true;\n  }\n\n  return false;\n}\n\n// Consume a number\n// https://www.w3.org/TR/css-syntax-3/#consume-number\nmodule.exports = function(value) {\n  var pos = 0;\n  var length = value.length;\n  var code;\n  var nextCode;\n  var nextNextCode;\n\n  if (length === 0 || !likeNumber(value)) {\n    return false;\n  }\n\n  code = value.charCodeAt(pos);\n\n  if (code === plus || code === minus) {\n    pos++;\n  }\n\n  while (pos < length) {\n    code = value.charCodeAt(pos);\n\n    if (code < 48 || code > 57) {\n      break;\n    }\n\n    pos += 1;\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n\n  if (code === dot && nextCode >= 48 && nextCode <= 57) {\n    pos += 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  code = value.charCodeAt(pos);\n  nextCode = value.charCodeAt(pos + 1);\n  nextNextCode = value.charCodeAt(pos + 2);\n\n  if (\n    (code === exp || code === EXP) &&\n    ((nextCode >= 48 && nextCode <= 57) ||\n      ((nextCode === plus || nextCode === minus) &&\n        nextNextCode >= 48 &&\n        nextNextCode <= 57))\n  ) {\n    pos += nextCode === plus || nextCode === minus ? 3 : 2;\n\n    while (pos < length) {\n      code = value.charCodeAt(pos);\n\n      if (code < 48 || code > 57) {\n        break;\n      }\n\n      pos += 1;\n    }\n  }\n\n  return {\n    number: value.slice(0, pos),\n    unit: value.slice(pos)\n  };\n};\n", "var parse = require(\"./parse\");\nvar walk = require(\"./walk\");\nvar stringify = require(\"./stringify\");\n\nfunction ValueParser(value) {\n  if (this instanceof ValueParser) {\n    this.nodes = parse(value);\n    return this;\n  }\n  return new ValueParser(value);\n}\n\nValueParser.prototype.toString = function() {\n  return Array.isArray(this.nodes) ? stringify(this.nodes) : \"\";\n};\n\nValueParser.prototype.walk = function(cb, bubble) {\n  walk(this.nodes, cb, bubble);\n  return this;\n};\n\nValueParser.unit = require(\"./unit\");\n\nValueParser.walk = walk;\n\nValueParser.stringify = stringify;\n\nmodule.exports = ValueParser;\n", "// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = (GradientParser || {});\n\nGradientParser.stringify = (function() {\n\n  var visitor = {\n\n    'visit_linear-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_repeating-linear-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_radial-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_repeating-radial-gradient': function(node) {\n      return visitor.visit_gradient(node);\n    },\n\n    'visit_gradient': function(node) {\n      var orientation = visitor.visit(node.orientation);\n      if (orientation) {\n        orientation += ', ';\n      }\n\n      return node.type + '(' + orientation + visitor.visit(node.colorStops) + ')';\n    },\n\n    'visit_shape': function(node) {\n      var result = node.value,\n          at = visitor.visit(node.at),\n          style = visitor.visit(node.style);\n\n      if (style) {\n        result += ' ' + style;\n      }\n\n      if (at) {\n        result += ' at ' + at;\n      }\n\n      return result;\n    },\n\n    'visit_default-radial': function(node) {\n      var result = '',\n          at = visitor.visit(node.at);\n\n      if (at) {\n        result += at;\n      }\n      return result;\n    },\n\n    'visit_extent-keyword': function(node) {\n      var result = node.value,\n          at = visitor.visit(node.at);\n\n      if (at) {\n        result += ' at ' + at;\n      }\n\n      return result;\n    },\n\n    'visit_position-keyword': function(node) {\n      return node.value;\n    },\n\n    'visit_position': function(node) {\n      return visitor.visit(node.value.x) + ' ' + visitor.visit(node.value.y);\n    },\n\n    'visit_%': function(node) {\n      return node.value + '%';\n    },\n\n    'visit_em': function(node) {\n      return node.value + 'em';\n    },\n\n    'visit_px': function(node) {\n      return node.value + 'px';\n    },\n\n    'visit_calc': function(node) {\n      return 'calc(' + node.value + ')';\n    },\n\n    'visit_literal': function(node) {\n      return visitor.visit_color(node.value, node);\n    },\n\n    'visit_hex': function(node) {\n      return visitor.visit_color('#' + node.value, node);\n    },\n\n    'visit_rgb': function(node) {\n      return visitor.visit_color('rgb(' + node.value.join(', ') + ')', node);\n    },\n\n    'visit_rgba': function(node) {\n      return visitor.visit_color('rgba(' + node.value.join(', ') + ')', node);\n    },\n\n    'visit_hsl': function(node) {\n      return visitor.visit_color('hsl(' + node.value[0] + ', ' + node.value[1] + '%, ' + node.value[2] + '%)', node);\n    },\n\n    'visit_hsla': function(node) {\n      return visitor.visit_color('hsla(' + node.value[0] + ', ' + node.value[1] + '%, ' + node.value[2] + '%, ' + node.value[3] + ')', node);\n    },\n\n    'visit_var': function(node) {\n      return visitor.visit_color('var(' + node.value + ')', node);\n    },\n\n    'visit_color': function(resultColor, node) {\n      var result = resultColor,\n          length = visitor.visit(node.length);\n\n      if (length) {\n        result += ' ' + length;\n      }\n      return result;\n    },\n\n    'visit_angular': function(node) {\n      return node.value + 'deg';\n    },\n\n    'visit_directional': function(node) {\n      return 'to ' + node.value;\n    },\n\n    'visit_array': function(elements) {\n      var result = '',\n          size = elements.length;\n\n      elements.forEach(function(element, i) {\n        result += visitor.visit(element);\n        if (i < size - 1) {\n          result += ', ';\n        }\n      });\n\n      return result;\n    },\n\n    'visit_object': function(obj) {\n      if (obj.width && obj.height) {\n        return visitor.visit(obj.width) + ' ' + visitor.visit(obj.height);\n      }\n      return '';\n    },\n\n    'visit': function(element) {\n      if (!element) {\n        return '';\n      }\n      var result = '';\n\n      if (element instanceof Array) {\n        return visitor.visit_array(element);\n      } else if (typeof element === 'object' && !element.type) {\n        return visitor.visit_object(element);\n      } else if (element.type) {\n        var nodeVisitor = visitor['visit_' + element.type];\n        if (nodeVisitor) {\n          return nodeVisitor(element);\n        } else {\n          throw Error('Missing visitor visit_' + element.type);\n        }\n      } else {\n        throw Error('Invalid node.');\n      }\n    }\n\n  };\n\n  return function(root) {\n    return visitor.visit(root);\n  };\n})();\n\n// Copyright (c) 2014 Rafael Caricio. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nvar GradientParser = (GradientParser || {});\n\nGradientParser.parse = (function() {\n\n  var tokens = {\n    linearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(linear\\-gradient)/i,\n    repeatingLinearGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-linear\\-gradient)/i,\n    radialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(radial\\-gradient)/i,\n    repeatingRadialGradient: /^(\\-(webkit|o|ms|moz)\\-)?(repeating\\-radial\\-gradient)/i,\n    sideOrCorner: /^to (left (top|bottom)|right (top|bottom)|top (left|right)|bottom (left|right)|left|right|top|bottom)/i,\n    extentKeywords: /^(closest\\-side|closest\\-corner|farthest\\-side|farthest\\-corner|contain|cover)/,\n    positionKeywords: /^(left|center|right|top|bottom)/i,\n    pixelValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))px/,\n    percentageValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))\\%/,\n    emValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))em/,\n    angleValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))deg/,\n    radianValue: /^(-?(([0-9]*\\.[0-9]+)|([0-9]+\\.?)))rad/,\n    startCall: /^\\(/,\n    endCall: /^\\)/,\n    comma: /^,/,\n    hexColor: /^\\#([0-9a-fA-F]+)/,\n    literalColor: /^([a-zA-Z]+)/,\n    rgbColor: /^rgb/i,\n    rgbaColor: /^rgba/i,\n    varColor: /^var/i,\n    calcValue: /^calc/i,\n    variableName: /^(--[a-zA-Z0-9-,\\s\\#]+)/,\n    number: /^(([0-9]*\\.[0-9]+)|([0-9]+\\.?))/,\n    hslColor: /^hsl/i,\n    hslaColor: /^hsla/i,\n  };\n\n  var input = '';\n\n  function error(msg) {\n    var err = new Error(input + ': ' + msg);\n    err.source = input;\n    throw err;\n  }\n\n  function getAST() {\n    var ast = matchListDefinitions();\n\n    if (input.length > 0) {\n      error('Invalid input not EOF');\n    }\n\n    return ast;\n  }\n\n  function matchListDefinitions() {\n    return matchListing(matchDefinition);\n  }\n\n  function matchDefinition() {\n    return matchGradient(\n            'linear-gradient',\n            tokens.linearGradient,\n            matchLinearOrientation) ||\n\n          matchGradient(\n            'repeating-linear-gradient',\n            tokens.repeatingLinearGradient,\n            matchLinearOrientation) ||\n\n          matchGradient(\n            'radial-gradient',\n            tokens.radialGradient,\n            matchListRadialOrientations) ||\n\n          matchGradient(\n            'repeating-radial-gradient',\n            tokens.repeatingRadialGradient,\n            matchListRadialOrientations);\n  }\n\n  function matchGradient(gradientType, pattern, orientationMatcher) {\n    return matchCall(pattern, function(captures) {\n\n      var orientation = orientationMatcher();\n      if (orientation) {\n        if (!scan(tokens.comma)) {\n          error('Missing comma before color stops');\n        }\n      }\n\n      return {\n        type: gradientType,\n        orientation: orientation,\n        colorStops: matchListing(matchColorStop)\n      };\n    });\n  }\n\n  function matchCall(pattern, callback) {\n    var captures = scan(pattern);\n\n    if (captures) {\n      if (!scan(tokens.startCall)) {\n        error('Missing (');\n      }\n\n      var result = callback(captures);\n\n      if (!scan(tokens.endCall)) {\n        error('Missing )');\n      }\n\n      return result;\n    }\n  }\n\n  function matchLinearOrientation() {\n    // Check for standard CSS3 \"to\" direction\n    var sideOrCorner = matchSideOrCorner();\n    if (sideOrCorner) {\n      return sideOrCorner;\n    }\n    \n    // Check for legacy single keyword direction (e.g., \"right\", \"top\")\n    var legacyDirection = match('position-keyword', tokens.positionKeywords, 1);\n    if (legacyDirection) {\n      // For legacy syntax, we convert to the directional type\n      return {\n        type: 'directional',\n        value: legacyDirection.value\n      };\n    }\n    \n    // If neither, check for angle\n    return matchAngle();\n  }\n\n  function matchSideOrCorner() {\n    return match('directional', tokens.sideOrCorner, 1);\n  }\n\n  function matchAngle() {\n    return match('angular', tokens.angleValue, 1) ||\n      match('angular', tokens.radianValue, 1);\n  }\n\n  function matchListRadialOrientations() {\n    var radialOrientations,\n        radialOrientation = matchRadialOrientation(),\n        lookaheadCache;\n\n    if (radialOrientation) {\n      radialOrientations = [];\n      radialOrientations.push(radialOrientation);\n\n      lookaheadCache = input;\n      if (scan(tokens.comma)) {\n        radialOrientation = matchRadialOrientation();\n        if (radialOrientation) {\n          radialOrientations.push(radialOrientation);\n        } else {\n          input = lookaheadCache;\n        }\n      }\n    }\n\n    return radialOrientations;\n  }\n\n  function matchRadialOrientation() {\n    var radialType = matchCircle() ||\n      matchEllipse();\n\n    if (radialType) {\n      radialType.at = matchAtPosition();\n    } else {\n      var extent = matchExtentKeyword();\n      if (extent) {\n        radialType = extent;\n        var positionAt = matchAtPosition();\n        if (positionAt) {\n          radialType.at = positionAt;\n        }\n      } else {\n        // Check for \"at\" position first, which is a common browser output format\n        var atPosition = matchAtPosition();\n        if (atPosition) {\n          radialType = {\n            type: 'default-radial',\n            at: atPosition\n          };\n        } else {\n          var defaultPosition = matchPositioning();\n          if (defaultPosition) {\n            radialType = {\n              type: 'default-radial',\n              at: defaultPosition\n            };\n          }\n        }\n      }\n    }\n\n    return radialType;\n  }\n\n  function matchCircle() {\n    var circle = match('shape', /^(circle)/i, 0);\n\n    if (circle) {\n      circle.style = matchLength() || matchExtentKeyword();\n    }\n\n    return circle;\n  }\n\n  function matchEllipse() {\n    var ellipse = match('shape', /^(ellipse)/i, 0);\n\n    if (ellipse) {\n      ellipse.style = matchPositioning() || matchDistance() || matchExtentKeyword();\n    }\n\n    return ellipse;\n  }\n\n  function matchExtentKeyword() {\n    return match('extent-keyword', tokens.extentKeywords, 1);\n  }\n\n  function matchAtPosition() {\n    if (match('position', /^at/, 0)) {\n      var positioning = matchPositioning();\n\n      if (!positioning) {\n        error('Missing positioning value');\n      }\n\n      return positioning;\n    }\n  }\n\n  function matchPositioning() {\n    var location = matchCoordinates();\n\n    if (location.x || location.y) {\n      return {\n        type: 'position',\n        value: location\n      };\n    }\n  }\n\n  function matchCoordinates() {\n    return {\n      x: matchDistance(),\n      y: matchDistance()\n    };\n  }\n\n  function matchListing(matcher) {\n    var captures = matcher(),\n      result = [];\n\n    if (captures) {\n      result.push(captures);\n      while (scan(tokens.comma)) {\n        captures = matcher();\n        if (captures) {\n          result.push(captures);\n        } else {\n          error('One extra comma');\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function matchColorStop() {\n    var color = matchColor();\n\n    if (!color) {\n      error('Expected color definition');\n    }\n\n    color.length = matchDistance();\n    return color;\n  }\n\n  function matchColor() {\n    return matchHexColor() ||\n      matchHSLAColor() ||\n      matchHSLColor() ||\n      matchRGBAColor() ||\n      matchRGBColor() ||\n      matchVarColor() ||\n      matchLiteralColor();\n  }\n\n  function matchLiteralColor() {\n    return match('literal', tokens.literalColor, 0);\n  }\n\n  function matchHexColor() {\n    return match('hex', tokens.hexColor, 1);\n  }\n\n  function matchRGBColor() {\n    return matchCall(tokens.rgbColor, function() {\n      return  {\n        type: 'rgb',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n\n  function matchRGBAColor() {\n    return matchCall(tokens.rgbaColor, function() {\n      return  {\n        type: 'rgba',\n        value: matchListing(matchNumber)\n      };\n    });\n  }\n\n  function matchVarColor() {\n    return matchCall(tokens.varColor, function () {\n      return {\n        type: 'var',\n        value: matchVariableName()\n      };\n    });\n  }\n\n  function matchHSLColor() {\n    return matchCall(tokens.hslColor, function() {\n      // Check for percentage before trying to parse the hue\n      var lookahead = scan(tokens.percentageValue);\n      if (lookahead) {\n        error('HSL hue value must be a number in degrees (0-360) or normalized (-360 to 360), not a percentage');\n      }\n      \n      var hue = matchNumber();\n      scan(tokens.comma);\n      var captures = scan(tokens.percentageValue);\n      var sat = captures ? captures[1] : null;\n      scan(tokens.comma);\n      captures = scan(tokens.percentageValue);\n      var light = captures ? captures[1] : null;\n      if (!sat || !light) {\n        error('Expected percentage value for saturation and lightness in HSL');\n      }\n      return {\n        type: 'hsl',\n        value: [hue, sat, light]\n      };\n    });\n  }\n\n  function matchHSLAColor() {\n    return matchCall(tokens.hslaColor, function() {\n      var hue = matchNumber();\n      scan(tokens.comma);\n      var captures = scan(tokens.percentageValue);\n      var sat = captures ? captures[1] : null;\n      scan(tokens.comma);\n      captures = scan(tokens.percentageValue);\n      var light = captures ? captures[1] : null;\n      scan(tokens.comma);\n      var alpha = matchNumber();\n      if (!sat || !light) {\n        error('Expected percentage value for saturation and lightness in HSLA');\n      }\n      return {\n        type: 'hsla',\n        value: [hue, sat, light, alpha]\n      };\n    });\n  }\n\n  function matchPercentage() {\n    var captures = scan(tokens.percentageValue);\n    return captures ? captures[1] : null;\n  }\n\n  function matchVariableName() {\n    return scan(tokens.variableName)[1];\n  }\n\n  function matchNumber() {\n    return scan(tokens.number)[1];\n  }\n\n  function matchDistance() {\n    return match('%', tokens.percentageValue, 1) ||\n      matchPositionKeyword() ||\n      matchCalc() ||\n      matchLength();\n  }\n\n  function matchPositionKeyword() {\n    return match('position-keyword', tokens.positionKeywords, 1);\n  }\n\n  function matchCalc() {\n    return matchCall(tokens.calcValue, function() {\n      var openParenCount = 1; // Start with the opening parenthesis from calc(\n      var i = 0;\n      \n      // Parse through the content looking for balanced parentheses\n      while (openParenCount > 0 && i < input.length) {\n        var char = input.charAt(i);\n        if (char === '(') {\n          openParenCount++;\n        } else if (char === ')') {\n          openParenCount--;\n        }\n        i++;\n      }\n      \n      // If we exited because we ran out of input but still have open parentheses, error\n      if (openParenCount > 0) {\n        error('Missing closing parenthesis in calc() expression');\n      }\n      \n      // Get the content inside the calc() without the last closing paren\n      var calcContent = input.substring(0, i - 1);\n      \n      // Consume the calc expression content\n      consume(i - 1); // -1 because we don't want to consume the closing parenthesis\n      \n      return {\n        type: 'calc',\n        value: calcContent\n      };\n    });\n  }\n\n  function matchLength() {\n    return match('px', tokens.pixelValue, 1) ||\n      match('em', tokens.emValue, 1);\n  }\n\n  function match(type, pattern, captureIndex) {\n    var captures = scan(pattern);\n    if (captures) {\n      return {\n        type: type,\n        value: captures[captureIndex]\n      };\n    }\n  }\n\n  function scan(regexp) {\n    var captures,\n        blankCaptures;\n\n    blankCaptures = /^[\\n\\r\\t\\s]+/.exec(input);\n    if (blankCaptures) {\n        consume(blankCaptures[0].length);\n    }\n\n    captures = regexp.exec(input);\n    if (captures) {\n        consume(captures[0].length);\n    }\n\n    return captures;\n  }\n\n  function consume(size) {\n    input = input.substr(size);\n  }\n\n  return function(code) {\n    input = code.toString().trim();\n    // Remove trailing semicolon if present\n    if (input.endsWith(';')) {\n      input = input.slice(0, -1);\n    }\n    return getAST();\n  };\n})();\n\nexports.parse = GradientParser.parse;\nexports.stringify = GradientParser.stringify;\n", "import postcss from './postcss.js'\n\nexport default postcss\n\nexport const stringify = postcss.stringify\nexport const fromJSON = postcss.fromJSON\nexport const plugin = postcss.plugin\nexport const parse = postcss.parse\nexport const list = postcss.list\n\nexport const document = postcss.document\nexport const comment = postcss.comment\nexport const atRule = postcss.atRule\nexport const rule = postcss.rule\nexport const decl = postcss.decl\nexport const root = postcss.root\n\nexport const CssSyntaxError = postcss.CssSyntaxError\nexport const Declaration = postcss.Declaration\nexport const Container = postcss.Container\nexport const Processor = postcss.Processor\nexport const Document = postcss.Document\nexport const Comment = postcss.Comment\nexport const Warning = postcss.Warning\nexport const AtRule = postcss.AtRule\nexport const Result = postcss.Result\nexport const Input = postcss.Input\nexport const Rule = postcss.Rule\nexport const Root = postcss.Root\nexport const Node = postcss.Node\n", "import * as postcss from 'postcss'\nimport cssValueParser from 'postcss-value-parser'\n\nimport { isCSSFontFaceRule, unescapeStringValue } from './css.js'\nimport { svgNamespace, xlinkNamespace } from './dom.js'\nimport { createStackingLayers } from './stacking.js'\nimport { DomToSvgOptions, walkNode } from './traversal.js'\nimport { createIdGenerator } from './util.js'\n\nexport { DomToSvgOptions }\n\nexport function documentToSVG(document: Document, options?: DomToSvgOptions): XMLDocument {\n\treturn elementToSVG(document.documentElement, options)\n}\n\nexport function elementToSVG(element: Element, options?: DomToSvgOptions): XMLDocument {\n\tconst svgDocument = element.ownerDocument.implementation.createDocument(svgNamespace, 'svg', null)\n\n\tconst svgElement = (svgDocument.documentElement as unknown) as SVGSVGElement\n\tsvgElement.setAttribute('xmlns', svgNamespace)\n\tsvgElement.setAttribute('xmlns:xlink', xlinkNamespace)\n\tsvgElement.append(\n\t\tsvgDocument.createComment(\n\t\t\t// \"--\" is invalid in comments, percent-encode.\n\t\t\t` Generated by dom-to-svg from ${element.ownerDocument.location.href.replace(/--/g, '%2D%2D')} `\n\t\t)\n\t)\n\n\t// Copy @font-face rules\n\tconst styleElement = svgDocument.createElementNS(svgNamespace, 'style')\n\tfor (const styleSheet of element.ownerDocument.styleSheets) {\n\t\ttry {\n\t\t\t// Make font URLs absolute (need to be resolved relative to the stylesheet)\n\t\t\tfor (const rule of styleSheet.rules ?? []) {\n\t\t\t\tif (!isCSSFontFaceRule(rule)) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tconst styleSheetHref = rule.parentStyleSheet?.href\n\t\t\t\tif (styleSheetHref) {\n\t\t\t\t\t// Note: Firefox does not implement rule.style.src, need to use rule.style.getPropertyValue()\n\t\t\t\t\tconst parsedSourceValue = cssValueParser(rule.style.getPropertyValue('src'))\n\t\t\t\t\tparsedSourceValue.walk(node => {\n\t\t\t\t\t\tif (node.type === 'function' && node.value === 'url' && node.nodes[0]) {\n\t\t\t\t\t\t\tconst urlArgumentNode = node.nodes[0]\n\t\t\t\t\t\t\tif (urlArgumentNode.type === 'string' || urlArgumentNode.type === 'word') {\n\t\t\t\t\t\t\t\turlArgumentNode.value = new URL(\n\t\t\t\t\t\t\t\t\tunescapeStringValue(urlArgumentNode.value),\n\t\t\t\t\t\t\t\t\tstyleSheetHref\n\t\t\t\t\t\t\t\t).href\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t// Firefox does not support changing `src` on CSSFontFaceRule declarations, need to use PostCSS.\n\t\t\t\t\tconst updatedFontFaceRule = postcss.parse(rule.cssText)\n\t\t\t\t\tupdatedFontFaceRule.walkDecls('src', declaration => {\n\t\t\t\t\t\tdeclaration.value = cssValueParser.stringify(parsedSourceValue.nodes)\n\t\t\t\t\t})\n\t\t\t\t\tstyleElement.append(updatedFontFaceRule.toString() + '\\n')\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('Error resolving @font-face src URLs for styleSheet, skipping', styleSheet, error)\n\t\t}\n\t}\n\tsvgElement.append(styleElement)\n\n\twalkNode(element, {\n\t\tsvgDocument,\n\t\tcurrentSvgParent: svgElement,\n\t\tstackingLayers: createStackingLayers(svgElement),\n\t\tparentStackingLayer: svgElement,\n\t\tgetUniqueId: createIdGenerator(),\n\t\tlabels: new Map<HTMLLabelElement, string>(),\n\t\tancestorMasks: [],\n\t\toptions: {\n\t\t\tcaptureArea: options?.captureArea ?? element.getBoundingClientRect(),\n\t\t\tkeepLinks: options?.keepLinks !== false,\n\t\t},\n\t})\n\n\tconst bounds = options?.captureArea ?? element.getBoundingClientRect()\n\tsvgElement.setAttribute('width', bounds.width.toString())\n\tsvgElement.setAttribute('height', bounds.height.toString())\n\tsvgElement.setAttribute('viewBox', `${bounds.x} ${bounds.y} ${bounds.width} ${bounds.height}`)\n\n\treturn svgDocument\n}\n\nexport { inlineResources } from './inline.js'\n", "export const isCSSFontFaceRule = (rule: CSSRule): rule is CSSFontFaceRule => rule.type === CSSRule.FONT_FACE_RULE\n\nexport const isInline = (styles: CSSStyleDeclaration): boolean =>\n\tstyles.displayOutside === 'inline' || styles.display.startsWith('inline-')\n\nexport const isPositioned = (styles: CSSStyleDeclaration): boolean => styles.position !== 'static'\n\nexport const isInFlow = (styles: CSSStyleDeclaration): boolean =>\n\tstyles.float !== 'none' && styles.position !== 'absolute' && styles.position !== 'fixed'\n\nexport const isTransparent = (color: string): boolean => color === 'transparent' || color === 'rgba(0, 0, 0, 0)'\n\nexport const hasUniformBorder = (styles: CSSStyleDeclaration): boolean =>\n\tparseFloat(styles.borderTopWidth) !== 0 &&\n\tstyles.borderTopStyle !== 'none' &&\n\tstyles.borderTopStyle !== 'inset' &&\n\tstyles.borderTopStyle !== 'outset' &&\n\t!isTransparent(styles.borderTopColor) &&\n\t// Cannot use border property directly as in Firefox those are empty strings.\n\t// Need to get the specific border properties from the specific sides.\n\t// https://stackoverflow.com/questions/41696063/getcomputedstyle-returns-empty-strings-on-ff-when-instead-crome-returns-a-comp\n\tstyles.borderTopWidth === styles.borderLeftWidth &&\n\tstyles.borderTopWidth === styles.borderRightWidth &&\n\tstyles.borderTopWidth === styles.borderBottomWidth &&\n\tstyles.borderTopColor === styles.borderLeftColor &&\n\tstyles.borderTopColor === styles.borderRightColor &&\n\tstyles.borderTopColor === styles.borderBottomColor &&\n\tstyles.borderTopStyle === styles.borderLeftStyle &&\n\tstyles.borderTopStyle === styles.borderRightStyle &&\n\tstyles.borderTopStyle === styles.borderBottomStyle\n\n/** A side of a box. */\nexport type Side = 'top' | 'bottom' | 'right' | 'left'\n\n/** The 4 sides of a box. */\nconst SIDES: Side[] = ['top', 'bottom', 'right', 'left']\n\n/** Whether the given side is a horizontal side. */\nexport const isHorizontal = (side: Side): boolean => side === 'bottom' || side === 'top'\n\n/**\n * The two corners for each side, in order of lower coordinate to higher coordinate.\n */\nconst CORNERS: Record<Side, [Side, Side]> = {\n\ttop: ['left', 'right'],\n\tbottom: ['left', 'right'],\n\tleft: ['top', 'bottom'],\n\tright: ['top', 'bottom'],\n}\n\n/**\n * Returns the (elliptic) border radii for a given side.\n * For example, for the top side it will return the horizontal top-left and the horizontal top-right border radii.\n */\nexport function getBorderRadiiForSide(\n\tside: Side,\n\tstyles: CSSStyleDeclaration,\n\tbounds: DOMRectReadOnly\n): [number, number] {\n\tconst [horizontalStyle1, verticalStyle1] = styles\n\t\t.getPropertyValue(\n\t\t\tisHorizontal(side)\n\t\t\t\t? `border-${side}-${CORNERS[side][0]}-radius`\n\t\t\t\t: `border-${CORNERS[side][0]}-${side}-radius`\n\t\t)\n\t\t.split(' ')\n\n\tconst [horizontalStyle2, verticalStyle2] = styles\n\t\t.getPropertyValue(\n\t\t\tisHorizontal(side)\n\t\t\t\t? `border-${side}-${CORNERS[side][1]}-radius`\n\t\t\t\t: `border-${CORNERS[side][1]}-${side}-radius`\n\t\t)\n\t\t.split(' ')\n\n\tif (isHorizontal(side)) {\n\t\treturn [\n\t\t\tparseCSSLength(horizontalStyle1 || '0px', bounds.width) ?? 0,\n\t\t\tparseCSSLength(horizontalStyle2 || '0px', bounds.width) ?? 0,\n\t\t]\n\t}\n\treturn [\n\t\tparseCSSLength(verticalStyle1 || horizontalStyle1 || '0px', bounds.height) ?? 0,\n\t\tparseCSSLength(verticalStyle2 || horizontalStyle2 || '0px', bounds.height) ?? 0,\n\t]\n}\n\n/**\n * Returns the factor by which all border radii have to be scaled to fit correctly.\n *\n * @see https://drafts.csswg.org/css-backgrounds-3/#corner-overlap\n */\nexport const calculateOverlappingCurvesFactor = (styles: CSSStyleDeclaration, bounds: DOMRectReadOnly): number =>\n\tMath.min(\n\t\t...SIDES.map(side => {\n\t\t\tconst length = isHorizontal(side) ? bounds.width : bounds.height\n\t\t\tconst radiiSum = getBorderRadiiForSide(side, styles, bounds).reduce((sum, radius) => sum + radius, 0)\n\t\t\treturn length / radiiSum\n\t\t}),\n\t\t1\n\t)\n\nexport const isVisible = (styles: CSSStyleDeclaration): boolean =>\n\tstyles.displayOutside !== 'none' &&\n\tstyles.display !== 'none' &&\n\tstyles.visibility !== 'hidden' &&\n\tstyles.opacity !== '0'\n\nexport function parseCSSLength(length: string, containerLength: number): number | undefined {\n\tif (length.endsWith('px')) {\n\t\treturn parseFloat(length)\n\t}\n\tif (length.endsWith('%')) {\n\t\treturn (parseFloat(length) / 100) * containerLength\n\t}\n\treturn undefined\n}\n\nexport const unescapeStringValue = (value: string): string =>\n\tvalue\n\t\t// Replace hex escape sequences\n\t\t.replace(/\\\\([\\da-f]{1,2})/gi, (substring, codePoint) => String.fromCodePoint(parseInt(codePoint, 16)))\n\t\t// Replace all other escapes (quotes, backslash, etc)\n\t\t.replace(/\\\\(.)/g, '$1')\n\nexport function copyCssStyles(from: CSSStyleDeclaration, to: CSSStyleDeclaration): void {\n\tfor (const property of from) {\n\t\tto.setProperty(property, from.getPropertyValue(property), from.getPropertyPriority(property))\n\t}\n}\n", "// Namespaces\nexport const svgNamespace = 'http://www.w3.org/2000/svg'\nexport const xlinkNamespace = 'http://www.w3.org/1999/xlink'\nexport const xhtmlNamespace = 'http://www.w3.org/1999/xhtml'\n\n// DOM\nexport const isElement = (node: Node): node is Element => node.nodeType === Node.ELEMENT_NODE\nexport const isTextNode = (node: Node): node is Text => node.nodeType === Node.TEXT_NODE\nexport const isCommentNode = (node: Node): node is Comment => node.nodeType === Node.COMMENT_NODE\n\n// SVG\nexport const isSVGElement = (element: Element): element is SVGElement => element.namespaceURI === svgNamespace\nexport const isSVGSVGElement = (element: Element): element is SVGSVGElement =>\n\tisSVGElement(element) && element.tagName === 'svg'\nexport const isSVGGraphicsElement = (element: Element): element is SVGGraphicsElement =>\n\tisSVGElement(element) && 'getCTM' in element && 'getScreenCTM' in element\nexport const isSVGGroupElement = (element: Element): element is SVGGElement =>\n\tisSVGElement(element) && element.tagName === 'g'\nexport const isSVGAnchorElement = (element: Element): element is SVGAElement =>\n\tisSVGElement(element) && element.tagName === 'a'\nexport const isSVGTextContentElement = (element: Element): element is SVGTextContentElement =>\n\tisSVGElement(element) && 'textLength' in element\nexport const isSVGImageElement = (element: Element): element is SVGImageElement =>\n\telement.tagName === 'image' && isSVGElement(element)\nexport const isSVGStyleElement = (element: Element): element is SVGStyleElement =>\n\telement.tagName === 'style' && isSVGElement(element)\n\n// HTML\nexport const isHTMLElement = (element: Element): element is HTMLElement => element.namespaceURI === xhtmlNamespace\nexport const isHTMLAnchorElement = (element: Element): element is HTMLAnchorElement =>\n\telement.tagName === 'A' && isHTMLElement(element)\nexport const isHTMLLabelElement = (element: Element): element is HTMLLabelElement =>\n\telement.tagName === 'LABEL' && isHTMLElement(element)\nexport const isHTMLImageElement = (element: Element): element is HTMLImageElement =>\n\telement.tagName === 'IMG' && isHTMLElement(element)\nexport const isHTMLInputElement = (element: Element): element is HTMLInputElement =>\n\telement.tagName === 'INPUT' && isHTMLElement(element)\nexport const hasLabels = (element: HTMLElement): element is HTMLElement & Pick<HTMLInputElement, 'labels'> =>\n\t'labels' in element\n\nexport function* traverseDOM(node: Node, shouldEnter: (node: Node) => boolean = () => true): Iterable<Node> {\n\tyield node\n\tif (shouldEnter(node)) {\n\t\tfor (const childNode of node.childNodes) {\n\t\t\tyield* traverseDOM(childNode)\n\t\t}\n\t}\n}\n", "import { isInFlow, isInline, isPositioned } from './css.js'\nimport { svgNamespace } from './dom.js'\n\ndeclare global {\n\tinterface CSSStyleDeclaration {\n\t\t// @font-face\n\t\tsrc: string\n\n\t\tmixBlendMode: string\n\t\tmaskBorder: string\n\t\tisolation: string\n\t\twebkitOverflowScrolling: string\n\t\tcontain: string\n\t\tdisplayOutside: string\n\t\tdisplayInside: string\n\t}\n}\n\nconst stackingContextEstablishingProperties = new Set<string>([\n\t'clipPath',\n\t'contain',\n\t'filter',\n\t'isolation',\n\t'mask',\n\t'maskBorder',\n\t'maskImage',\n\t'mixBlendMode',\n\t'opacity',\n\t'perspective',\n\t'position',\n\t'transform',\n\t'webkitOverflowScrolling',\n\t'zIndex',\n])\n\nexport function establishesStackingContext(\n\tstyles: CSSStyleDeclaration,\n\tparentStyles: CSSStyleDeclaration | null\n): boolean {\n\t// https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n\treturn !!(\n\t\t((styles.position === 'absolute' || styles.position === 'relative') && styles.zIndex !== 'auto') ||\n\t\tstyles.position === 'fixed' ||\n\t\tstyles.position === 'sticky' ||\n\t\t(parentStyles &&\n\t\t\t(parentStyles.display === 'flex' || parentStyles.display === 'grid') &&\n\t\t\tstyles.zIndex !== 'auto') ||\n\t\tparseFloat(styles.opacity) !== 1 ||\n\t\tstyles.mixBlendMode !== 'normal' ||\n\t\tstyles.transform !== 'none' ||\n\t\tstyles.filter !== 'none' ||\n\t\tstyles.perspective !== 'none' ||\n\t\tstyles.clipPath !== 'none' ||\n\t\tstyles.mask !== 'none' ||\n\t\tstyles.maskImage !== 'none' ||\n\t\tstyles.maskBorder !== 'none' ||\n\t\tstyles.isolation === 'isolate' ||\n\t\tstyles.webkitOverflowScrolling === 'touch' ||\n\t\tstyles.contain === 'layout' ||\n\t\tstyles.contain === 'paint' ||\n\t\tstyles.contain === 'strict' ||\n\t\tstyles.contain === 'content' ||\n\t\tstyles.willChange.split(',').some(property => stackingContextEstablishingProperties.has(property.trim()))\n\t)\n}\n\nexport interface StackingLayers {\n\t/** 1. The background and borders of the element forming the stacking context. */\n\treadonly rootBackgroundAndBorders: SVGGElement\n\n\t/** 2. The child stacking contexts with negative stack levels (most negative first). */\n\treadonly childStackingContextsWithNegativeStackLevels: SVGGElement\n\n\t/** 3. The in-flow, non-inline-level, non-positioned descendants. */\n\treadonly inFlowNonInlineNonPositionedDescendants: SVGGElement\n\n\t/** 4. The non-positioned floats. */\n\treadonly nonPositionedFloats: SVGGElement\n\n\t/** 5. The in-flow, inline-level, non-positioned descendants, including inline tables and inline blocks. */\n\treadonly inFlowInlineLevelNonPositionedDescendants: SVGGElement\n\n\t/** 6. The child stacking contexts with stack level 0 and the positioned descendants with stack level 0. */\n\treadonly childStackingContextsWithStackLevelZeroAndPositionedDescendantsWithStackLevelZero: SVGGElement\n\n\t/** 7. The child stacking contexts with positive stack levels (least positive first). */\n\treadonly childStackingContextsWithPositiveStackLevels: SVGGElement\n}\n\nconst STACKING_LAYER_NAMES: readonly (keyof StackingLayers)[] = [\n\t'rootBackgroundAndBorders',\n\t'childStackingContextsWithNegativeStackLevels',\n\t'inFlowNonInlineNonPositionedDescendants',\n\t'nonPositionedFloats',\n\t'inFlowInlineLevelNonPositionedDescendants',\n\t'childStackingContextsWithStackLevelZeroAndPositionedDescendantsWithStackLevelZero',\n\t'childStackingContextsWithPositiveStackLevels',\n]\n\nfunction createStackingLayer(parent: SVGElement, layerName: keyof StackingLayers): SVGGElement {\n\tconst layer = parent.ownerDocument.createElementNS(svgNamespace, 'g')\n\tlayer.dataset.stackingLayer = layerName\n\tparent.append(layer)\n\treturn layer\n}\n\nexport function createStackingLayers(container: SVGElement): StackingLayers {\n\tcontainer.dataset.stackingContext = 'true'\n\treturn {\n\t\trootBackgroundAndBorders: createStackingLayer(container, 'rootBackgroundAndBorders'),\n\t\tchildStackingContextsWithNegativeStackLevels: createStackingLayer(\n\t\t\tcontainer,\n\t\t\t'childStackingContextsWithNegativeStackLevels'\n\t\t),\n\t\tinFlowNonInlineNonPositionedDescendants: createStackingLayer(\n\t\t\tcontainer,\n\t\t\t'inFlowNonInlineNonPositionedDescendants'\n\t\t),\n\t\tnonPositionedFloats: createStackingLayer(container, 'nonPositionedFloats'),\n\t\tinFlowInlineLevelNonPositionedDescendants: createStackingLayer(\n\t\t\tcontainer,\n\t\t\t'inFlowInlineLevelNonPositionedDescendants'\n\t\t),\n\t\tchildStackingContextsWithStackLevelZeroAndPositionedDescendantsWithStackLevelZero: createStackingLayer(\n\t\t\tcontainer,\n\t\t\t'childStackingContextsWithStackLevelZeroAndPositionedDescendantsWithStackLevelZero'\n\t\t),\n\t\tchildStackingContextsWithPositiveStackLevels: createStackingLayer(\n\t\t\tcontainer,\n\t\t\t'childStackingContextsWithPositiveStackLevels'\n\t\t),\n\t}\n}\n\nexport function determineStackingLayer(\n\tstyles: CSSStyleDeclaration,\n\tparentStyles: CSSStyleDeclaration | null\n): keyof StackingLayers | undefined {\n\t// https://www.w3.org/TR/CSS22/visuren.html#layers\n\t// https://www.w3.org/TR/CSS22/zindex.html\n\n\t// Note: the root element is not handled here, but in handleElement().\n\tconst zIndex = styles.zIndex !== 'auto' ? parseInt(styles.zIndex, 10) : undefined\n\tif (zIndex !== undefined && zIndex < 0 && establishesStackingContext(styles, parentStyles)) {\n\t\treturn 'childStackingContextsWithNegativeStackLevels'\n\t}\n\tif (isInFlow(styles) && !isInline(styles) && !isPositioned(styles)) {\n\t\treturn 'inFlowNonInlineNonPositionedDescendants'\n\t}\n\tif (!isPositioned(styles) && styles.float !== 'none') {\n\t\treturn 'nonPositionedFloats'\n\t}\n\tif (isInFlow(styles) && isInline(styles) && !isPositioned(styles)) {\n\t\treturn 'inFlowInlineLevelNonPositionedDescendants'\n\t}\n\tif (zIndex === 0 && (isPositioned(styles) || establishesStackingContext(styles, parentStyles))) {\n\t\treturn 'childStackingContextsWithStackLevelZeroAndPositionedDescendantsWithStackLevelZero'\n\t}\n\tif (zIndex !== undefined && zIndex > 0 && establishesStackingContext(styles, parentStyles)) {\n\t\treturn 'childStackingContextsWithPositiveStackLevels'\n\t}\n\treturn undefined\n}\n\nexport function sortChildrenByZIndex(parent: SVGElement): void {\n\tconst sorted = [...parent.children].sort((a, b) => {\n\t\tconst zIndexA = (a as SVGElement).dataset.zIndex\n\t\tconst zIndexB = (b as SVGElement).dataset.zIndex\n\t\tif (!zIndexA || !zIndexB) {\n\t\t\t// E.g. a <clipPath>\n\t\t\treturn 0\n\t\t}\n\t\treturn parseInt(zIndexA, 10) - parseInt(zIndexB, 10)\n\t})\n\tfor (const child of sorted) {\n\t\tparent.append(child)\n\t}\n}\n\nexport function sortStackingLayerChildren(stackingLayers: StackingLayers): void {\n\tsortChildrenByZIndex(stackingLayers.childStackingContextsWithNegativeStackLevels)\n\tsortChildrenByZIndex(stackingLayers.childStackingContextsWithPositiveStackLevels)\n}\n\n/**\n * Removes all stacking layers that are empty.\n */\nexport function cleanupStackingLayerChildren(stackingLayers: StackingLayers): void {\n\tfor (const name of STACKING_LAYER_NAMES) {\n\t\tconst layer = stackingLayers[name]\n\t\tif (!layer.hasChildNodes()) {\n\t\t\tlayer.remove()\n\t\t}\n\t}\n}\n", "import cssValueParser from 'postcss-value-parser'\n\nimport { getAccessibilityAttributes } from './accessibility.js'\nimport {\n\tcopyCssStyles,\n\tisVisible,\n\tisTransparent,\n\thasUniformBorder,\n\tparseCSSLength,\n\tunescapeStringValue,\n\tSide,\n\tgetBorderRadiiForSide,\n\tcalculateOverlappingCurvesFactor,\n} from './css.js'\nimport {\n\tsvgNamespace,\n\tisHTMLAnchorElement,\n\tisHTMLImageElement,\n\tisHTMLInputElement,\n\tisHTMLElement,\n\tisSVGSVGElement,\n} from './dom.js'\nimport { convertLinearGradient } from './gradients.js'\nimport {\n\tcreateStackingLayers,\n\testablishesStackingContext,\n\tdetermineStackingLayer,\n\tStackingLayers,\n\tsortStackingLayerChildren,\n\tcleanupStackingLayerChildren,\n} from './stacking.js'\nimport { handleSvgNode } from './svg.js'\nimport { copyTextStyles } from './text.js'\nimport { TraversalContext, walkNode } from './traversal.js'\nimport { doRectanglesIntersect, isTaggedUnionMember } from './util.js'\n\nexport function handleElement(element: Element, context: Readonly<TraversalContext>): void {\n\tconst cleanupFunctions: (() => void)[] = []\n\n\ttry {\n\t\tconst window = element.ownerDocument.defaultView\n\t\tif (!window) {\n\t\t\tthrow new Error(\"Element's ownerDocument has no defaultView\")\n\t\t}\n\n\t\tconst bounds = element.getBoundingClientRect() // Includes borders\n\t\tconst rectanglesIntersect = doRectanglesIntersect(bounds, context.options.captureArea)\n\n\t\tconst styles = window.getComputedStyle(element)\n\t\tconst parentStyles = element.parentElement && window.getComputedStyle(element.parentElement)\n\n\t\tconst svgContainer =\n\t\t\tisHTMLAnchorElement(element) && context.options.keepLinks\n\t\t\t\t? createSvgAnchor(element, context)\n\t\t\t\t: context.svgDocument.createElementNS(svgNamespace, 'g')\n\n\t\t// Add IDs, classes, debug info\n\t\tsvgContainer.dataset.tag = element.tagName.toLowerCase()\n\t\tconst id = element.id || context.getUniqueId(element.classList[0] || element.tagName.toLowerCase())\n\t\tsvgContainer.id = id\n\t\tconst className = element.getAttribute('class')\n\t\tif (className) {\n\t\t\tsvgContainer.setAttribute('class', className)\n\t\t}\n\n\t\t// Title\n\t\tif (isHTMLElement(element) && element.title) {\n\t\t\tconst svgTitle = context.svgDocument.createElementNS(svgNamespace, 'title')\n\t\t\tsvgTitle.textContent = element.title\n\t\t\tsvgContainer.prepend(svgTitle)\n\t\t}\n\n\t\t// Which parent should the container itself be appended to?\n\t\tconst stackingLayerName = determineStackingLayer(styles, parentStyles)\n\t\tconst stackingLayer = stackingLayerName\n\t\t\t? context.stackingLayers[stackingLayerName]\n\t\t\t: context.parentStackingLayer\n\t\tif (stackingLayer) {\n\t\t\tcontext.currentSvgParent.setAttribute(\n\t\t\t\t'aria-owns',\n\t\t\t\t[context.currentSvgParent.getAttribute('aria-owns'), svgContainer.id].filter(Boolean).join(' ')\n\t\t\t)\n\t\t}\n\t\t// If the parent is within the same stacking layer, append to the parent.\n\t\t// Otherwise append to the right stacking layer.\n\t\tconst elementToAppendTo =\n\t\t\tcontext.parentStackingLayer === stackingLayer ? context.currentSvgParent : stackingLayer\n\t\tsvgContainer.dataset.zIndex = styles.zIndex // Used for sorting\n\t\telementToAppendTo.append(svgContainer)\n\n\t\t// If the element establishes a stacking context, create subgroups for each stacking layer.\n\t\tlet childContext: TraversalContext\n\t\tlet backgroundContainer: SVGElement\n\t\tlet ownStackingLayers: StackingLayers | undefined\n\t\tif (establishesStackingContext(styles, parentStyles)) {\n\t\t\townStackingLayers = createStackingLayers(svgContainer)\n\t\t\tbackgroundContainer = ownStackingLayers.rootBackgroundAndBorders\n\t\t\tchildContext = {\n\t\t\t\t...context,\n\t\t\t\tcurrentSvgParent: svgContainer,\n\t\t\t\tstackingLayers: ownStackingLayers,\n\t\t\t\tparentStackingLayer: stackingLayer,\n\t\t\t}\n\t\t} else {\n\t\t\tbackgroundContainer = svgContainer\n\t\t\tchildContext = {\n\t\t\t\t...context,\n\t\t\t\tcurrentSvgParent: svgContainer,\n\t\t\t\tparentStackingLayer: stackingLayer,\n\t\t\t}\n\t\t}\n\n\t\t// Opacity\n\t\tif (styles.opacity !== '1') {\n\t\t\tsvgContainer.setAttribute('opacity', styles.opacity)\n\t\t}\n\n\t\t// Accessibility\n\t\tfor (const [name, value] of getAccessibilityAttributes(element, context)) {\n\t\t\tsvgContainer.setAttribute(name, value)\n\t\t}\n\n\t\t// Handle ::before and ::after by creating temporary child elements in the DOM.\n\t\t// Avoid infinite loop, in case `element` already is already a synthetic element created by us for a pseudo element.\n\t\tif (isHTMLElement(element) && !element.dataset.pseudoElement) {\n\t\t\tconst handlePseudoElement = (\n\t\t\t\tpseudoSelector: '::before' | '::after',\n\t\t\t\tposition: 'prepend' | 'append'\n\t\t\t): void => {\n\t\t\t\tconst pseudoElementStyles = window.getComputedStyle(element, pseudoSelector)\n\t\t\t\tconst content = cssValueParser(pseudoElementStyles.content).nodes.find(\n\t\t\t\t\tisTaggedUnionMember('type', 'string' as const)\n\t\t\t\t)\n\t\t\t\tif (!content) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t// Pseudo elements are inline by default (like a span)\n\t\t\t\tconst span = element.ownerDocument.createElement('span')\n\t\t\t\tspan.dataset.pseudoElement = pseudoSelector\n\t\t\t\tcopyCssStyles(pseudoElementStyles, span.style)\n\t\t\t\tspan.textContent = unescapeStringValue(content.value)\n\t\t\t\telement.dataset.pseudoElementOwner = id\n\t\t\t\tcleanupFunctions.push(() => element.removeAttribute('data-pseudo-element-owner'))\n\t\t\t\tconst style = element.ownerDocument.createElement('style')\n\t\t\t\t// Hide the *actual* pseudo element temporarily while we have a real DOM equivalent in the DOM\n\t\t\t\tstyle.textContent = `[data-pseudo-element-owner=\"${id}\"]${pseudoSelector} { display: none !important; }`\n\t\t\t\telement.before(style)\n\t\t\t\tcleanupFunctions.push(() => style.remove())\n\t\t\t\telement[position](span)\n\t\t\t\tcleanupFunctions.push(() => span.remove())\n\t\t\t}\n\t\t\thandlePseudoElement('::before', 'prepend')\n\t\t\thandlePseudoElement('::after', 'append')\n\t\t\t// TODO handle ::marker etc\n\t\t}\n\n\t\tif (rectanglesIntersect) {\n\t\t\taddBackgroundAndBorders(styles, bounds, backgroundContainer, window, context)\n\t\t}\n\n\t\t// If element is overflow: hidden, create a masking rectangle to hide any overflowing content of any descendants.\n\t\t// Use <mask> instead of <clipPath> as Figma supports <mask>, but not <clipPath>.\n\t\tif (styles.overflow !== 'visible') {\n\t\t\tconst mask = context.svgDocument.createElementNS(svgNamespace, 'mask')\n\t\t\tmask.id = context.getUniqueId('mask-for-' + id)\n\t\t\tconst visibleRectangle = createBox(bounds, context)\n\t\t\tvisibleRectangle.setAttribute('fill', '#ffffff')\n\t\t\tmask.append(visibleRectangle)\n\t\t\tsvgContainer.append(mask)\n\t\t\tsvgContainer.setAttribute('mask', `url(#${mask.id})`)\n\t\t\tchildContext = {\n\t\t\t\t...childContext,\n\t\t\t\tancestorMasks: [{ mask, forElement: element }, ...childContext.ancestorMasks],\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tisHTMLElement(element) &&\n\t\t\t(styles.position === 'absolute' || styles.position === 'fixed') &&\n\t\t\tcontext.ancestorMasks.length > 0 &&\n\t\t\telement.offsetParent\n\t\t) {\n\t\t\t// Absolute and fixed elements are out of the flow and will bleed out of an `overflow: hidden` ancestor\n\t\t\t// as long as their offsetParent is higher up than the mask element.\n\t\t\tfor (const { mask, forElement } of context.ancestorMasks) {\n\t\t\t\tif (element.offsetParent.contains(forElement) || element.offsetParent === forElement) {\n\t\t\t\t\t// Add a cutout to the ancestor mask\n\t\t\t\t\tconst visibleRectangle = createBox(bounds, context)\n\t\t\t\t\tvisibleRectangle.setAttribute('fill', '#ffffff')\n\t\t\t\t\tmask.append(visibleRectangle)\n\t\t\t\t} else {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\trectanglesIntersect &&\n\t\t\tisHTMLImageElement(element) &&\n\t\t\t// Make sure the element has a src/srcset attribute (the relative URL). `element.src` is absolute and always defined.\n\t\t\t(element.getAttribute('src') || element.getAttribute('srcset'))\n\t\t) {\n\t\t\tconst svgImage = context.svgDocument.createElementNS(svgNamespace, 'image')\n\t\t\tsvgImage.id = `${id}-image` // read by inlineResources()\n\t\t\tsvgImage.setAttribute('xlink:href', element.currentSrc || element.src)\n\t\t\tconst paddingLeft = parseCSSLength(styles.paddingLeft, bounds.width) ?? 0\n\t\t\tconst paddingRight = parseCSSLength(styles.paddingRight, bounds.width) ?? 0\n\t\t\tconst paddingTop = parseCSSLength(styles.paddingTop, bounds.height) ?? 0\n\t\t\tconst paddingBottom = parseCSSLength(styles.paddingBottom, bounds.height) ?? 0\n\t\t\tsvgImage.setAttribute('x', (bounds.x + paddingLeft).toString())\n\t\t\tsvgImage.setAttribute('y', (bounds.y + paddingTop).toString())\n\t\t\tsvgImage.setAttribute('width', (bounds.width - paddingLeft - paddingRight).toString())\n\t\t\tsvgImage.setAttribute('height', (bounds.height - paddingTop - paddingBottom).toString())\n\t\t\tif (element.alt) {\n\t\t\t\tsvgImage.setAttribute('aria-label', element.alt)\n\t\t\t}\n\t\t\tsvgContainer.append(svgImage)\n\t\t} else if (rectanglesIntersect && isHTMLInputElement(element) && bounds.width > 0 && bounds.height > 0) {\n\t\t\t// Handle button labels or input field content\n\t\t\tif (element.value) {\n\t\t\t\tconst svgTextElement = context.svgDocument.createElementNS(svgNamespace, 'text')\n\t\t\t\tcopyTextStyles(styles, svgTextElement)\n\t\t\t\tsvgTextElement.setAttribute('dominant-baseline', 'central')\n\t\t\t\tsvgTextElement.setAttribute('xml:space', 'preserve')\n\t\t\t\tsvgTextElement.setAttribute(\n\t\t\t\t\t'x',\n\t\t\t\t\t(bounds.x + (parseCSSLength(styles.paddingLeft, bounds.width) ?? 0)).toString()\n\t\t\t\t)\n\t\t\t\tconst top = bounds.top + (parseCSSLength(styles.paddingTop, bounds.height) ?? 0)\n\t\t\t\tconst bottom = bounds.bottom + (parseCSSLength(styles.paddingBottom, bounds.height) ?? 0)\n\t\t\t\tconst middle = (top + bottom) / 2\n\t\t\t\tsvgTextElement.setAttribute('y', middle.toString())\n\t\t\t\tsvgTextElement.textContent = element.value\n\t\t\t\tchildContext.stackingLayers.inFlowInlineLevelNonPositionedDescendants.append(svgTextElement)\n\t\t\t}\n\t\t} else if (rectanglesIntersect && isSVGSVGElement(element) && isVisible(styles)) {\n\t\t\thandleSvgNode(element, { ...childContext, idPrefix: `${id}-` })\n\t\t} else {\n\t\t\t// Walk children even if rectangles don't intersect,\n\t\t\t// because children can overflow the parent's bounds as long as overflow: visible (default).\n\t\t\tfor (const child of element.childNodes) {\n\t\t\t\twalkNode(child, childContext)\n\t\t\t}\n\t\t\tif (ownStackingLayers) {\n\t\t\t\tsortStackingLayerChildren(ownStackingLayers)\n\t\t\t\tcleanupStackingLayerChildren(ownStackingLayers)\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tfor (const cleanup of cleanupFunctions) {\n\t\t\tcleanup()\n\t\t}\n\t}\n}\n\nfunction addBackgroundAndBorders(\n\tstyles: CSSStyleDeclaration,\n\tbounds: DOMRect,\n\tbackgroundAndBordersContainer: SVGElement,\n\twindow: Window,\n\tcontext: Pick<TraversalContext, 'getUniqueId' | 'svgDocument'>\n): void {\n\tif (isVisible(styles)) {\n\t\tif (\n\t\t\tbounds.width > 0 &&\n\t\t\tbounds.height > 0 &&\n\t\t\t(!isTransparent(styles.backgroundColor) || hasUniformBorder(styles) || styles.backgroundImage !== 'none')\n\t\t) {\n\t\t\tconst box = createBackgroundAndBorderBox(bounds, styles, context)\n\t\t\tbackgroundAndBordersContainer.append(box)\n\t\t\tif (styles.backgroundImage !== 'none') {\n\t\t\t\tconst backgrounds = cssValueParser(styles.backgroundImage)\n\t\t\t\t\t.nodes.filter(isTaggedUnionMember('type', 'function' as const))\n\t\t\t\t\t.reverse()\n\t\t\t\tconst xBackgroundPositions = styles.backgroundPositionX.split(/\\s*,\\s*/g)\n\t\t\t\tconst yBackgroundPositions = styles.backgroundPositionY.split(/\\s*,\\s*/g)\n\t\t\t\tconst backgroundRepeats = styles.backgroundRepeat.split(/\\s*,\\s*/g)\n\t\t\t\tfor (const [index, backgroundNode] of backgrounds.entries()) {\n\t\t\t\t\tconst backgroundPositionX = parseCSSLength(xBackgroundPositions[index]!, bounds.width) ?? 0\n\t\t\t\t\tconst backgroundPositionY = parseCSSLength(yBackgroundPositions[index]!, bounds.height) ?? 0\n\t\t\t\t\tconst backgroundRepeat = backgroundRepeats[index]\n\t\t\t\t\tif (backgroundNode.value === 'url' && backgroundNode.nodes[0]) {\n\t\t\t\t\t\tconst urlArgument = backgroundNode.nodes[0]\n\t\t\t\t\t\tconst image = context.svgDocument.createElementNS(svgNamespace, 'image')\n\t\t\t\t\t\timage.id = context.getUniqueId('background-image') // read by inlineResources()\n\t\t\t\t\t\tconst [cssWidth = 'auto', cssHeight = 'auto'] = styles.backgroundSize.split(' ')\n\t\t\t\t\t\tconst backgroundWidth = parseCSSLength(cssWidth, bounds.width) ?? bounds.width\n\t\t\t\t\t\tconst backgroundHeight = parseCSSLength(cssHeight, bounds.height) ?? bounds.height\n\t\t\t\t\t\timage.setAttribute('width', backgroundWidth.toString())\n\t\t\t\t\t\timage.setAttribute('height', backgroundHeight.toString())\n\t\t\t\t\t\tif (cssWidth !== 'auto' && cssHeight !== 'auto') {\n\t\t\t\t\t\t\timage.setAttribute('preserveAspectRatio', 'none')\n\t\t\t\t\t\t} else if (styles.backgroundSize === 'contain') {\n\t\t\t\t\t\t\timage.setAttribute('preserveAspectRatio', 'xMidYMid meet')\n\t\t\t\t\t\t} else if (styles.backgroundSize === 'cover') {\n\t\t\t\t\t\t\timage.setAttribute('preserveAspectRatio', 'xMidYMid slice')\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Technically not correct, because relative URLs should be resolved relative to the stylesheet,\n\t\t\t\t\t\t// not the page. But we have no means to know what stylesheet the style came from\n\t\t\t\t\t\t// (unless we iterate through all rules in all style sheets and find the matching one).\n\t\t\t\t\t\tconst url = new URL(unescapeStringValue(urlArgument.value), window.location.href)\n\t\t\t\t\t\timage.setAttribute('xlink:href', url.href)\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tbackgroundRepeat === 'no-repeat' ||\n\t\t\t\t\t\t\t(backgroundPositionX === 0 &&\n\t\t\t\t\t\t\t\tbackgroundPositionY === 0 &&\n\t\t\t\t\t\t\t\tbackgroundWidth === bounds.width &&\n\t\t\t\t\t\t\t\tbackgroundHeight === bounds.height)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\timage.setAttribute('x', bounds.x.toString())\n\t\t\t\t\t\t\timage.setAttribute('y', bounds.y.toString())\n\t\t\t\t\t\t\tbackgroundAndBordersContainer.append(image)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\timage.setAttribute('x', '0')\n\t\t\t\t\t\t\timage.setAttribute('y', '0')\n\t\t\t\t\t\t\tconst pattern = context.svgDocument.createElementNS(svgNamespace, 'pattern')\n\t\t\t\t\t\t\tpattern.setAttribute('patternUnits', 'userSpaceOnUse')\n\t\t\t\t\t\t\tpattern.setAttribute('patternContentUnits', 'userSpaceOnUse')\n\t\t\t\t\t\t\tpattern.setAttribute('x', (bounds.x + backgroundPositionX).toString())\n\t\t\t\t\t\t\tpattern.setAttribute('y', (bounds.y + backgroundPositionY).toString())\n\t\t\t\t\t\t\tpattern.setAttribute(\n\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t(backgroundRepeat === 'repeat' || backgroundRepeat === 'repeat-x'\n\t\t\t\t\t\t\t\t\t? backgroundWidth\n\t\t\t\t\t\t\t\t\t: // If background shouldn't repeat on this axis, make the tile as big as the element so the repetition is cut off.\n\t\t\t\t\t\t\t\t\t  backgroundWidth + bounds.x + backgroundPositionX\n\t\t\t\t\t\t\t\t).toString()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tpattern.setAttribute(\n\t\t\t\t\t\t\t\t'height',\n\t\t\t\t\t\t\t\t(backgroundRepeat === 'repeat' || backgroundRepeat === 'repeat-y'\n\t\t\t\t\t\t\t\t\t? backgroundHeight\n\t\t\t\t\t\t\t\t\t: // If background shouldn't repeat on this axis, make the tile as big as the element so the repetition is cut off.\n\t\t\t\t\t\t\t\t\t  backgroundHeight + bounds.y + backgroundPositionY\n\t\t\t\t\t\t\t\t).toString()\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tpattern.id = context.getUniqueId('pattern')\n\t\t\t\t\t\t\tpattern.append(image)\n\t\t\t\t\t\t\tbox.before(pattern)\n\t\t\t\t\t\t\tbox.setAttribute('fill', `url(#${pattern.id})`)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (/^(-webkit-)?linear-gradient$/.test(backgroundNode.value)) {\n\t\t\t\t\t\tconst linearGradientCss = cssValueParser.stringify(backgroundNode)\n\t\t\t\t\t\tconst svgLinearGradient = convertLinearGradient(linearGradientCss, context)\n\t\t\t\t\t\tif (backgroundPositionX !== 0 || backgroundPositionY !== 0) {\n\t\t\t\t\t\t\tsvgLinearGradient.setAttribute(\n\t\t\t\t\t\t\t\t'gradientTransform',\n\t\t\t\t\t\t\t\t`translate(${backgroundPositionX}, ${backgroundPositionY})`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsvgLinearGradient.id = context.getUniqueId('linear-gradient')\n\t\t\t\t\t\tbox.before(svgLinearGradient)\n\t\t\t\t\t\tbox.setAttribute('fill', `url(#${svgLinearGradient.id})`)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!hasUniformBorder(styles)) {\n\t\t\t// Draw lines for each border\n\t\t\tfor (const borderLine of createBorders(styles, bounds, context)) {\n\t\t\t\tbackgroundAndBordersContainer.append(borderLine)\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction createBox(bounds: DOMRectReadOnly, context: Pick<TraversalContext, 'svgDocument'>): SVGRectElement {\n\tconst box = context.svgDocument.createElementNS(svgNamespace, 'rect')\n\n\t// TODO consider rotation\n\tbox.setAttribute('width', bounds.width.toString())\n\tbox.setAttribute('height', bounds.height.toString())\n\tbox.setAttribute('x', bounds.x.toString())\n\tbox.setAttribute('y', bounds.y.toString())\n\n\treturn box\n}\n\nfunction createBackgroundAndBorderBox(\n\tbounds: DOMRectReadOnly,\n\tstyles: CSSStyleDeclaration,\n\tcontext: Pick<TraversalContext, 'svgDocument'>\n): SVGRectElement {\n\tconst background = createBox(bounds, context)\n\n\t// TODO handle background image and other properties\n\tif (styles.backgroundColor) {\n\t\tbackground.setAttribute('fill', styles.backgroundColor)\n\t}\n\n\tif (hasUniformBorder(styles)) {\n\t\t// Uniform border, use stroke\n\t\t// Cannot use borderColor/borderWidth directly as in Firefox those are empty strings.\n\t\t// Need to get the border property from some specific side (they are all the same in this condition).\n\t\t// https://stackoverflow.com/questions/41696063/getcomputedstyle-returns-empty-strings-on-ff-when-instead-crome-returns-a-comp\n\t\tbackground.setAttribute('stroke', styles.borderTopColor)\n\t\tbackground.setAttribute('stroke-width', styles.borderTopWidth)\n\t\tif (styles.borderTopStyle === 'dashed') {\n\t\t\t// > Displays a series of short square-ended dashes or line segments.\n\t\t\t// > The exact size and length of the segments are not defined by the specification and are implementation-specific.\n\t\t\tbackground.setAttribute('stroke-dasharray', '1')\n\t\t}\n\t}\n\n\t// Set border radius\n\t// Approximation, always assumes uniform border-radius by using the top-left horizontal radius and the top-left vertical radius for all corners.\n\t// TODO support irregular border radii on all corners by drawing border as a <path>.\n\tconst overlappingCurvesFactor = calculateOverlappingCurvesFactor(styles, bounds)\n\tconst radiusX = getBorderRadiiForSide('top', styles, bounds)[0] * overlappingCurvesFactor\n\tconst radiusY = getBorderRadiiForSide('left', styles, bounds)[0] * overlappingCurvesFactor\n\tif (radiusX !== 0) {\n\t\tbackground.setAttribute('rx', radiusX.toString())\n\t}\n\tif (radiusY !== 0) {\n\t\tbackground.setAttribute('ry', radiusY.toString())\n\t}\n\n\treturn background\n}\n\nfunction* createBorders(\n\tstyles: CSSStyleDeclaration,\n\tbounds: DOMRectReadOnly,\n\tcontext: Pick<TraversalContext, 'svgDocument'>\n): Iterable<SVGLineElement> {\n\tfor (const side of ['top', 'bottom', 'right', 'left'] as const) {\n\t\tif (hasBorder(styles, side)) {\n\t\t\tyield createBorder(styles, bounds, side, context)\n\t\t}\n\t}\n}\n\nfunction hasBorder(styles: CSSStyleDeclaration, side: Side): boolean {\n\treturn (\n\t\t!!styles.getPropertyValue(`border-${side}-color`) &&\n\t\t!isTransparent(styles.getPropertyValue(`border-${side}-color`)) &&\n\t\tstyles.getPropertyValue(`border-${side}-width`) !== '0px'\n\t)\n}\n\nfunction createBorder(\n\tstyles: CSSStyleDeclaration,\n\tbounds: DOMRectReadOnly,\n\tside: Side,\n\tcontext: Pick<TraversalContext, 'svgDocument'>\n): SVGLineElement {\n\t// TODO handle border-radius for non-uniform borders\n\tconst border = context.svgDocument.createElementNS(svgNamespace, 'line')\n\tborder.setAttribute('stroke-linecap', 'square')\n\tconst color = styles.getPropertyValue(`border-${side}-color`)\n\tborder.setAttribute('stroke', color)\n\tborder.setAttribute('stroke-width', styles.getPropertyValue(`border-${side}-width`))\n\n\t// Handle inset/outset borders\n\tconst borderStyle = styles.getPropertyValue(`border-${side}-style`)\n\tif (\n\t\t(borderStyle === 'inset' && (side === 'top' || side === 'left')) ||\n\t\t(borderStyle === 'outset' && (side === 'right' || side === 'bottom'))\n\t) {\n\t\tconst match = color.match(/rgba?\\((\\d+), (\\d+), (\\d+)(?:, ([\\d.]+))?\\)/)\n\t\tif (!match) {\n\t\t\tthrow new Error(`Unexpected color: ${color}`)\n\t\t}\n\t\tconst components = match.slice(1, 4).map(value => parseInt(value, 10) * 0.3)\n\t\tif (match[4]) {\n\t\t\tcomponents.push(parseFloat(match[4]))\n\t\t}\n\t\t// Low-light border\n\t\t// https://stackoverflow.com/questions/4147940/how-do-browsers-determine-which-exact-colors-to-use-for-border-inset-or-outset\n\t\tborder.setAttribute('stroke', `rgba(${components.join(', ')})`)\n\t}\n\n\tif (side === 'top') {\n\t\tborder.setAttribute('x1', bounds.left.toString())\n\t\tborder.setAttribute('x2', bounds.right.toString())\n\t\tborder.setAttribute('y1', bounds.top.toString())\n\t\tborder.setAttribute('y2', bounds.top.toString())\n\t} else if (side === 'left') {\n\t\tborder.setAttribute('x1', bounds.left.toString())\n\t\tborder.setAttribute('x2', bounds.left.toString())\n\t\tborder.setAttribute('y1', bounds.top.toString())\n\t\tborder.setAttribute('y2', bounds.bottom.toString())\n\t} else if (side === 'right') {\n\t\tborder.setAttribute('x1', bounds.right.toString())\n\t\tborder.setAttribute('x2', bounds.right.toString())\n\t\tborder.setAttribute('y1', bounds.top.toString())\n\t\tborder.setAttribute('y2', bounds.bottom.toString())\n\t} else if (side === 'bottom') {\n\t\tborder.setAttribute('x1', bounds.left.toString())\n\t\tborder.setAttribute('x2', bounds.right.toString())\n\t\tborder.setAttribute('y1', bounds.bottom.toString())\n\t\tborder.setAttribute('y2', bounds.bottom.toString())\n\t}\n\treturn border\n}\n\nfunction createSvgAnchor(element: HTMLAnchorElement, context: Pick<TraversalContext, 'svgDocument'>): SVGAElement {\n\tconst svgAnchor = context.svgDocument.createElementNS(svgNamespace, 'a')\n\tif (element.href && !element.href.startsWith('javascript:')) {\n\t\tsvgAnchor.setAttribute('href', element.href)\n\t}\n\tif (element.rel) {\n\t\tsvgAnchor.setAttribute('rel', element.rel)\n\t}\n\tif (element.target) {\n\t\tsvgAnchor.setAttribute('target', element.target)\n\t}\n\tif (element.download) {\n\t\tsvgAnchor.setAttribute('download', element.download)\n\t}\n\treturn svgAnchor\n}\n", "import { hasLabels, isHTMLElement } from './dom.js'\nimport { TraversalContext } from './traversal.js'\n\nconst isStandaloneFooter = (element: Element): boolean =>\n\t!element.closest(\n\t\t'article, aside, main, nav, section, [role=\"article\"], [role=\"complementary\"], [role=\"main\"], [role=\"navigation\"], [role=\"region\"]'\n\t)\n\nexport function getAccessibilityAttributes(\n\telement: Element,\n\t{ labels, getUniqueId }: Pick<TraversalContext, 'labels' | 'getUniqueId'>\n): Map<string, string> {\n\t// https://www.w3.org/TR/html-aria/\n\tconst attributes = new Map<string, string>()\n\tswitch (element.tagName) {\n\t\tcase 'A':\n\t\t\tattributes.set('role', 'link')\n\t\t\tbreak\n\t\tcase 'ARTICLE':\n\t\t\tattributes.set('role', 'article')\n\t\t\tbreak\n\t\tcase 'ASIDE':\n\t\t\tattributes.set('role', 'complementary')\n\t\t\tbreak\n\t\tcase 'BODY':\n\t\t\tattributes.set('role', 'document')\n\t\t\tbreak\n\t\tcase 'BUTTON':\n\t\tcase 'SUMMARY':\n\t\t\tattributes.set('role', 'button')\n\t\t\tbreak\n\t\tcase 'DD':\n\t\t\tattributes.set('role', 'definition')\n\t\t\tbreak\n\t\tcase 'DETAILS':\n\t\t\tattributes.set('role', 'group')\n\t\t\tbreak\n\t\tcase 'DFN':\n\t\t\tattributes.set('role', 'term')\n\t\t\tbreak\n\t\tcase 'DIALOG':\n\t\t\tattributes.set('role', 'dialog')\n\t\t\tbreak\n\t\tcase 'DT':\n\t\t\tattributes.set('role', 'term')\n\t\t\tbreak\n\t\tcase 'FIELDSET':\n\t\t\tattributes.set('role', 'group')\n\t\t\tbreak\n\t\tcase 'FIGURE':\n\t\t\tattributes.set('role', 'figure')\n\t\t\tbreak\n\t\tcase 'FOOTER':\n\t\t\tif (isStandaloneFooter(element)) {\n\t\t\t\tattributes.set('role', 'contentinfo')\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'FORM':\n\t\t\tattributes.set('role', 'form')\n\t\t\tbreak\n\t\tcase 'H1':\n\t\tcase 'H2':\n\t\tcase 'H3':\n\t\tcase 'H4':\n\t\tcase 'H5':\n\t\tcase 'H6':\n\t\t\tattributes.set('role', 'heading')\n\t\t\tattributes.set('aria-level', element.tagName.slice(1))\n\t\t\tbreak\n\t\tcase 'HEADER':\n\t\t\tif (isStandaloneFooter(element)) {\n\t\t\t\tattributes.set('role', 'banner')\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'HR':\n\t\t\tattributes.set('role', 'separator')\n\t\t\tbreak\n\t\tcase 'IMG': {\n\t\t\tconst alt = element.getAttribute('alt')\n\t\t\tif (alt === null || alt !== '') {\n\t\t\t\tattributes.set('role', 'img')\n\t\t\t\tif (alt) {\n\t\t\t\t\tattributes.set('aria-label', alt)\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'INPUT':\n\t\t\tswitch ((element as HTMLInputElement).type) {\n\t\t\t\tcase 'button':\n\t\t\t\tcase 'image':\n\t\t\t\tcase 'reset':\n\t\t\t\tcase 'submit':\n\t\t\t\t\tattributes.set('role', 'button')\n\t\t\t\t\tbreak\n\t\t\t\tcase 'number':\n\t\t\t\t\tattributes.set('role', 'spinbutton')\n\t\t\t\t\tbreak\n\t\t\t\tcase 'range':\n\t\t\t\t\tattributes.set('role', 'slider')\n\t\t\t\t\tbreak\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\tattributes.set('role', 'checkbox')\n\t\t\t\t\tbreak\n\t\t\t\tcase 'radio':\n\t\t\t\t\tattributes.set('role', 'radio')\n\t\t\t\t\tbreak\n\t\t\t\tcase 'email':\n\t\t\t\tcase 'tel':\n\t\t\t\t\tif (!element.hasAttribute('list')) {\n\t\t\t\t\t\tattributes.set('role', 'textbox')\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'LI':\n\t\t\tif (\n\t\t\t\telement.parentElement?.tagName === 'OL' ||\n\t\t\t\telement.parentElement?.tagName === 'UL' ||\n\t\t\t\telement.parentElement?.tagName === 'MENU'\n\t\t\t) {\n\t\t\t\tattributes.set('role', 'listitem')\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'LINK':\n\t\t\tif ((element as HTMLLinkElement).href) {\n\t\t\t\tattributes.set('role', 'link')\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'MAIN':\n\t\t\tattributes.set('role', 'main')\n\t\t\tbreak\n\t\tcase 'MATH':\n\t\t\tattributes.set('role', 'math')\n\t\t\tbreak\n\t\tcase 'OL':\n\t\tcase 'UL':\n\t\tcase 'MENU':\n\t\t\tattributes.set('role', 'list')\n\t\t\tbreak\n\t\tcase 'NAV':\n\t\t\tattributes.set('role', 'navigation')\n\t\t\tbreak\n\t\tcase 'OPTION':\n\t\t\tattributes.set('role', 'option')\n\t\t\tbreak\n\t\tcase 'PROGRESS':\n\t\t\tattributes.set('role', 'progressbar')\n\t\t\tbreak\n\t\tcase 'SECTION':\n\t\t\tattributes.set('role', 'region')\n\t\t\tbreak\n\t\tcase 'SELECT':\n\t\t\tattributes.set(\n\t\t\t\t'role',\n\t\t\t\t!element.hasAttribute('multiple') && (element as HTMLSelectElement).size <= 1 ? 'combobox' : 'listbox'\n\t\t\t)\n\t\t\tbreak\n\t\tcase 'TABLE':\n\t\t\tattributes.set('role', 'table')\n\t\t\tbreak\n\t\tcase 'THEAD':\n\t\tcase 'TBODY':\n\t\tcase 'TFOOT':\n\t\t\tattributes.set('role', 'rowgroup')\n\t\t\tbreak\n\t\tcase 'TEXTAREA':\n\t\t\tattributes.set('role', 'textbox')\n\t\t\tbreak\n\t\tcase 'TD':\n\t\t\tattributes.set('role', 'cell')\n\t\t\tbreak\n\t\tcase 'TH':\n\t\t\tattributes.set('role', element.closest('thead') ? 'columnheader' : 'rowheader')\n\t\t\tbreak\n\t\tcase 'TR':\n\t\t\tattributes.set('role', 'tablerow')\n\t\t\tbreak\n\t}\n\tif (element.hasAttribute('disabled')) {\n\t\tattributes.set('aria-disabled', 'true')\n\t}\n\tif (element.hasAttribute('placeholder')) {\n\t\tattributes.set('aria-placeholder', element.getAttribute('placeholder') || '')\n\t}\n\tconst tabIndex = element.getAttribute('tabindex')\n\tif (tabIndex) {\n\t\tattributes.set('tabindex', tabIndex)\n\t}\n\tif (isHTMLElement(element) && hasLabels(element) && element.labels) {\n\t\t// Need to invert the label[for] / [aria-labelledby] relationship\n\t\tattributes.set(\n\t\t\t'aria-labelledby',\n\t\t\t[...element.labels]\n\t\t\t\t.map(label => {\n\t\t\t\t\tlet labelId = label.id || labels.get(label)\n\t\t\t\t\tif (!labelId) {\n\t\t\t\t\t\tlabelId = getUniqueId('label')\n\t\t\t\t\t\tlabels.set(label, labelId)\n\t\t\t\t\t}\n\t\t\t\t\treturn labelId\n\t\t\t\t})\n\t\t\t\t.join(' ')\n\t\t)\n\t}\n\n\tfor (const attribute of element.attributes) {\n\t\tif (attribute.name.startsWith('aria-')) {\n\t\t\tattributes.set(attribute.name, attribute.value)\n\t\t}\n\t}\n\tconst customRole = element.getAttribute('role')\n\tif (customRole) {\n\t\tattributes.set('role', customRole)\n\t}\n\treturn attributes\n}\n", "/* eslint-disable id-length */\nimport * as gradientParser from 'gradient-parser'\n\nimport { svgNamespace } from './dom.js'\nimport { TraversalContext } from './traversal.js'\n\nconst positionsForOrientation = (\n\torientation: gradientParser.Gradient['orientation']\n): Record<'x1' | 'x2' | 'y1' | 'y2', string> => {\n\tconst positions = {\n\t\tx1: '0%',\n\t\tx2: '0%',\n\t\ty1: '0%',\n\t\ty2: '0%',\n\t}\n\n\tif (orientation?.type === 'angular') {\n\t\tconst anglePI = orientation.value * (Math.PI / 180)\n\t\tpositions.x1 = `${Math.round(50 + Math.sin(anglePI + Math.PI) * 50)}%`\n\t\tpositions.y1 = `${Math.round(50 + Math.cos(anglePI) * 50)}%`\n\t\tpositions.x2 = `${Math.round(50 + Math.sin(anglePI) * 50)}%`\n\t\tpositions.y2 = `${Math.round(50 + Math.cos(anglePI + Math.PI) * 50)}%`\n\t} else if (orientation?.type === 'directional') {\n\t\tswitch (orientation.value) {\n\t\t\tcase 'left':\n\t\t\t\tpositions.x1 = '100%'\n\t\t\t\tbreak\n\n\t\t\tcase 'top':\n\t\t\t\tpositions.y1 = '100%'\n\t\t\t\tbreak\n\n\t\t\tcase 'right':\n\t\t\t\tpositions.x2 = '100%'\n\t\t\t\tbreak\n\n\t\t\tcase 'bottom':\n\t\t\t\tpositions.y2 = '100%'\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn positions\n}\n\nexport function convertLinearGradient(\n\tcss: string,\n\t{ svgDocument }: Pick<TraversalContext, 'svgDocument'>\n): SVGLinearGradientElement {\n\tconst { orientation, colorStops } = gradientParser.parse(css)[0]!\n\tconst { x1, x2, y1, y2 } = positionsForOrientation(orientation)\n\n\tconst getColorStops = (colorStop: gradientParser.ColorStop, index: number): SVGStopElement => {\n\t\tconst offset = `${(index / (colorStops.length - 1)) * 100}%`\n\t\tlet stopColor = 'rgb(0,0,0)'\n\t\tlet stopOpacity = 1\n\n\t\tswitch (colorStop.type) {\n\t\t\tcase 'rgb': {\n\t\t\t\tconst [red, green, blue] = colorStop.value\n\t\t\t\tstopColor = `rgb(${red},${green},${blue})`\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'rgba': {\n\t\t\t\tconst [red, green, blue, alpha] = colorStop.value\n\t\t\t\tstopColor = `rgb(${red},${green},${blue})`\n\t\t\t\tstopOpacity = alpha\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'hex': {\n\t\t\t\tstopColor = `#${colorStop.value}`\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tcase 'literal': {\n\t\t\t\tstopColor = colorStop.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst stop = svgDocument.createElementNS(svgNamespace, 'stop')\n\t\tstop.setAttribute('offset', offset)\n\t\tstop.setAttribute('stop-color', stopColor)\n\t\tstop.setAttribute('stop-opacity', stopOpacity.toString())\n\t\treturn stop\n\t}\n\n\tconst linearGradient = svgDocument.createElementNS(svgNamespace, 'linearGradient')\n\tlinearGradient.setAttribute('x1', x1)\n\tlinearGradient.setAttribute('y1', y1)\n\tlinearGradient.setAttribute('x2', x2)\n\tlinearGradient.setAttribute('y2', y2)\n\tlinearGradient.append(...colorStops.map(getColorStops))\n\n\treturn linearGradient\n}\n", "import cssValueParser from 'postcss-value-parser'\n\nimport { parseCSSLength } from './css.js'\nimport {\n\tisElement,\n\tisSVGAnchorElement,\n\tisSVGElement,\n\tisSVGGraphicsElement,\n\tisSVGSVGElement,\n\tisSVGTextContentElement,\n\tisTextNode,\n\tsvgNamespace,\n} from './dom.js'\nimport { copyTextStyles } from './text.js'\nimport { TraversalContext } from './traversal.js'\nimport { assert, diagonale } from './util.js'\n\n/**\n * Recursively clone an `<svg>` element, inlining it into the output SVG document with the necessary transforms.\n */\nexport function handleSvgNode(node: Node, context: SvgTraversalContext): void {\n\tif (isElement(node)) {\n\t\tif (!isSVGElement(node)) {\n\t\t\treturn\n\t\t}\n\t\thandleSvgElement(node, context)\n\t} else if (isTextNode(node)) {\n\t\tconst clonedTextNode = node.cloneNode(true) as Text\n\t\tcontext.currentSvgParent.append(clonedTextNode)\n\t}\n}\n\nconst ignoredElements = new Set(['script', 'style', 'foreignElement'])\n\ninterface SvgTraversalContext extends Pick<TraversalContext, 'svgDocument' | 'currentSvgParent' | 'options'> {\n\t/**\n\t * A prefix to use for all ID to make them unique inside the output SVG document.\n\t */\n\treadonly idPrefix: string\n}\n\nconst URL_ID_REFERENCE_REGEX = /\\burl\\([\"']?#/\nexport function handleSvgElement(element: SVGElement, context: SvgTraversalContext): void {\n\tif (ignoredElements.has(element.tagName)) {\n\t\treturn\n\t}\n\n\tlet elementToAppend: SVGElement\n\tif (isSVGSVGElement(element)) {\n\t\tconst contentContainer = context.svgDocument.createElementNS(svgNamespace, 'g')\n\t\telementToAppend = contentContainer\n\t\tcontentContainer.classList.add('svg-content', ...element.classList)\n\t\tcontentContainer.dataset.viewBox = element.getAttribute('viewBox') ?? ''\n\t\tcontentContainer.dataset.width = element.getAttribute('width') ?? ''\n\t\tcontentContainer.dataset.height = element.getAttribute('height') ?? ''\n\n\t\t// Since the SVG is getting inlined into the output SVG, we need to transform its contents according to its\n\t\t// viewBox, width, height and preserveAspectRatio. We can use getScreenCTM() for this on one of its\n\t\t// SVGGraphicsElement children (in Chrome calling it on the <svg> works too, but not in Firefox:\n\t\t// https://bugzilla.mozilla.org/show_bug.cgi?id=873106).\n\t\tfor (const child of element.children) {\n\t\t\tif (!isSVGGraphicsElement(child)) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tlet viewBoxTransformMatrix =\n\t\t\t\t// When this function is called on an inline <svg> element in the original DOM, we want\n\t\t\t\t// getScreenCTM() to map it to the DOM coordinate system. When this function is called from\n\t\t\t\t// inlineResources() the <svg> is already embedded into the output <svg>. In that case the output\n\t\t\t\t// SVG already has a viewBox, and the coordinate system of the SVG is not equal to the coordinate\n\t\t\t\t// system of the screen, therefor we need to use getCTM() to map it into the output SVG's\n\t\t\t\t// coordinate system.\n\t\t\t\tchild.ownerDocument !== context.svgDocument &&\n\t\t\t\t// When we inline an SVG, we put a transform on it for the getScreenCTM(). When that SVG also\n\t\t\t\t// contains another SVG, the inner SVG should just get transformed relative to the outer SVG, not\n\t\t\t\t// relative to the screen, because the transforms will stack in the output SVG.\n\t\t\t\t!element.parentElement?.closest('svg')\n\t\t\t\t\t? child.getScreenCTM()\n\t\t\t\t\t: child.getCTM()\n\n\t\t\t// This should only be null if the <svg> is `display: none`\n\t\t\tif (!viewBoxTransformMatrix) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\t// Make sure to handle a child that already has a transform. That transform should only apply to the\n\t\t\t// child, not to the entire SVG contents, so we need to calculate it out.\n\t\t\tif (child.transform.baseVal.numberOfItems > 0) {\n\t\t\t\tchild.transform.baseVal.consolidate()\n\t\t\t\tconst existingTransform = child.transform.baseVal.getItem(0).matrix\n\t\t\t\tviewBoxTransformMatrix = viewBoxTransformMatrix.multiply(existingTransform.inverse())\n\t\t\t}\n\n\t\t\tcontentContainer.transform.baseVal.appendItem(\n\t\t\t\tcontentContainer.transform.baseVal.createSVGTransformFromMatrix(viewBoxTransformMatrix)\n\t\t\t)\n\t\t\tbreak\n\t\t}\n\t} else {\n\t\t// Clone element\n\t\tif (isSVGAnchorElement(element) && !context.options.keepLinks) {\n\t\t\telementToAppend = context.svgDocument.createElementNS(svgNamespace, 'g')\n\t\t} else {\n\t\t\telementToAppend = element.cloneNode(false) as SVGElement\n\t\t}\n\n\t\t// Remove event handlers\n\t\tfor (const attribute of elementToAppend.attributes) {\n\t\t\tif (attribute.localName.startsWith('on')) {\n\t\t\t\telementToAppend.attributes.removeNamedItemNS(attribute.namespaceURI, attribute.localName)\n\t\t\t} else if (attribute.localName === 'href' && attribute.value.startsWith('javascript:')) {\n\t\t\t\telementToAppend.attributes.removeNamedItemNS(attribute.namespaceURI, attribute.localName)\n\t\t\t}\n\t\t}\n\n\t\tconst window = element.ownerDocument.defaultView\n\t\tassert(window, \"Element's ownerDocument has no defaultView\")\n\n\t\tconst svgViewportElement = element.ownerSVGElement\n\t\tassert(svgViewportElement, 'Expected element to have ownerSVGElement')\n\n\t\tconst styles = window.getComputedStyle(element)\n\n\t\tif (isSVGGraphicsElement(element)) {\n\t\t\tcopyGraphicalPresentationAttributes(styles, elementToAppend, svgViewportElement.viewBox.animVal)\n\n\t\t\tif (isSVGTextContentElement(element)) {\n\t\t\t\tcopyTextStyles(styles, elementToAppend)\n\t\t\t}\n\t\t}\n\n\t\t// Namespace ID references url(#...)\n\t\tfor (const attribute of elementToAppend.attributes) {\n\t\t\tif (attribute.localName === 'href') {\n\t\t\t\tif (attribute.value.startsWith('#')) {\n\t\t\t\t\tattribute.value = attribute.value.replace('#', `#${context.idPrefix}`)\n\t\t\t\t}\n\t\t\t} else if (URL_ID_REFERENCE_REGEX.test(attribute.value)) {\n\t\t\t\tattribute.value = rewriteUrlIdReferences(attribute.value, context)\n\t\t\t}\n\t\t}\n\t\tfor (const property of elementToAppend.style) {\n\t\t\tconst value = elementToAppend.style.getPropertyValue(property)\n\t\t\tif (URL_ID_REFERENCE_REGEX.test(value)) {\n\t\t\t\telementToAppend.style.setProperty(\n\t\t\t\t\tproperty,\n\t\t\t\t\trewriteUrlIdReferences(value, context),\n\t\t\t\t\telementToAppend.style.getPropertyPriority(property)\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Make sure all IDs are unique\n\tif (elementToAppend.id) {\n\t\telementToAppend.id = context.idPrefix + elementToAppend.id\n\t}\n\n\tcontext.currentSvgParent.append(elementToAppend)\n\tfor (const child of element.childNodes) {\n\t\thandleSvgNode(child, { ...context, currentSvgParent: elementToAppend })\n\t}\n}\n\nconst graphicalPresentationAttributes = [\n\t'alignment-baseline',\n\t'baseline-shift',\n\t// 'clip',\n\t'clip-path',\n\t'clip-rule',\n\t'color',\n\t'color-interpolation',\n\t'color-interpolation-filters',\n\t// 'color-profile',\n\t'color-rendering',\n\t// 'cursor',\n\t'direction',\n\t// 'display',\n\t// 'enable-background',\n\t'fill',\n\t'fill-opacity',\n\t'fill-rule',\n\t'filter',\n\t'flood-color',\n\t'flood-opacity',\n\t'image-rendering',\n\t'lighting-color',\n\t'marker-end',\n\t'marker-mid',\n\t'marker-start',\n\t'mask',\n\t'opacity',\n\t// 'overflow',\n\t'pointer-events',\n\t'shape-rendering',\n\t// 'solid-color',\n\t// 'solid-opacity',\n\t'stop-color',\n\t'stop-opacity',\n\t'stroke',\n\t'stroke-dasharray',\n\t'stroke-dashoffset',\n\t'stroke-linecap',\n\t'stroke-linejoin',\n\t'stroke-miterlimit',\n\t'stroke-opacity',\n\t'stroke-width',\n\t'transform',\n\t'vector-effect',\n\t'visibility',\n] as const\n\nconst defaults: Record<typeof graphicalPresentationAttributes[number], string> = {\n\t'alignment-baseline': 'auto',\n\t'baseline-shift': '0px',\n\t'clip-path': 'none',\n\t'clip-rule': 'nonzero',\n\t'color-interpolation-filters': 'linearrgb',\n\t'color-interpolation': 'srgb',\n\t'color-rendering': 'auto',\n\t'fill-opacity': '1',\n\t'fill-rule': 'nonzero',\n\t'flood-color': 'rgb(0, 0, 0)',\n\t'flood-opacity': '1',\n\t'image-rendering': 'auto',\n\t'lighting-color': 'rgb(255, 255, 255)',\n\t'marker-end': 'none',\n\t'marker-mid': 'none',\n\t'marker-start': 'none',\n\t'pointer-events': 'auto',\n\t'shape-rendering': 'auto',\n\t'stop-color': 'rgb(0, 0, 0)',\n\t'stop-opacity': '1',\n\t'stroke-dasharray': 'none',\n\t'stroke-dashoffset': '0px',\n\t'stroke-linecap': 'butt',\n\t'stroke-linejoin': 'miter',\n\t'stroke-miterlimit': '4',\n\t'stroke-opacity': '1',\n\t'stroke-width': '1px',\n\t'vector-effect': 'none',\n\tcolor: '',\n\tdirection: 'ltr',\n\tfill: '',\n\tfilter: 'none',\n\tmask: 'none',\n\topacity: '1',\n\tstroke: '',\n\ttransform: 'none',\n\tvisibility: 'visible',\n}\n\n/**\n * Prefixes all ID references of the form `url(#id)` in the given string.\n */\nfunction rewriteUrlIdReferences(value: string, { idPrefix }: Pick<SvgTraversalContext, 'idPrefix'>): string {\n\tconst parsedValue = cssValueParser(value)\n\tparsedValue.walk(node => {\n\t\tif (node.type !== 'function' || node.value !== 'url') {\n\t\t\treturn\n\t\t}\n\t\tconst urlArgument = node.nodes[0]\n\t\tif (!urlArgument) {\n\t\t\treturn\n\t\t}\n\t\turlArgument.value = urlArgument.value.replace('#', `#${idPrefix}`)\n\t})\n\treturn cssValueParser.stringify(parsedValue.nodes)\n}\n\nfunction copyGraphicalPresentationAttributes(\n\tstyles: CSSStyleDeclaration,\n\ttarget: SVGElement,\n\tviewBox: DOMRectReadOnly\n): void {\n\tfor (const attribute of graphicalPresentationAttributes) {\n\t\tlet value: string | number = styles.getPropertyValue(attribute)\n\t\tif (value && value !== defaults[attribute]) {\n\t\t\tif (value.endsWith('%')) {\n\t\t\t\t// E.g. https://svgwg.org/svg2-draft/painting.html#StrokeWidth\n\t\t\t\t// Percentages:\trefer to the normalized diagonal of the current SVG viewport (see Units)\n\t\t\t\tvalue = parseCSSLength(value, diagonale(viewBox)) ?? 0\n\t\t\t}\n\t\t\ttarget.setAttribute(attribute, value.toString())\n\t\t}\n\t}\n}\n", "export const createIdGenerator = (): ((prefix: string) => string) => {\n\tconst nextCounts = new Map<string, number>()\n\treturn prefix => {\n\t\tconst count = nextCounts.get(prefix) ?? 1\n\t\tnextCounts.set(prefix, count + 1)\n\t\treturn `${prefix}${count}`\n\t}\n}\n\nexport const isDefined = <T>(value: T): value is NonNullable<T> => value !== null && value !== undefined\n\n/**\n * Check if two rectangles (e.g. an element and the capture area) intersect.\n */\nexport const doRectanglesIntersect = (a: DOMRectReadOnly, b: DOMRectReadOnly): boolean =>\n\t!(\n\t\ta.bottom < b.top || // A is above B\n\t\ta.top > b.bottom || // A is below B\n\t\ta.right < b.left || // A is left of B\n\t\t// A is right of B\n\t\ta.left > b.right\n\t)\n\n/**\n * Calculates the length of the diagonale of a given rectangle.\n */\nexport function diagonale(box: DOMRectReadOnly): number {\n\treturn Math.sqrt(box.width ** 2 + box.height ** 2)\n}\n\nexport function withTimeout<T>(timeout: number, message: string, func: () => Promise<T>): Promise<T> {\n\treturn Promise.race([\n\t\tfunc(),\n\t\tnew Promise<never>((resolve, reject) => setTimeout(() => reject(new Error(message)), timeout)),\n\t])\n}\n\n/**\n * Type guard to check if an object is a specific member of a tagged union type.\n *\n * @param key The key to check\n * @param value The value the key has to be.\n */\nexport const isTaggedUnionMember = <T extends object, K extends keyof T, V extends T[K]>(key: K, value: V) => (\n\tobject: T\n): object is T & Record<K, V> => object[key] === value\n\nexport function assert(condition: any, message: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(message)\n\t}\n}\n", "import { isVisible } from './css.js'\nimport { svgNamespace } from './dom.js'\nimport { TraversalContext } from './traversal.js'\nimport { doRectanglesIntersect, assert } from './util.js'\n\nexport function handleTextNode(textNode: Text, context: TraversalContext): void {\n\tif (!textNode.ownerDocument.defaultView) {\n\t\tthrow new Error(\"Element's ownerDocument has no defaultView\")\n\t}\n\tconst window = textNode.ownerDocument.defaultView\n\tconst parentElement = textNode.parentElement!\n\tconst styles = window.getComputedStyle(parentElement)\n\tif (!isVisible(styles)) {\n\t\treturn\n\t}\n\n\tconst selection = window.getSelection()\n\tassert(\n\t\tselection,\n\t\t'Could not obtain selection from window. Selection is needed for detecting whitespace collapsing in text.'\n\t)\n\n\tconst svgTextElement = context.svgDocument.createElementNS(svgNamespace, 'text')\n\n\t// Copy text styles\n\t// https://css-tricks.com/svg-properties-and-css\n\tcopyTextStyles(styles, svgTextElement)\n\n\tconst tabSize = parseInt(styles.tabSize, 10)\n\n\t// Make sure the y attribute is the bottom of the box, not the baseline\n\tsvgTextElement.setAttribute('dominant-baseline', 'text-after-edge')\n\n\tconst lineRange = textNode.ownerDocument.createRange()\n\tlineRange.setStart(textNode, 0)\n\tlineRange.setEnd(textNode, 0)\n\twhile (true) {\n\t\tconst addTextSpanForLineRange = (): void => {\n\t\t\tif (lineRange.collapsed) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst lineRectangle = lineRange.getClientRects()[0]!\n\t\t\tif (!doRectanglesIntersect(lineRectangle, context.options.captureArea)) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst textSpan = context.svgDocument.createElementNS(svgNamespace, 'tspan')\n\t\t\ttextSpan.setAttribute('xml:space', 'preserve')\n\n\t\t\t// lineRange.toString() returns the text including whitespace.\n\t\t\t// by adding the range to a Selection, then getting the text from that selection,\n\t\t\t// we can let the DOM handle whitespace collapsing the same way as innerText (but for a Range).\n\t\t\t// For this to work, the parent element must not forbid user selection.\n\t\t\tconst previousUserSelect = parentElement.style.userSelect\n\t\t\tparentElement.style.userSelect = 'all'\n\t\t\ttry {\n\t\t\t\tselection.removeAllRanges()\n\t\t\t\tselection.addRange(lineRange)\n\t\t\t\ttextSpan.textContent = selection\n\t\t\t\t\t.toString()\n\t\t\t\t\t// SVG does not support tabs in text. Tabs get rendered as one space character. Convert the\n\t\t\t\t\t// tabs to spaces according to tab-size instead.\n\t\t\t\t\t// Ideally we would keep the tab and create offset tspans.\n\t\t\t\t\t.replace(/\\t/g, ' '.repeat(tabSize))\n\t\t\t} finally {\n\t\t\t\tparentElement.style.userSelect = previousUserSelect\n\t\t\t\tselection.removeAllRanges()\n\t\t\t}\n\n\t\t\ttextSpan.setAttribute('x', lineRectangle.x.toString())\n\t\t\ttextSpan.setAttribute('y', lineRectangle.bottom.toString()) // intentionally bottom because of dominant-baseline setting\n\t\t\ttextSpan.setAttribute('textLength', lineRectangle.width.toString())\n\t\t\ttextSpan.setAttribute('lengthAdjust', 'spacingAndGlyphs')\n\t\t\tsvgTextElement.append(textSpan)\n\t\t}\n\t\ttry {\n\t\t\tlineRange.setEnd(textNode, lineRange.endOffset + 1)\n\t\t} catch (error) {\n\t\t\tif ((error as DOMException).code === DOMException.INDEX_SIZE_ERR) {\n\t\t\t\t// Reached the end\n\t\t\t\taddTextSpanForLineRange()\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tthrow error\n\t\t}\n\t\t// getClientRects() returns one rectangle for each line of a text node.\n\t\tconst lineRectangles = lineRange.getClientRects()\n\t\t// If no lines\n\t\tif (!lineRectangles[0]) {\n\t\t\t// Pure whitespace text nodes are collapsed and not rendered.\n\t\t\treturn\n\t\t}\n\t\t// If two (unique) lines\n\t\t// For some reason, Chrome returns 2 identical DOMRects for text with text-overflow: ellipsis.\n\t\tif (lineRectangles[1] && lineRectangles[0].top !== lineRectangles[1].top) {\n\t\t\t// Crossed a line break.\n\t\t\t// Go back one character to select exactly the previous line.\n\t\t\tlineRange.setEnd(textNode, lineRange.endOffset - 1)\n\t\t\t// Add <tspan> for exactly that line\n\t\t\taddTextSpanForLineRange()\n\t\t\t// Start on the next line.\n\t\t\tlineRange.setStart(textNode, lineRange.endOffset)\n\t\t}\n\t}\n\n\tcontext.currentSvgParent.append(svgTextElement)\n}\n\nexport const textAttributes = new Set([\n\t'color',\n\t'dominant-baseline',\n\t'font-family',\n\t'font-size',\n\t'font-size-adjust',\n\t'font-stretch',\n\t'font-style',\n\t'font-variant',\n\t'font-weight',\n\t'direction',\n\t'letter-spacing',\n\t'text-decoration',\n\t'text-anchor',\n\t'text-decoration',\n\t'text-rendering',\n\t'unicode-bidi',\n\t'word-spacing',\n\t'writing-mode',\n\t'user-select',\n] as const)\nexport function copyTextStyles(styles: CSSStyleDeclaration, svgElement: SVGElement): void {\n\tfor (const textProperty of textAttributes) {\n\t\tconst value = styles.getPropertyValue(textProperty)\n\t\tif (value) {\n\t\t\tsvgElement.setAttribute(textProperty, value)\n\t\t}\n\t}\n\t// tspan uses fill, CSS uses color\n\tsvgElement.setAttribute('fill', styles.color)\n}\n", "import { isElement, isTextNode } from './dom.js'\nimport { handleElement } from './element.js'\nimport { StackingLayers } from './stacking.js'\nimport { handleTextNode } from './text.js'\n\nexport interface DomToSvgOptions {\n\t/**\n\t * To visual area to contrain the SVG too.\n\t * Elements that do not intersect the capture area are not included in the SVG.\n\t */\n\tcaptureArea?: DOMRectReadOnly\n\n\t/**\n\t * Whether to include `<a>` tags in the SVG so links are still interactive.\n\t *\n\t * @default true\n\t */\n\tkeepLinks?: boolean\n}\n\nexport interface TraversalContext {\n\treadonly svgDocument: XMLDocument\n\treadonly currentSvgParent: SVGElement\n\treadonly parentStackingLayer: SVGGElement\n\treadonly stackingLayers: StackingLayers\n\n\t/**\n\t * Masks for ancestor elements (that are `overflow: hidden`) affecting the current element, from closest to furthest.\n\t */\n\treadonly ancestorMasks: { mask: SVGMaskElement; forElement: Element }[]\n\n\treadonly labels: Map<HTMLLabelElement, string>\n\treadonly getUniqueId: (prefix: string) => string\n\treadonly options: Required<DomToSvgOptions>\n}\n\nexport function walkNode(node: Node, context: TraversalContext): void {\n\tif (isElement(node)) {\n\t\thandleElement(node, context)\n\t} else if (isTextNode(node)) {\n\t\thandleTextNode(node, context)\n\t}\n}\n", "import * as postcss from 'postcss'\nimport cssValueParser from 'postcss-value-parser'\n\nimport { unescapeStringValue } from './css.js'\nimport { isSVGImageElement, isSVGStyleElement, svgNamespace } from './dom.js'\nimport { handleSvgNode } from './svg.js'\nimport { withTimeout, assert } from './util.js'\n\ndeclare global {\n\tinterface SVGStyleElement extends LinkStyle {}\n}\n\n/**\n * Inlines all external resources of the given element, such as fonts and images.\n *\n * Fonts and binary images are inlined as Base64 data: URIs.\n *\n * Images that reference another SVG are inlined by inlining the embedded SVG into the output SVG.\n * Note: The passed element needs to be attached to a document with a window (`defaultView`) for this so that `getComputedStyle()` can be used.\n */\nexport async function inlineResources(element: Element): Promise<void> {\n\tawait Promise.all([\n\t\t...[...element.children].map(inlineResources),\n\t\t(async () => {\n\t\t\tif (isSVGImageElement(element)) {\n\t\t\t\tconst blob = await withTimeout(10000, `Timeout fetching ${element.href.baseVal}`, () =>\n\t\t\t\t\tfetchResource(element.href.baseVal)\n\t\t\t\t)\n\t\t\t\tif (blob.type === 'image/svg+xml') {\n\t\t\t\t\t// If the image is an SVG, inline it into the output SVG.\n\t\t\t\t\t// Some tools (e.g. Figma) do not support nested SVG.\n\n\t\t\t\t\tassert(element.ownerDocument, 'Expected <image> element to have ownerDocument')\n\n\t\t\t\t\t// Replace <image> with inline <svg>\n\t\t\t\t\tconst embeddedSvgDocument = new DOMParser().parseFromString(\n\t\t\t\t\t\tawait blob.text(),\n\t\t\t\t\t\t'image/svg+xml'\n\t\t\t\t\t) as XMLDocument\n\t\t\t\t\tconst svgRoot = (embeddedSvgDocument.documentElement as Element) as SVGSVGElement\n\t\t\t\t\tsvgRoot.setAttribute('x', element.getAttribute('x')!)\n\t\t\t\t\tsvgRoot.setAttribute('y', element.getAttribute('y')!)\n\t\t\t\t\tsvgRoot.setAttribute('width', element.getAttribute('width')!)\n\t\t\t\t\tsvgRoot.setAttribute('height', element.getAttribute('height')!)\n\t\t\t\t\tsvgRoot.remove()\n\t\t\t\t\telement.replaceWith(svgRoot)\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// Let handleSvgNode inline the <svg> into a simple <g>\n\t\t\t\t\t\tconst svgDocument = element.ownerDocument\n\t\t\t\t\t\tconst mount = svgDocument.createElementNS(svgNamespace, 'g')\n\t\t\t\t\t\tassert(element.id, '<image> element must have ID')\n\t\t\t\t\t\thandleSvgNode(svgRoot, {\n\t\t\t\t\t\t\tcurrentSvgParent: mount,\n\t\t\t\t\t\t\tsvgDocument,\n\t\t\t\t\t\t\tidPrefix: `${element.id}-`,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t// SVGs embedded through <img> are never interactive.\n\t\t\t\t\t\t\t\tkeepLinks: false,\n\t\t\t\t\t\t\t\tcaptureArea: svgRoot.viewBox.baseVal,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t// Replace the <svg> element with the <g>\n\t\t\t\t\t\tmount.dataset.tag = 'img'\n\t\t\t\t\t\tmount.setAttribute('role', 'img')\n\t\t\t\t\t\tsvgRoot.replaceWith(mount)\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tsvgRoot.remove()\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Inline binary images as base64 data: URL\n\t\t\t\t\tconst dataUrl = await blobToDataURL(blob)\n\t\t\t\t\telement.dataset.src = element.href.baseVal\n\t\t\t\t\telement.setAttribute('xlink:href', dataUrl.href)\n\t\t\t\t}\n\t\t\t} else if (isSVGStyleElement(element)) {\n\t\t\t\ttry {\n\t\t\t\t\tconst promises: Promise<void>[] = []\n\t\t\t\t\t// Walk the stylesheet and replace @font-face src URLs with data URIs\n\t\t\t\t\tconst parsedSheet = postcss.parse(element.textContent ?? '')\n\t\t\t\t\tparsedSheet.walkAtRules('font-face', fontFaceRule => {\n\t\t\t\t\t\tfontFaceRule.walkDecls('src', sourceDeclaration => {\n\t\t\t\t\t\t\tconst parsedSourceValue = cssValueParser(sourceDeclaration.value)\n\t\t\t\t\t\t\tparsedSourceValue.walk(node => {\n\t\t\t\t\t\t\t\tif (node.type === 'function' && node.value === 'url' && node.nodes[0]) {\n\t\t\t\t\t\t\t\t\tconst urlArgumentNode = node.nodes[0]\n\t\t\t\t\t\t\t\t\tif (urlArgumentNode.type === 'string' || urlArgumentNode.type === 'word') {\n\t\t\t\t\t\t\t\t\t\tpromises.push(inlineCssFontUrlArgumentNode(urlArgumentNode))\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tsourceDeclaration.value = cssValueParser.stringify(parsedSourceValue.nodes)\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\tawait Promise.all(promises)\n\t\t\t\t\t// Update <style> element with updated CSS\n\t\t\t\t\telement.textContent = parsedSheet.toString()\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('Error inlining stylesheet', element.sheet, error)\n\t\t\t\t}\n\t\t\t}\n\t\t})().catch(error => {\n\t\t\tconsole.error('Error inlining resource for element', element, error)\n\t\t}),\n\t])\n}\n\n/**\n * Fetches the font from a `url()` CSS node and replaces it with a `data:` URI of the content.\n */\nasync function inlineCssFontUrlArgumentNode(\n\turlArgumentNode: cssValueParser.StringNode | cssValueParser.WordNode\n): Promise<void> {\n\ttry {\n\t\tconst url = new URL(unescapeStringValue(urlArgumentNode.value))\n\t\tconst blob = await withTimeout(10000, `Timeout fetching ${url.href}`, () => fetchResource(url.href))\n\t\tif (\n\t\t\t!blob.type.startsWith('font/') &&\n\t\t\t!blob.type.startsWith('application/font-') &&\n\t\t\t!blob.type.startsWith('application/x-font-') &&\n\t\t\t!blob.type.startsWith('image/svg+xml') &&\n\t\t\t!blob.type.startsWith('application/vnd.ms-fontobject')\n\t\t) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid response MIME type inlining font at ${url.href}: Expected font MIME type, got ${blob.type}`\n\t\t\t)\n\t\t}\n\t\tconst dataUrl = await blobToDataURL(blob)\n\t\turlArgumentNode.value = dataUrl.href\n\t} catch (error) {\n\t\tconsole.error(`Error inlining ${urlArgumentNode.value}`, error)\n\t}\n}\n\nasync function fetchResource(url: string): Promise<Blob> {\n\tassert(url, 'No URL passed')\n\tconst headers = new Headers()\n\tconst response = await fetch(url, { headers })\n\tif (!response.ok) {\n\t\tthrow new Error(response.statusText)\n\t}\n\tconst blob = await response.blob()\n\treturn blob\n}\n\nasync function blobToDataURL(blob: Blob): Promise<URL> {\n\tconst reader = new FileReader()\n\tawait new Promise<void>((resolve, reject) => {\n\t\treader.addEventListener('error', () => reject(new Error('Error loading resource with FileLoader')))\n\t\treader.addEventListener('load', () => resolve())\n\t\treader.readAsDataURL(blob)\n\t})\n\treturn new URL(reader.result as string)\n}\n"],
  "mappings": "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",
  "names": ["CssSyntaxError", "plugin", "spacing", "root", "stringify", "CssSyntaxError", "stringify", "Node", "defaults", "Node", "Comment", "defaults", "Node", "Declaration", "defaults", "Comment", "Declaration", "Node", "AtRule", "parse", "Root", "Rule", "Container", "decl", "Container", "AtRule", "defaults", "Container", "Processor", "Document", "defaults", "CssSyntaxError", "Input", "Container", "Processor", "Root", "defaults", "list", "Container", "list", "Rule", "defaults", "AtRule", "Comment", "Declaration", "Input", "Root", "Rule", "fromJSON", "defaults", "Input", "stringify", "root", "AtRule", "Comment", "Declaration", "Root", "Rule", "Container", "Input", "parse", "Warning", "Warning", "Result", "root", "Container", "Document", "parse", "Result", "Root", "stringify", "postcss", "root", "plugin", "parse", "Result", "stringify", "root", "Document", "Root", "Processor", "plugin", "AtRule", "Comment", "Container", "CssSyntaxError", "Declaration", "Document", "fromJSON", "Input", "list", "Node", "parse", "Processor", "Result", "Root", "Rule", "stringify", "Warning", "postcss", "plugin", "defaults", "require_parse", "require_stringify", "stringify", "parse", "stringify", "require_node", "root", "postcss", "Node", "import_postcss_value_parser", "rule", "import_postcss_value_parser", "window", "window", "cssValueParser", "window", "cssValueParser", "import_postcss_value_parser", "cssValueParser", "document", "rule", "cssValueParser"]
}
